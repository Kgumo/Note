import{_ as n,c as t,o as e,j as s,a3 as m,a}from"./chunks/framework.C3IOjdSt.js";const y=JSON.parse('{"title":"决策树构建思路与修正","description":"","frontmatter":{},"headers":[],"relativePath":"AI/1.机器学习/03.决策树/决策树构建思路与修正.md","filePath":"AI/1.机器学习/03.决策树/决策树构建思路与修正.md","lastUpdated":1754900608000}'),r={name:"AI/1.机器学习/03.决策树/决策树构建思路与修正.md"};function i(p,l,o,c,u,h){return e(),t("div",null,l[0]||(l[0]=[s("h1",{id:"决策树构建思路与修正",tabindex:"-1"},[a("决策树构建思路与修正 "),s("a",{class:"header-anchor",href:"#决策树构建思路与修正","aria-label":'Permalink to "决策树构建思路与修正"'},"​")],-1),s("h3",{id:"决策树基本思路的标准化步骤",tabindex:"-1"},[a("决策树基本思路的标准化步骤 "),s("a",{class:"header-anchor",href:"#决策树基本思路的标准化步骤","aria-label":'Permalink to "决策树基本思路的标准化步骤"'},"​")],-1),s("p",null,"决策树的构建是一个自顶向下的递归过程（称为“贪心算法”），从根节点开始，逐层分裂，直到形成叶节点。以下是详细步骤，结合了您的描述并修正了不准确之处：",-1),s("ol",null,[s("li",null,[s("p",null,[s("strong",null,"计算整个数据集的初始信息熵（标签熵）"),a("：")]),s("ul",null,[s("li",null,[a("信息熵（Entropy）用于衡量数据集的不纯度（impurity）。计算公式为："),s("p",null,[s("span",{class:"katex-display"},[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",null,[s("semantics",null,[s("mrow",null,[s("mtext",null,[s("mi",{mathvariant:"normal"},"E"),s("mi",{mathvariant:"normal"},"n"),s("mi",{mathvariant:"normal"},"t"),s("mi",{mathvariant:"normal"},"r"),s("mi",{mathvariant:"normal"},"o"),s("mi",{mathvariant:"normal"},"p"),s("mi",{mathvariant:"normal"},"y")]),s("mo",null,"("),s("mi",null,"S"),s("mo",null,")"),s("mo",null,"="),s("mo",null,"−"),s("msubsup",null,[s("mo",null,"∑"),s("mrow",null,[s("mi",null,"i"),s("mo",null,"="),s("mn",null,"1")]),s("mrow",null,[s("mi",null,"c")])]),s("msub",null,[s("mi",null,"p"),s("mi",null,"i")]),s("msub",null,[s("mi",null,"log"),s("mn",null,"2")]),s("msub",null,[s("mi",null,"p"),s("mi",null,"i")])]),s("annotation",{encoding:"application/x-tex"},"\\text{Entropy}(S) = -\\sum_{i=1}^{c} p_i \\log_2 p_i ")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"strut",style:{height:"1.6513970000000002em"}}),s("span",{class:"strut bottom",style:{height:"2.929066em","vertical-align":"-1.277669em"}}),s("span",{class:"base displaystyle textstyle uncramped"},[s("span",{class:"text mord displaystyle textstyle uncramped"},[s("span",{class:"mord mathrm"},"E"),s("span",{class:"mord mathrm"},"n"),s("span",{class:"mord mathrm"},"t"),s("span",{class:"mord mathrm"},"r"),s("span",{class:"mord mathrm"},"o"),s("span",{class:"mord mathrm"},"p"),s("span",{class:"mord mathrm",style:{"margin-right":"0.01389em"}},"y")]),s("span",{class:"mopen"},"("),s("span",{class:"mord mathit",style:{"margin-right":"0.05764em"}},"S"),s("span",{class:"mclose"},")"),s("span",{class:"mrel"},"="),s("span",{class:"mord"},"−"),s("span",{class:"mop op-limits"},[s("span",{class:"vlist"},[s("span",{style:{top:"1.1776689999999999em","margin-left":"0em"}},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),s("span",{class:"reset-textstyle scriptstyle cramped"},[s("span",{class:"mord scriptstyle cramped"},[s("span",{class:"mord mathit"},"i"),s("span",{class:"mrel"},"="),s("span",{class:"mord mathrm"},"1")])])]),s("span",{style:{top:"-0.000005000000000143778em"}},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),s("span",null,[s("span",{class:"op-symbol large-op mop"},"∑")])]),s("span",{style:{top:"-1.2500050000000003em","margin-left":"0em"}},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),s("span",{class:"reset-textstyle scriptstyle uncramped"},[s("span",{class:"mord scriptstyle uncramped"},[s("span",{class:"mord mathit"},"c")])])]),s("span",{class:"baseline-fix"},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),a("​")])])]),s("span",{class:"mord"},[s("span",{class:"mord mathit"},"p"),s("span",{class:"vlist"},[s("span",{style:{top:"0.15em","margin-right":"0.05em","margin-left":"0em"}},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),s("span",{class:"reset-textstyle scriptstyle cramped"},[s("span",{class:"mord mathit"},"i")])]),s("span",{class:"baseline-fix"},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),a("​")])])]),s("span",{class:"mop"},[s("span",{class:"mop"},[a("lo"),s("span",{style:{"margin-right":"0.01389em"}},"g")]),s("span",{class:"vlist"},[s("span",{style:{top:"0.24444em","margin-right":"0.05em"}},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),s("span",{class:"reset-textstyle scriptstyle cramped"},[s("span",{class:"mord mathrm"},"2")])]),s("span",{class:"baseline-fix"},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),a("​")])])]),s("span",{class:"mord"},[s("span",{class:"mord mathit"},"p"),s("span",{class:"vlist"},[s("span",{style:{top:"0.15em","margin-right":"0.05em","margin-left":"0em"}},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),s("span",{class:"reset-textstyle scriptstyle cramped"},[s("span",{class:"mord mathit"},"i")])]),s("span",{class:"baseline-fix"},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),a("​")])])])])])])])]),a(" 其中 (S) 是当前数据集，(c) 是类别标签的数量，(p_i) 是第 (i) 类在数据集中的比例。")]),s("li",null,"这一步是“对标签信息熵进行计算”，而不是“对全部特征的信息熵进行计算”。特征本身没有信息熵；我们只关心标签（目标变量）的熵。例如，在一个二分类问题中，如果数据集有50%正例和50%负例，熵为1（最大不纯度）；如果100%正例，熵为0（完全纯净）。"),s("li",null,[s("strong",null,"您的描述修正"),a("：您提到“先对全部特征的信息熵进行计算”，这可能是个误解。实际上，我们只计算标签的熵（即“标签信息熵”），作为基准。")])])]),s("li",null,[s("p",null,[s("strong",null,"计算各个特征的信息增益（Information Gain）"),a("：")]),s("ul",null,[s("li",null,[a("对于每个特征，计算它对减少标签熵的贡献，即信息增益。信息增益衡量了使用该特征进行分裂后，不纯度的下降程度。 "),s("ul",null,[s("li",null,[a("先计算该特征划分后的条件熵（Conditional Entropy）：对于特征 (A)，假设它有 (v) 个取值，将数据集分为 (v) 个子集 (S_1, S_2, \\dots, S_v)。条件熵为："),s("p",null,[s("span",{class:"katex-display"},[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",null,[s("semantics",null,[s("mrow",null,[s("mtext",null,[s("mi",{mathvariant:"normal"},"E"),s("mi",{mathvariant:"normal"},"n"),s("mi",{mathvariant:"normal"},"t"),s("mi",{mathvariant:"normal"},"r"),s("mi",{mathvariant:"normal"},"o"),s("mi",{mathvariant:"normal"},"p"),s("mi",{mathvariant:"normal"},"y")]),s("mo",null,"("),s("mi",null,"S"),s("mi",{mathvariant:"normal"},"∣"),s("mi",null,"A"),s("mo",null,")"),s("mo",null,"="),s("msubsup",null,[s("mo",null,"∑"),s("mrow",null,[s("mi",null,"j"),s("mo",null,"="),s("mn",null,"1")]),s("mrow",null,[s("mi",null,"v")])]),s("mfrac",null,[s("mrow",null,[s("mi",{mathvariant:"normal"},"∣"),s("msub",null,[s("mi",null,"S"),s("mi",null,"j")]),s("mi",{mathvariant:"normal"},"∣")]),s("mrow",null,[s("mi",{mathvariant:"normal"},"∣"),s("mi",null,"S"),s("mi",{mathvariant:"normal"},"∣")])]),s("mtext",null,[s("mi",{mathvariant:"normal"},"E"),s("mi",{mathvariant:"normal"},"n"),s("mi",{mathvariant:"normal"},"t"),s("mi",{mathvariant:"normal"},"r"),s("mi",{mathvariant:"normal"},"o"),s("mi",{mathvariant:"normal"},"p"),s("mi",{mathvariant:"normal"},"y")]),s("mo",null,"("),s("msub",null,[s("mi",null,"S"),s("mi",null,"j")]),s("mo",null,")")]),s("annotation",{encoding:"application/x-tex"},"\\text{Entropy}(S|A) = \\sum_{j=1}^{v} \\frac{|S_j|}{|S|} \\text{Entropy}(S_j) ")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"strut",style:{height:"1.6513970000000007em"}}),s("span",{class:"strut bottom",style:{height:"3.0651740000000007em","vertical-align":"-1.4137769999999998em"}}),s("span",{class:"base displaystyle textstyle uncramped"},[s("span",{class:"text mord displaystyle textstyle uncramped"},[s("span",{class:"mord mathrm"},"E"),s("span",{class:"mord mathrm"},"n"),s("span",{class:"mord mathrm"},"t"),s("span",{class:"mord mathrm"},"r"),s("span",{class:"mord mathrm"},"o"),s("span",{class:"mord mathrm"},"p"),s("span",{class:"mord mathrm",style:{"margin-right":"0.01389em"}},"y")]),s("span",{class:"mopen"},"("),s("span",{class:"mord mathit",style:{"margin-right":"0.05764em"}},"S"),s("span",{class:"mord mathrm"},"∣"),s("span",{class:"mord mathit"},"A"),s("span",{class:"mclose"},")"),s("span",{class:"mrel"},"="),s("span",{class:"mop op-limits"},[s("span",{class:"vlist"},[s("span",{style:{top:"1.1776689999999999em","margin-left":"0em"}},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),s("span",{class:"reset-textstyle scriptstyle cramped"},[s("span",{class:"mord scriptstyle cramped"},[s("span",{class:"mord mathit",style:{"margin-right":"0.05724em"}},"j"),s("span",{class:"mrel"},"="),s("span",{class:"mord mathrm"},"1")])])]),s("span",{style:{top:"-0.000005000000000254801em"}},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),s("span",null,[s("span",{class:"op-symbol large-op mop"},"∑")])]),s("span",{style:{top:"-1.2500050000000005em","margin-left":"0em"}},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),s("span",{class:"reset-textstyle scriptstyle uncramped"},[s("span",{class:"mord scriptstyle uncramped"},[s("span",{class:"mord mathit",style:{"margin-right":"0.03588em"}},"v")])])]),s("span",{class:"baseline-fix"},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),a("​")])])]),s("span",{class:"mord reset-textstyle displaystyle textstyle uncramped"},[s("span",{class:"sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"}),s("span",{class:"mfrac"},[s("span",{class:"vlist"},[s("span",{style:{top:"0.686em"}},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),s("span",{class:"reset-textstyle textstyle cramped"},[s("span",{class:"mord textstyle cramped"},[s("span",{class:"mord mathrm"},"∣"),s("span",{class:"mord mathit",style:{"margin-right":"0.05764em"}},"S"),s("span",{class:"mord mathrm"},"∣")])])]),s("span",{style:{top:"-0.2300000000000001em"}},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),s("span",{class:"reset-textstyle textstyle uncramped frac-line"})]),s("span",{style:{top:"-0.677em"}},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),s("span",{class:"reset-textstyle textstyle uncramped"},[s("span",{class:"mord textstyle uncramped"},[s("span",{class:"mord mathrm"},"∣"),s("span",{class:"mord"},[s("span",{class:"mord mathit",style:{"margin-right":"0.05764em"}},"S"),s("span",{class:"vlist"},[s("span",{style:{top:"0.15em","margin-right":"0.05em","margin-left":"-0.05764em"}},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),s("span",{class:"reset-textstyle scriptstyle cramped"},[s("span",{class:"mord mathit",style:{"margin-right":"0.05724em"}},"j")])]),s("span",{class:"baseline-fix"},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),a("​")])])]),s("span",{class:"mord mathrm"},"∣")])])]),s("span",{class:"baseline-fix"},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),a("​")])])]),s("span",{class:"sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"})]),s("span",{class:"text mord displaystyle textstyle uncramped"},[s("span",{class:"mord mathrm"},"E"),s("span",{class:"mord mathrm"},"n"),s("span",{class:"mord mathrm"},"t"),s("span",{class:"mord mathrm"},"r"),s("span",{class:"mord mathrm"},"o"),s("span",{class:"mord mathrm"},"p"),s("span",{class:"mord mathrm",style:{"margin-right":"0.01389em"}},"y")]),s("span",{class:"mopen"},"("),s("span",{class:"mord"},[s("span",{class:"mord mathit",style:{"margin-right":"0.05764em"}},"S"),s("span",{class:"vlist"},[s("span",{style:{top:"0.15em","margin-right":"0.05em","margin-left":"-0.05764em"}},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),s("span",{class:"reset-textstyle scriptstyle cramped"},[s("span",{class:"mord mathit",style:{"margin-right":"0.05724em"}},"j")])]),s("span",{class:"baseline-fix"},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),a("​")])])]),s("span",{class:"mclose"},")")])])])])])]),s("li",null,"然后，信息增益为：")])])]),s("p",null,[s("span",{class:"katex-display"},[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",null,[s("semantics",null,[s("mrow",null,[s("mtext",null,[s("mi",{mathvariant:"normal"},"G"),s("mi",{mathvariant:"normal"},"a"),s("mi",{mathvariant:"normal"},"i"),s("mi",{mathvariant:"normal"},"n")]),s("mo",null,"("),s("mi",null,"A"),s("mo",null,")"),s("mo",null,"="),s("mtext",null,[s("mi",{mathvariant:"normal"},"E"),s("mi",{mathvariant:"normal"},"n"),s("mi",{mathvariant:"normal"},"t"),s("mi",{mathvariant:"normal"},"r"),s("mi",{mathvariant:"normal"},"o"),s("mi",{mathvariant:"normal"},"p"),s("mi",{mathvariant:"normal"},"y")]),s("mo",null,"("),s("mi",null,"S"),s("mo",null,")"),s("mo",null,"−"),s("mtext",null,[s("mi",{mathvariant:"normal"},"E"),s("mi",{mathvariant:"normal"},"n"),s("mi",{mathvariant:"normal"},"t"),s("mi",{mathvariant:"normal"},"r"),s("mi",{mathvariant:"normal"},"o"),s("mi",{mathvariant:"normal"},"p"),s("mi",{mathvariant:"normal"},"y")]),s("mo",null,"("),s("mi",null,"S"),s("mi",{mathvariant:"normal"},"∣"),s("mi",null,"A"),s("mo",null,")")]),s("annotation",{encoding:"application/x-tex"}," \\text{Gain}(A) = \\text{Entropy}(S) - \\text{Entropy}(S|A) ")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"strut",style:{height:"0.75em"}}),s("span",{class:"strut bottom",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"base displaystyle textstyle uncramped"},[s("span",{class:"text mord displaystyle textstyle uncramped"},[s("span",{class:"mord mathrm"},"G"),s("span",{class:"mord mathrm"},"a"),s("span",{class:"mord mathrm"},"i"),s("span",{class:"mord mathrm"},"n")]),s("span",{class:"mopen"},"("),s("span",{class:"mord mathit"},"A"),s("span",{class:"mclose"},")"),s("span",{class:"mrel"},"="),s("span",{class:"text mord displaystyle textstyle uncramped"},[s("span",{class:"mord mathrm"},"E"),s("span",{class:"mord mathrm"},"n"),s("span",{class:"mord mathrm"},"t"),s("span",{class:"mord mathrm"},"r"),s("span",{class:"mord mathrm"},"o"),s("span",{class:"mord mathrm"},"p"),s("span",{class:"mord mathrm",style:{"margin-right":"0.01389em"}},"y")]),s("span",{class:"mopen"},"("),s("span",{class:"mord mathit",style:{"margin-right":"0.05764em"}},"S"),s("span",{class:"mclose"},")"),s("span",{class:"mbin"},"−"),s("span",{class:"text mord displaystyle textstyle uncramped"},[s("span",{class:"mord mathrm"},"E"),s("span",{class:"mord mathrm"},"n"),s("span",{class:"mord mathrm"},"t"),s("span",{class:"mord mathrm"},"r"),s("span",{class:"mord mathrm"},"o"),s("span",{class:"mord mathrm"},"p"),s("span",{class:"mord mathrm",style:{"margin-right":"0.01389em"}},"y")]),s("span",{class:"mopen"},"("),s("span",{class:"mord mathit",style:{"margin-right":"0.05764em"}},"S"),s("span",{class:"mord mathrm"},"∣"),s("span",{class:"mord mathit"},"A"),s("span",{class:"mclose"},")")])])])])]),s("ul",null,[s("li",null,"信息增益越大，表示该特征对分类的贡献越强。"),s("li",null,[s("strong",null,"您的描述修正"),a("：您说“根据标签信息熵计算各个特征信息增益”，这部分基本正确，但需注意：信息增益是直接从标签熵和条件熵推导出的，不需要单独“对全部特征的信息熵进行计算”。")])])]),s("li",null,[s("p",null,[s("strong",null,"选择最优特征作为分裂点（如根节点或子节点）"),a("：")]),s("ul",null,[s("li",null,"比较所有特征的信息增益，选择增益最大的特征作为当前节点的分裂特征。"),s("li",null,"这个特征成为当前节点的决策点（例如，根节点是树的起点）。"),s("li",null,[s("strong",null,"您的描述修正"),a("：您提到“根据最优特征筛选根节点作为开始”，这正确。但注意，根节点是第一个分裂点，之后每个子节点都可能成为新的分裂点。")])])]),s("li",null,[s("p",null,[s("strong",null,"根据特征取值创建子节点并递归分裂"),a("：")]),s("ul",null,[s("li",null,"使用选定的最优特征，将数据集按特征取值分割成子集（例如，如果特征是“天气”，取值“晴”“雨”“阴”，则创建三个子节点）。"),s("li",null,"对每个子节点（子集）递归重复上述过程（计算子集的标签熵、计算特征信息增益、选择最优特征分裂）。"),s("li",null,[s("strong",null,"您的描述修正"),a("：您说“根据第二节点的信息增益筛选出子集如此往复”，意思正确，但需注意：每个子节点在递归中成为新的“当前节点”，其信息增益计算基于该子集的数据，而不是整个数据集。")])])]),s("li",null,[s("p",null,[s("strong",null,"递归停止条件：直到叶节点完全纯净或满足其他条件"),a("：")]),s("ul",null,[s("li",null,[a("递归分裂的终止条件是当子集（节点）满足以下任一情况： "),s("ul",null,[s("li",null,[s("strong",null,"完全纯净"),a("：节点中所有实例属于同一类别（即熵为0），则该节点成为叶节点（leaf node），并标记为该类别。")]),s("li",null,[s("strong",null,"无特征可用"),a("：所有特征都已用于分裂，或没有特征能进一步减少不纯度。")]),s("li",null,[s("strong",null,"其他停止条件"),a("：如达到预设的最大树深度、节点中实例数过少（避免过拟合）等。")])])]),s("li",null,[s("strong",null,"您的描述修正"),a("：您提到“直到叶节点完全获得同一标签的小类为结束”，这正确且是理想情况（完全纯净）。但在实践中，由于噪声数据或提前停止，叶节点可能不绝对纯净，此时使用多数类标签（见下一步）。")])])]),s("li",null,[s("p",null,[s("strong",null,"为叶节点分配多数类标签（不是内部节点）"),a("：")]),s("ul",null,[s("li",null,"当节点成为叶节点时（无论是因为完全纯净还是提前停止），它被分配该节点中多数实例的类别标签。这用于后续预测：新数据从根节点遍历到叶节点，预测结果为叶节点的标签。"),s("li",null,[s("strong",null,"您的描述修正"),a("：您提到“对于前几个节点以多数类标签作为子集的标签”，这有误解： "),s("ul",null,[s("li",null,[s("strong",null,"错误点"),a("：决策树的内部节点（非叶节点，如根节点或中间节点）不分配类别标签！它们仅用于特征分裂（决策规则），例如“如果特征A>阈值，则走左分支”。内部节点不做预测；只有叶节点存储标签。")]),s("li",null,[s("strong",null,"正确理解"),a("：您可能意指在构建过程中，如果一个子集（节点）无法进一步分裂（如由于停止条件），它成为叶节点并分配多数类标签。但这不是“前几个节点”特有的，而是所有叶节点的通用规则。另外，“子集的标签”应理解为叶节点对应的类别标签。")]),s("li",null,[s("strong",null,"为什么误解可能发生"),a("：在可视化决策树时，内部节点有时会显示多数类分布（用于解释），但这不是算法的一部分。构建算法中，内部节点只存储分裂特征和阈值。")])])])])])],-1),m("",5)]))}const g=n(r,[["render",i]]);export{y as __pageData,g as default};
