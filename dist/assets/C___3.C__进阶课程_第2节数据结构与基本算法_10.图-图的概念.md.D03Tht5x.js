import{_ as a,c as t,o as e,a3 as n}from"./chunks/framework.C3IOjdSt.js";const h=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"C++/3.C++进阶课程/第2节数据结构与基本算法/10.图-图的概念.md","filePath":"C++/3.C++进阶课程/第2节数据结构与基本算法/10.图-图的概念.md","lastUpdated":1754900608000}'),l={name:"C++/3.C++进阶课程/第2节数据结构与基本算法/10.图-图的概念.md"};function r(i,s,o,p,m,d){return e(),t("div",null,s[0]||(s[0]=[n('<h3 id="图的概念" tabindex="-1">图的概念 <a class="header-anchor" href="#图的概念" aria-label="Permalink to &quot;图的概念&quot;">​</a></h3><h4 id="图的定义" tabindex="-1">图的定义 <a class="header-anchor" href="#图的定义" aria-label="Permalink to &quot;图的定义&quot;">​</a></h4><p>图（graph）是非线性的数据结构，形式描述为：graph = (V, R)。<br> 其中：</p><ul><li>V 是图中元素（称为顶点 Vertex）的集合，当 n=0 时，V 是空集。</li><li>R 是图中顶点之间的关系集，$$( \\langle v_i, v_j \\rangle )$$ 表示顶点 ( v_i ) 与 ( v_j ) 之间是否存在路径（关系）。若 ( v_i ) 与 ( v_j ) 存在关系，则 $$( \\langle v_i, v_j \\rangle )$$ 属于 R。</li></ul><hr><h4 id="图的分类" tabindex="-1">图的分类 <a class="header-anchor" href="#图的分类" aria-label="Permalink to &quot;图的分类&quot;">​</a></h4><h5 id="有向图-digraph" tabindex="-1">有向图（Digraph） <a class="header-anchor" href="#有向图-digraph" aria-label="Permalink to &quot;有向图（Digraph）&quot;">​</a></h5><ul><li><strong>向</strong>：方向</li><li>有方向的图称为有向图。</li><li>有向图中的方向性线条称为：<strong>弧</strong>。</li></ul><h5 id="无向图-undigraph" tabindex="-1">无向图（Undigraph） <a class="header-anchor" href="#无向图-undigraph" aria-label="Permalink to &quot;无向图（Undigraph）&quot;">​</a></h5><ul><li>没有方向的图称为无向图。</li><li>无向图中的线条称为：<strong>边</strong>。</li></ul><p><strong>示例关系集</strong>：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>R</mi><mi>x</mi></msub><mo>{</mo><mo>⟨</mo><msub><mi>v</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>v</mi><mn>3</mn></msub><mo>⟩</mo><mo separator="true">,</mo><mo>⟨</mo><msub><mi>v</mi><mn>2</mn></msub><mo separator="true">,</mo><msub><mi>v</mi><mn>1</mn></msub><mo>⟩</mo><mo separator="true">,</mo><mo>…</mo><mo>}</mo></mrow><annotation encoding="application/x-tex">R_x \\{ \\langle v_1, v_3 \\rangle, \\langle v_2, v_1 \\rangle, \\ldots \\} </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.75em;"></span><span class="strut bottom" style="height:1em;vertical-align:-0.25em;"></span><span class="base displaystyle textstyle uncramped"><span class="mord"><span class="mord mathit" style="margin-right:0.00773em;">R</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:-0.00773em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathit">x</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mopen">{</span><span class="mopen">⟨</span><span class="mord"><span class="mord mathit" style="margin-right:0.03588em;">v</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:-0.03588em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathrm">1</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mpunct">,</span><span class="mord"><span class="mord mathit" style="margin-right:0.03588em;">v</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:-0.03588em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathrm">3</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mclose">⟩</span><span class="mpunct">,</span><span class="mopen">⟨</span><span class="mord"><span class="mord mathit" style="margin-right:0.03588em;">v</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:-0.03588em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathrm">2</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mpunct">,</span><span class="mord"><span class="mord mathit" style="margin-right:0.03588em;">v</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:-0.03588em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathrm">1</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mclose">⟩</span><span class="mpunct">,</span><span class="minner">…</span><span class="mclose">}</span></span></span></span></span></p><hr><h4 id="带权图-网" tabindex="-1">带权图（网） <a class="header-anchor" href="#带权图-网" aria-label="Permalink to &quot;带权图（网）&quot;">​</a></h4><ul><li>若在图的关系 ( \\langle x_i, y_i \\rangle ) 上附加一个值 ( w )，称 ( w ) 为弧或边上的<strong>权值</strong>。</li><li>带权的图称为：<strong>网</strong>（权值 ( w ) 的含义由应用场景定义，如顶点表示城市时 ( w ) 可表示距离）。</li></ul><p><strong>图示</strong>：</p><ul><li><strong>有向图</strong>：弧带方向（如 $$( v_1 \\to v_2 )$$。</li><li><strong>无向图</strong>：边无方向（如 $$( v_1 - v_2 )$$。</li></ul><hr><h4 id="图的特点名词" tabindex="-1">图的特点名词 <a class="header-anchor" href="#图的特点名词" aria-label="Permalink to &quot;图的特点名词&quot;">​</a></h4><h5 id="顶点的度" tabindex="-1">顶点的度 <a class="header-anchor" href="#顶点的度" aria-label="Permalink to &quot;顶点的度&quot;">​</a></h5><ul><li><strong>定义</strong>：与顶点关联的边或弧的数量。 <ul><li><strong>有向图</strong>中分为： <ul><li><strong>入度</strong>：指向该顶点的弧的数量。</li><li><strong>出度</strong>：从该顶点出发的弧的数量。</li></ul></li></ul></li></ul><h5 id="路径" tabindex="-1">路径 <a class="header-anchor" href="#路径" aria-label="Permalink to &quot;路径&quot;">​</a></h5><ul><li><strong>定义</strong>：从一个顶点到达另一个顶点的访问序列。 <ul><li><strong>直接路径</strong>：两个顶点间仅有一条边/弧相连。</li><li><strong>间接路径</strong>：需通过其他顶点中转的多条边/弧。</li></ul></li></ul><h5 id="连通图" tabindex="-1">连通图 <a class="header-anchor" href="#连通图" aria-label="Permalink to &quot;连通图&quot;">​</a></h5><ul><li><strong>定义</strong>： <ul><li><strong>无向图</strong>：若任意两顶点间存在路径，则为连通图。</li><li><strong>有向图</strong>：若任意两顶点间存在<strong>双向路径</strong>，则为强连通图。</li></ul></li></ul><hr><h4 id="图的存储方式" tabindex="-1">图的存储方式 <a class="header-anchor" href="#图的存储方式" aria-label="Permalink to &quot;图的存储方式&quot;">​</a></h4><p>数组表示法、邻接表、逆邻接表、十字链表等。</p><h5 id="数组表示法-邻接矩阵" tabindex="-1">数组表示法（邻接矩阵） <a class="header-anchor" href="#数组表示法-邻接矩阵" aria-label="Permalink to &quot;数组表示法（邻接矩阵）&quot;">​</a></h5><p><strong>实现方式</strong>：</p><ul><li>用一维数组存储顶点集 V（如 <code>V = {北京, 长沙, 上海, 广州, 香港, 澳门}</code>）。</li><li>用二维数组（邻接矩阵）描述关系集 R： <ul><li>行表示起始顶点，列表示目标顶点。</li><li>矩阵元素值： <ul><li><code>1</code>（或权值 ( w )）：存在弧/边。</li><li><code>0</code>（或 <code>∞</code>）：不存在弧/边。</li></ul></li></ul></li></ul><p><strong>示例邻接矩阵</strong>（顶点顺序：北京, 长沙, 上海, 广州, 香港, 澳门）：</p><table tabindex="0"><thead><tr><th>主别</th><th>0</th><th>直达</th><th>直达</th><th>直达</th><th>直达</th><th>直达</th></tr></thead><tbody><tr><td>东沙</td><td>不能</td><td>不能</td><td>不达</td><td>不能</td><td>不达</td><td>不达</td></tr><tr><td>下游</td><td>不能</td><td>不能</td><td>不能</td><td>不达</td><td>不达</td><td>不达</td></tr><tr><td>丁兰</td><td>不达</td><td>不能</td><td>不能</td><td>不达</td><td>不达</td><td>不达</td></tr><tr><td>咖啡</td><td>不能</td><td>不能</td><td>不达</td><td>不达</td><td>不达</td><td>不达</td></tr><tr><td>酒</td><td>不能</td><td>不能</td><td>不能</td><td>不达</td><td>不达</td><td>不达</td></tr></tbody></table><blockquote><p><strong>注</strong>：表中&quot;不能&quot;表示无路径，&quot;不达&quot;表示不可达。</p></blockquote><h6 id="邻接矩阵增加关系" tabindex="-1">邻接矩阵增加关系 <a class="header-anchor" href="#邻接矩阵增加关系" aria-label="Permalink to &quot;邻接矩阵增加关系&quot;">​</a></h6><p>增加关系 $$( \\langle v_i, v_j \\rangle )$$ 的步骤：</p><ol><li>获取 ( v_i ) 和 ( v_j ) 在顶点数组中的下标。</li><li>若任一顶点不存在，则操作终止。</li><li>将邻接矩阵中 ( v_i ) 行、( v_j ) 列的元素设为 <code>1</code>（或权值 ( w )）。</li></ol><hr><h4 id="作业" tabindex="-1">作业 <a class="header-anchor" href="#作业" aria-label="Permalink to &quot;作业&quot;">​</a></h4><ul><li>将邻接矩阵封装成一个类（实现顶点管理、关系增删、路径查询等功能）。</li></ul>',40)]))}const u=a(l,[["render",r]]);export{h as __pageData,u as default};
