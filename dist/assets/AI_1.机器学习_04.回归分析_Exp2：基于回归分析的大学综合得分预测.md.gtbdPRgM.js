import{_ as e,c as i,o as l,a3 as a}from"./chunks/framework.C8Xs1bna.js";const x=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"AI/1.机器学习/04.回归分析/Exp2：基于回归分析的大学综合得分预测.md","filePath":"AI/1.机器学习/04.回归分析/Exp2：基于回归分析的大学综合得分预测.md","lastUpdated":1754900608000}'),d={name:"AI/1.机器学习/04.回归分析/Exp2：基于回归分析的大学综合得分预测.md"};function n(s,t,r,g,h,p){return l(),i("div",null,t[0]||(t[0]=[a(`<p>通过网盘分享的文件：基于回归分析的大学综合得分预测 (1).zip 链接: <a href="https://pan.baidu.com/s/1Jdu24uRYY4wDDqvfIsDQAg?pwd=nt29" target="_blank" rel="noreferrer">https://pan.baidu.com/s/1Jdu24uRYY4wDDqvfIsDQAg?pwd=nt29</a> 提取码: nt29</p><hr><h2 id="一、案例简介" tabindex="-1">一、案例简介 <a class="header-anchor" href="#一、案例简介" aria-label="Permalink to &quot;一、案例简介&quot;">​</a></h2><p>大学排名是一个非常重要同时也极富挑战性与争议性的问题，一所大学的综合实力涉及科研、师资、学生等方方面面。目前全球有上百家评估机构会评估大学的综合得分进行排序，而这些机构的打分也往往并不一致。在这些评分机构中，世界大学排名中心（Center for World University Rankings，缩写CWUR）以评估教育质量、校友就业、研究成果和引用，而非依赖于调查和大学所提交的数据著称，是非常有影响力的一个。</p><p>本任务中我们将根据 CWUR 所提供的世界各地知名大学各方面的排名（师资、科研等），一方面通过数据可视化的方式观察不同大学的特点，另一方面希望构建机器学习模型（线性回归）预测一所大学的综合得分。</p><h2 id="二、作业说明" tabindex="-1">二、作业说明 <a class="header-anchor" href="#二、作业说明" aria-label="Permalink to &quot;二、作业说明&quot;">​</a></h2><p>使用来自 Kaggle 的<a href="https://www.kaggle.com/mylesoneill/world-university-rankings?select=cwurData.csv" target="_blank" rel="noreferrer">数据</a>，构建「线性回归」模型，根据大学各项指标的排名预测综合得分。</p><p><strong>基本要求：</strong></p><ul><li>按照 8:2 随机划分训练集测试集，用 RMSE 作为评价指标，得到测试集上线性回归模型的 RMSE 值；</li><li>对线性回归模型的系数进行分析。</li></ul><p><strong>扩展要求：</strong></p><ul><li>对数据进行观察与可视化，展示数据特点；</li><li>尝试其他的回归模型，对比效果；</li><li>尝试将离散的地区特征融入线性回归模型，并对结果进行对比。</li></ul><p><strong>注意事项：</strong></p><ul><li>基本输入特征有 8 个：<code>quality_of_education</code>, <code>alumni_employment</code>, <code>quality_of_faculty</code>, <code>publications</code>, <code>influence</code>, <code>citations</code>, <code>broad_impact</code>, <code>patents</code>；</li><li>预测目标为<code>score</code>；</li><li>可以使用 sklearn 等第三方库，不要求自己实现线性回归；</li><li>需要保留所有数据集生成、模型训练测试的代码；</li></ul><h2 id="三、数据概览" tabindex="-1">三、数据概览 <a class="header-anchor" href="#三、数据概览" aria-label="Permalink to &quot;三、数据概览&quot;">​</a></h2><p>假设数据文件位于当前文件夹，我们用 pandas 读入标准 csv 格式文件的函数<code>read_csv()</code>将数据转换为<code>DataFrame</code>的形式。观察前几条数据记录：</p><p>In [1]:</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>import pandas as pd</span></span>
<span class="line"><span>import numpy as np</span></span>
<span class="line"><span></span></span>
<span class="line"><span>data_df = pd.read_csv(&#39;./cwurData.csv&#39;)  # 读入 csv 文件为 pandas 的 DataFrame</span></span>
<span class="line"><span>data_df.head(3).T  # 观察前几列并转置方便观察</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>Out[1]:</p><table tabindex="0"><thead><tr><th style="text-align:right;"></th><th style="text-align:right;">0</th><th style="text-align:right;">1</th><th style="text-align:right;">2</th></tr></thead><tbody><tr><td style="text-align:right;">world_rank</td><td style="text-align:right;">1</td><td style="text-align:right;">2</td><td style="text-align:right;">3</td></tr><tr><td style="text-align:right;">institution</td><td style="text-align:right;">Harvard University</td><td style="text-align:right;">Massachusetts Institute of Technology</td><td style="text-align:right;">Stanford University</td></tr><tr><td style="text-align:right;">region</td><td style="text-align:right;">USA</td><td style="text-align:right;">USA</td><td style="text-align:right;">USA</td></tr><tr><td style="text-align:right;">national_rank</td><td style="text-align:right;">1</td><td style="text-align:right;">2</td><td style="text-align:right;">3</td></tr><tr><td style="text-align:right;">quality_of_education</td><td style="text-align:right;">7</td><td style="text-align:right;">9</td><td style="text-align:right;">17</td></tr><tr><td style="text-align:right;">alumni_employment</td><td style="text-align:right;">9</td><td style="text-align:right;">17</td><td style="text-align:right;">11</td></tr><tr><td style="text-align:right;">quality_of_faculty</td><td style="text-align:right;">1</td><td style="text-align:right;">3</td><td style="text-align:right;">5</td></tr><tr><td style="text-align:right;">publications</td><td style="text-align:right;">1</td><td style="text-align:right;">12</td><td style="text-align:right;">4</td></tr><tr><td style="text-align:right;">influence</td><td style="text-align:right;">1</td><td style="text-align:right;">4</td><td style="text-align:right;">2</td></tr><tr><td style="text-align:right;">citations</td><td style="text-align:right;">1</td><td style="text-align:right;">4</td><td style="text-align:right;">2</td></tr><tr><td style="text-align:right;">broad_impact</td><td style="text-align:right;">NaN</td><td style="text-align:right;">NaN</td><td style="text-align:right;">NaN</td></tr><tr><td style="text-align:right;">patents</td><td style="text-align:right;">5</td><td style="text-align:right;">1</td><td style="text-align:right;">15</td></tr><tr><td style="text-align:right;">score</td><td style="text-align:right;">100</td><td style="text-align:right;">91.67</td><td style="text-align:right;">89.5</td></tr><tr><td style="text-align:right;">year</td><td style="text-align:right;">2012</td><td style="text-align:right;">2012</td><td style="text-align:right;">2012</td></tr></tbody></table><p>去除其中包含 NaN 的数据，保留 2000 条有效记录。</p><p>In [2]:</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>data_df = data_df.dropna()  # 舍去包含 NaN 的 row</span></span>
<span class="line"><span>len(data_df)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>Out[2]:</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>2000</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>取出对应自变量以及因变量的列，之后就可以基于此切分训练集和测试集，并进行模型构建与分析。</p><p>In [3]:</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>feature_cols = [&#39;quality_of_faculty&#39;, &#39;publications&#39;, &#39;citations&#39;, &#39;alumni_employment&#39;, </span></span>
<span class="line"><span>                &#39;influence&#39;, &#39;quality_of_education&#39;, &#39;broad_impact&#39;, &#39;patents&#39;]</span></span>
<span class="line"><span>X = data_df[feature_cols]</span></span>
<span class="line"><span>Y = data_df[&#39;score&#39;]</span></span>
<span class="line"><span>X</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>Out[3]:</p><table tabindex="0"><thead><tr><th style="text-align:right;"></th><th style="text-align:right;">quality_of_faculty</th><th style="text-align:right;">publications</th><th style="text-align:right;">citations</th><th style="text-align:right;">alumni_employment</th><th style="text-align:right;">influence</th><th style="text-align:right;">quality_of_education</th><th style="text-align:right;">broad_impact</th><th style="text-align:right;">patents</th></tr></thead><tbody><tr><td style="text-align:right;">200</td><td style="text-align:right;">1</td><td style="text-align:right;">1</td><td style="text-align:right;">1</td><td style="text-align:right;">1</td><td style="text-align:right;">1</td><td style="text-align:right;">1</td><td style="text-align:right;">1.0</td><td style="text-align:right;">2</td></tr><tr><td style="text-align:right;">201</td><td style="text-align:right;">4</td><td style="text-align:right;">5</td><td style="text-align:right;">3</td><td style="text-align:right;">2</td><td style="text-align:right;">3</td><td style="text-align:right;">11</td><td style="text-align:right;">4.0</td><td style="text-align:right;">6</td></tr><tr><td style="text-align:right;">202</td><td style="text-align:right;">2</td><td style="text-align:right;">15</td><td style="text-align:right;">2</td><td style="text-align:right;">11</td><td style="text-align:right;">2</td><td style="text-align:right;">3</td><td style="text-align:right;">2.0</td><td style="text-align:right;">1</td></tr><tr><td style="text-align:right;">203</td><td style="text-align:right;">5</td><td style="text-align:right;">10</td><td style="text-align:right;">12</td><td style="text-align:right;">10</td><td style="text-align:right;">9</td><td style="text-align:right;">2</td><td style="text-align:right;">13.0</td><td style="text-align:right;">48</td></tr><tr><td style="text-align:right;">204</td><td style="text-align:right;">10</td><td style="text-align:right;">11</td><td style="text-align:right;">11</td><td style="text-align:right;">12</td><td style="text-align:right;">12</td><td style="text-align:right;">7</td><td style="text-align:right;">12.0</td><td style="text-align:right;">16</td></tr><tr><td style="text-align:right;">...</td><td style="text-align:right;">...</td><td style="text-align:right;">...</td><td style="text-align:right;">...</td><td style="text-align:right;">...</td><td style="text-align:right;">...</td><td style="text-align:right;">...</td><td style="text-align:right;">...</td><td style="text-align:right;">...</td></tr><tr><td style="text-align:right;">2195</td><td style="text-align:right;">218</td><td style="text-align:right;">926</td><td style="text-align:right;">812</td><td style="text-align:right;">567</td><td style="text-align:right;">845</td><td style="text-align:right;">367</td><td style="text-align:right;">969.0</td><td style="text-align:right;">816</td></tr><tr><td style="text-align:right;">2196</td><td style="text-align:right;">218</td><td style="text-align:right;">997</td><td style="text-align:right;">645</td><td style="text-align:right;">566</td><td style="text-align:right;">908</td><td style="text-align:right;">236</td><td style="text-align:right;">981.0</td><td style="text-align:right;">871</td></tr><tr><td style="text-align:right;">2197</td><td style="text-align:right;">218</td><td style="text-align:right;">830</td><td style="text-align:right;">812</td><td style="text-align:right;">549</td><td style="text-align:right;">823</td><td style="text-align:right;">367</td><td style="text-align:right;">975.0</td><td style="text-align:right;">824</td></tr><tr><td style="text-align:right;">2198</td><td style="text-align:right;">218</td><td style="text-align:right;">886</td><td style="text-align:right;">812</td><td style="text-align:right;">567</td><td style="text-align:right;">974</td><td style="text-align:right;">367</td><td style="text-align:right;">975.0</td><td style="text-align:right;">651</td></tr><tr><td style="text-align:right;">2199</td><td style="text-align:right;">218</td><td style="text-align:right;">861</td><td style="text-align:right;">812</td><td style="text-align:right;">567</td><td style="text-align:right;">991</td><td style="text-align:right;">367</td><td style="text-align:right;">981.0</td><td style="text-align:right;">547</td></tr></tbody></table><p>2000 rows × 8 columns</p><h2 id="四、模型构建" tabindex="-1">四、模型构建 <a class="header-anchor" href="#四、模型构建" aria-label="Permalink to &quot;四、模型构建&quot;">​</a></h2><p>（待完成）</p>`,32)]))}const o=e(d,[["render",n]]);export{x as __pageData,o as default};
