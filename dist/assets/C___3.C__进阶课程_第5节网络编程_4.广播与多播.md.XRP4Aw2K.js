import{_ as i,c as a,o as n,a3 as t}from"./chunks/framework.CkaDlzKP.js";const c=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"C++/3.C++进阶课程/第5节网络编程/4.广播与多播.md","filePath":"C++/3.C++进阶课程/第5节网络编程/4.广播与多播.md","lastUpdated":1754900608000}'),e={name:"C++/3.C++进阶课程/第5节网络编程/4.广播与多播.md"};function l(p,s,h,r,d,k){return n(),a("div",null,s[0]||(s[0]=[t(`<h3 id="广播与多播" tabindex="-1">广播与多播 <a class="header-anchor" href="#广播与多播" aria-label="Permalink to &quot;广播与多播&quot;">​</a></h3><h4 id="广播-broadcast" tabindex="-1">广播（Broadcast） <a class="header-anchor" href="#广播-broadcast" aria-label="Permalink to &quot;广播（Broadcast）&quot;">​</a></h4><p>广播是一种一对多的通信方式，只有传输层协议为 UDP 时才支持（TCP 是端对端通信，不支持广播）。</p><h5 id="广播地址" tabindex="-1">广播地址 <a class="header-anchor" href="#广播地址" aria-label="Permalink to &quot;广播地址&quot;">​</a></h5><ul><li><strong>子网内广播地址</strong>：主机号全部为 <code>1</code>，格式为 <code>xxx.xxx.xxx.255</code>（子网掩码决定主机号范围）。 <ul><li>示例： <ul><li>子网掩码 <code>255.255.255.0</code>，IP <code>192.168.31.56</code> → 广播地址 <code>192.168.31.255</code>。</li><li>子网掩码 <code>255.255.128.0</code>，IP <code>192.168.31.56</code> → 广播地址 <code>192.168.127.255</code>。<div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>子网掩码：11111111 11111111 10000000 00000000  </span></span>
<span class="line"><span>IP 地址：11000000 10101000 00011111 00111000  </span></span>
<span class="line"><span>广播地址：11000000 10101000 01111111 11111111 → 192.168.127.255</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></li><li>子网掩码 <code>255.255.192.0</code>，IP <code>192.168.12.33</code> → 广播地址 <code>192.168.63.255</code>。<div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>子网掩码：11111111 11111111 11000000 00000000  </span></span>
<span class="line"><span>IP 地址：11000000 10101000 00001100 00100001  </span></span>
<span class="line"><span>广播地址：11000000 10101000 00111111 11111111 → 192.168.63.255</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></li></ul></li></ul></li><li><strong>全网广播地址</strong>：<code>255.255.255.255</code>（可能引发网络风暴，实际意义有限）。</li></ul><h5 id="启用广播" tabindex="-1">启用广播 <a class="header-anchor" href="#启用广播" aria-label="Permalink to &quot;启用广播&quot;">​</a></h5><p>需通过套接字选项显式开启：</p><div class="language-c vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> opt </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;  </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setsockopt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(sockfd, SOL_SOCKET, SO_BROADCAST, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&amp;</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">opt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">sizeof</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(opt));</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h5 id="发送广播数据" tabindex="-1">发送广播数据 <a class="header-anchor" href="#发送广播数据" aria-label="Permalink to &quot;发送广播数据&quot;">​</a></h5><p>发送时需指定广播地址：</p><div class="language-c vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">struct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> sockaddr_in broadcast;  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">broadcast.sin_family </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> AF_INET;  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">broadcast.sin_port </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> htons</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">8899</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">broadcast.sin_addr.s_addr </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> inet_addr</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;192.168.8.255&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // 子网广播地址  </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sendto</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(sockfd, buf, len, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">struct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> sockaddr</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&amp;</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">broadcast</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">sizeof</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(broadcast));</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h5 id="接收广播数据" tabindex="-1">接收广播数据 <a class="header-anchor" href="#接收广播数据" aria-label="Permalink to &quot;接收广播数据&quot;">​</a></h5><ul><li><strong>Linux</strong>：接收端需绑定 <code>INADDR_ANY</code>（任意地址）才能接收广播数据。</li><li><strong>Windows</strong>：无需特殊绑定。</li></ul><hr><h4 id="多播-组播-multicast" tabindex="-1">多播/组播（Multicast） <a class="header-anchor" href="#多播-组播-multicast" aria-label="Permalink to &quot;多播/组播（Multicast）&quot;">​</a></h4><p>多播是一种折中的一对多通信方式，只有传输层协议为 UDP 时支持。与广播的区别：</p><ul><li><strong>广播</strong>：所有主机接收数据，可能引发广播风暴。</li><li><strong>多播</strong>：仅加入特定多播组的主机接收数据，节省带宽。</li></ul><h5 id="多播地址" tabindex="-1">多播地址 <a class="header-anchor" href="#多播地址" aria-label="Permalink to &quot;多播地址&quot;">​</a></h5><ul><li><strong>IPv4 D 类地址</strong>：范围 <code>224.0.0.0 ~ 239.255.255.255</code>（最高位为 <code>1110</code>）。</li></ul><h5 id="多播编程流程" tabindex="-1">多播编程流程 <a class="header-anchor" href="#多播编程流程" aria-label="Permalink to &quot;多播编程流程&quot;">​</a></h5><ol><li><p><strong>创建 UDP 套接字</strong>：</p><div class="language-c vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> sock </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> socket</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(AF_INET, SOCK_DGRAM, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></li><li><p><strong>加入多播组</strong>：<br> 使用 <code>struct ip_mreq</code> 指定多播组和网卡：</p><div class="language-c vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">struct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ip_mreq {  </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    struct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> in_addr imr_multiaddr;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // 多播组地址（D 类地址）  </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    struct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> in_addr imr_interface;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // 网卡 IP 地址  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>示例：</p><div class="language-c vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">struct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ip_mreq mreq;  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mreq.imr_multiaddr.s_addr </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> inet_addr</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;224.10.10.1&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // 多播组  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mreq.imr_interface.s_addr </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> htonl</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(INADDR_ANY);</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">       // 任意网卡  </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setsockopt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(sock, IPPROTO_IP, IP_ADD_MEMBERSHIP, (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&amp;</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">mreq</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">sizeof</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(mreq));</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div></li><li><p><strong>数据通信</strong>：</p><ul><li>发送端：<code>sendto()</code> 到多播组地址。</li><li>接收端：正常接收数据（需先加入多播组）。</li></ul></li><li><p><strong>离开多播组</strong>：</p><div class="language-c vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setsockopt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(sock, IPPROTO_IP, IP_DROP_MEMBERSHIP, (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&amp;</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">mreq</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">sizeof</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(mreq));  </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">close</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(sock);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></li></ol><h5 id="路由配置-linux" tabindex="-1">路由配置（Linux） <a class="header-anchor" href="#路由配置-linux" aria-label="Permalink to &quot;路由配置（Linux）&quot;">​</a></h5><p>需添加路由规则确保多播数据正常传输：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">route</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -net</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 224.0.0.0</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> netmask</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 240.0.0.0</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dev</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ens33</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 指定网卡  </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">route</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> default</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gw</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 172.4.1.1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dev</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> eth0</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">               # 设置网关</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><hr><h3 id="关键区别总结" tabindex="-1">关键区别总结 <a class="header-anchor" href="#关键区别总结" aria-label="Permalink to &quot;关键区别总结&quot;">​</a></h3><table tabindex="0"><thead><tr><th><strong>特性</strong></th><th><strong>广播（Broadcast）</strong></th><th><strong>多播（Multicast）</strong></th></tr></thead><tbody><tr><td><strong>地址范围</strong></td><td>子网广播地址（如 <code>192.168.1.255</code>）</td><td>D 类地址（<code>224.0.0.0~239.255.255.255</code>）</td></tr><tr><td><strong>接收范围</strong></td><td>同一子网所有主机</td><td>仅加入多播组的主机</td></tr><tr><td><strong>带宽占用</strong></td><td>高（可能引发广播风暴）</td><td>低（按需接收）</td></tr><tr><td><strong>启用方式</strong></td><td>设置 <code>SO_BROADCAST</code> 套接字选项</td><td>加入多播组（<code>IP_ADD_MEMBERSHIP</code>）</td></tr><tr><td><strong>适用场景</strong></td><td>局域网内简单通知</td><td>跨子网高效分发（视频流、实时数据）</td></tr></tbody></table>`,27)]))}const g=i(e,[["render",l]]);export{c as __pageData,g as default};
