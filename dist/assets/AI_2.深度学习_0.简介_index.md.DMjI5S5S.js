import{_ as e,c as l,o as i,a3 as n,j as s,a}from"./chunks/framework.C8Xs1bna.js";const r="/images/TLU.png",m="/images/MP%E4%B8%AD%E7%9A%84ANDOR.png",p="/images/MP%E4%B8%AD%E7%9A%84NOT.png",x=JSON.parse('{"title":"深度学习基本概念","description":"","frontmatter":{},"headers":[],"relativePath":"AI/2.深度学习/0.简介/index.md","filePath":"AI/2.深度学习/0.简介/index.md","lastUpdated":null}'),o={name:"AI/2.深度学习/0.简介/index.md"};function c(u,t,g,d,h,y){return i(),l("div",null,t[0]||(t[0]=[n(`<h1 id="深度学习基本概念" tabindex="-1">深度学习基本概念 <a class="header-anchor" href="#深度学习基本概念" aria-label="Permalink to &quot;深度学习基本概念&quot;">​</a></h1><h2 id="一、到底啥是深度学习" tabindex="-1">一、到底啥是深度学习？ <a class="header-anchor" href="#一、到底啥是深度学习" aria-label="Permalink to &quot;一、到底啥是深度学习？&quot;">​</a></h2><p><strong>简单说</strong>：就是让机器像人脑一样&quot;层层思考&quot;的智能工具。<br><strong>专业点</strong>：</p><ul><li><strong>狭义</strong>：特指<strong>人工神经网络</strong>（像人脑神经元的计算网络），包括： <ul><li>多层感知机（MLP）：基础款神经网络</li><li>卷积神经网络（CNN）：专攻图像识别（👉 比如认猫狗）</li><li>循环神经网络（RNN）：处理序列数据（👉 比如语音翻译）</li></ul></li><li><strong>广义</strong>：任何<strong>层次化的机器学习模型</strong>（数据要经过多层加工），例如： <ul><li>深度信念网络（DBN）</li><li>稀疏HMAX模型（仿视觉皮层结构）</li></ul></li></ul><blockquote><p>💡 <strong>关键比喻</strong>：<br> 想象剥洋葱——浅层模型只能剥1-2层（只能看轮廓），深度学习能剥10层+（看到纹理、细节、本质）。</p></blockquote><h2 id="二、为啥非要-深度" tabindex="-1">二、为啥非要&quot;深度&quot;？ <a class="header-anchor" href="#二、为啥非要-深度" aria-label="Permalink to &quot;二、为啥非要&quot;深度&quot;？&quot;">​</a></h2><p><strong>核心原因</strong>：现实数据太复杂！</p><ul><li>一张图片包含百万像素（高维度）</li><li>其中隐藏的结构（比如猫耳朵的轮廓）简单模型根本抓不住</li></ul><p><strong>Geoffrey Hinton老爷子总结</strong>：</p><ol><li>浅层模型需要额外计算模块补漏洞 → <strong>费劲</strong></li><li>深度网络用更简洁的结构解决复杂问题 → <strong>高效</strong></li></ol><blockquote><p>📈 <strong>实例</strong>：ImageNet大赛中，152层的ResNet（2015）错误率仅3.6%，而8层浅模型错误率高达25.8%！</p></blockquote><h2 id="三、和ai、机器学习啥关系" tabindex="-1">三、和AI、机器学习啥关系？ <a class="header-anchor" href="#三、和ai、机器学习啥关系" aria-label="Permalink to &quot;三、和AI、机器学习啥关系？&quot;">​</a></h2><p>用个<strong>套娃图</strong>解释：</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>人工智能（AI）  </span></span>
<span class="line"><span>    └─ 机器学习（ML）  </span></span>
<span class="line"><span>        └─ 深度学习（DL）</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><ul><li><strong>AI</strong>：最广（比如知识库系统）</li><li><strong>ML</strong>：教机器从数据学习（比如SVM分类器）</li><li><strong>DL</strong>：ML的子集，<strong>靠多层神经网络自动学特征</strong></li></ul><blockquote><p>✅ <strong>关键差异</strong>：<br> 传统机器学习要人工设计特征（比如告诉机器&quot;猫耳朵是三角形&quot;），而深度学习直接喂原始数据，机器自己学出&quot;猫耳朵&quot;特征！</p></blockquote><h2 id="四、神经网络的-老祖宗" tabindex="-1">四、神经网络的&quot;老祖宗&quot; <a class="header-anchor" href="#四、神经网络的-老祖宗" aria-label="Permalink to &quot;四、神经网络的&quot;老祖宗&quot;&quot;">​</a></h2><p>虽然不讲历史，但理解概念需知两个<strong>基石模型</strong>：</p>`,18),s("ol",null,[s("li",null,[s("p",null,[s("strong",null,"McCulloch-Pitts神经元（1943）")]),s("ul",null,[s("li",null,[a("简化版脑细胞：输入→加权求和→"),s("strong",null,"阶跃函数"),a("输出（0或1）")]),s("li",null,[a("数学表示："),s("p",null,[s("span",{class:"katex-display"},[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",null,[s("semantics",null,[s("mrow",null,[s("mi",null,"y"),s("mo",null,"="),s("mrow",null,[s("mo",{fence:"true"},"{"),s("mtable",null,[s("mtr",null,[s("mtd",null,[s("mrow",null,[s("mn",null,"1")])]),s("mtd",null,[s("mrow",null,[s("mtext",null,[s("mi",{mathvariant:"normal"},"i"),s("mi",{mathvariant:"normal"},"f"),s("mtext",null," ")]),s("mo",null,"∑"),s("msub",null,[s("mi",null,"w"),s("mi",null,"i")]),s("msub",null,[s("mi",null,"x"),s("mi",null,"i")]),s("mo",null,"≥"),s("mi",null,"θ")])])]),s("mtr",null,[s("mtd",null,[s("mrow",null,[s("mn",null,"0")])]),s("mtd",null,[s("mrow",null,[s("mtext",null,[s("mi",{mathvariant:"normal"},"e"),s("mi",{mathvariant:"normal"},"l"),s("mi",{mathvariant:"normal"},"s"),s("mi",{mathvariant:"normal"},"e")])])])])])])]),s("annotation",{encoding:"application/x-tex"},"y = \\begin{cases} 1 & \\text{if } \\sum w_i x_i \\geq \\theta \\\\ 0 & \\text{else} \\end{cases} ")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"strut",style:{height:"1.770005em"}}),s("span",{class:"strut bottom",style:{height:"3.0400099999999997em","vertical-align":"-1.2700049999999998em"}}),s("span",{class:"base displaystyle textstyle uncramped"},[s("span",{class:"mord mathit",style:{"margin-right":"0.03588em"}},"y"),s("span",{class:"mrel"},"="),s("span",{class:"minner displaystyle textstyle uncramped"},[s("span",{class:"style-wrap reset-textstyle textstyle uncramped",style:{top:"0em"}},[s("span",{class:"delimsizing size4"},"{")]),s("span",{class:"mord"},[s("span",{class:"mtable"},[s("span",{class:"col-align-l"},[s("span",{class:"vlist"},[s("span",{style:{top:"-0.720005em"}},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),s("span",{class:"mord displaystyle textstyle uncramped"},[s("span",{class:"mord mathrm"},"1")])]),s("span",{style:{top:"0.8380049999999998em"}},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),s("span",{class:"mord displaystyle textstyle uncramped"},[s("span",{class:"mord mathrm"},"0")])]),s("span",{class:"baseline-fix"},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),a("​")])])]),s("span",{class:"arraycolsep",style:{width:"1em"}}),s("span",{class:"col-align-l"},[s("span",{class:"vlist"},[s("span",{style:{top:"-0.720005em"}},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),s("span",{class:"mord displaystyle textstyle uncramped"},[s("span",{class:"text mord displaystyle textstyle uncramped"},[s("span",{class:"mord mathrm"},"i"),s("span",{class:"mord mathrm",style:{"margin-right":"0.07778em"}},"f"),s("span",{class:"mord mspace"}," ")]),s("span",{class:"op-symbol large-op mop",style:{top:"-0.000004999999999977245em"}},"∑"),s("span",{class:"mord"},[s("span",{class:"mord mathit",style:{"margin-right":"0.02691em"}},"w"),s("span",{class:"vlist"},[s("span",{style:{top:"0.15em","margin-right":"0.05em","margin-left":"-0.02691em"}},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),s("span",{class:"reset-textstyle scriptstyle cramped"},[s("span",{class:"mord mathit"},"i")])]),s("span",{class:"baseline-fix"},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),a("​")])])]),s("span",{class:"mord"},[s("span",{class:"mord mathit"},"x"),s("span",{class:"vlist"},[s("span",{style:{top:"0.15em","margin-right":"0.05em","margin-left":"0em"}},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),s("span",{class:"reset-textstyle scriptstyle cramped"},[s("span",{class:"mord mathit"},"i")])]),s("span",{class:"baseline-fix"},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),a("​")])])]),s("span",{class:"mrel"},"≥"),s("span",{class:"mord mathit",style:{"margin-right":"0.02778em"}},"θ")])]),s("span",{style:{top:"0.8380049999999998em"}},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),s("span",{class:"mord displaystyle textstyle uncramped"},[s("span",{class:"text mord displaystyle textstyle uncramped"},[s("span",{class:"mord mathrm"},"e"),s("span",{class:"mord mathrm"},"l"),s("span",{class:"mord mathrm"},"s"),s("span",{class:"mord mathrm"},"e")])])]),s("span",{class:"baseline-fix"},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),a("​")])])])])]),s("span",{class:"sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"})])])])])])])]),s("li",null,[s("strong",null,"局限"),a('：只能处理单调逻辑（无法直接实现"非"操作）')])])]),s("li",null,[s("p",null,[s("strong",null,"感知机（Perceptron, 1958）")]),s("ul",null,[s("li",null,[a("加了"),s("strong",null,"权重学习"),a("！首次用误差更新参数："),s("p",null,[s("span",{class:"katex-display"},[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",null,[s("semantics",null,[s("mrow",null,[s("msub",null,[s("mi",null,"w"),s("mrow",null,[s("mtext",null,[s("mi",{mathvariant:"normal"},"n"),s("mi",{mathvariant:"normal"},"e"),s("mi",{mathvariant:"normal"},"w")])])]),s("mo",null,"="),s("msub",null,[s("mi",null,"w"),s("mrow",null,[s("mtext",null,[s("mi",{mathvariant:"normal"},"o"),s("mi",{mathvariant:"normal"},"l"),s("mi",{mathvariant:"normal"},"d")])])]),s("mo",null,"+"),s("mi",null,"η"),s("mo",null,"("),s("mi",null,"t"),s("mo",null,"−"),s("mi",null,"y"),s("mo",null,")"),s("mi",null,"x")]),s("annotation",{encoding:"application/x-tex"},"w_{\\text{new}} = w_{\\text{old}} + \\eta (t - y) x ")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"strut",style:{height:"0.75em"}}),s("span",{class:"strut bottom",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"base displaystyle textstyle uncramped"},[s("span",{class:"mord"},[s("span",{class:"mord mathit",style:{"margin-right":"0.02691em"}},"w"),s("span",{class:"vlist"},[s("span",{style:{top:"0.15em","margin-right":"0.05em","margin-left":"-0.02691em"}},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),s("span",{class:"reset-textstyle scriptstyle cramped"},[s("span",{class:"mord scriptstyle cramped"},[s("span",{class:"text mord scriptstyle cramped"},[s("span",{class:"mord mathrm"},"n"),s("span",{class:"mord mathrm"},"e"),s("span",{class:"mord mathrm",style:{"margin-right":"0.01389em"}},"w")])])])]),s("span",{class:"baseline-fix"},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),a("​")])])]),s("span",{class:"mrel"},"="),s("span",{class:"mord"},[s("span",{class:"mord mathit",style:{"margin-right":"0.02691em"}},"w"),s("span",{class:"vlist"},[s("span",{style:{top:"0.15em","margin-right":"0.05em","margin-left":"-0.02691em"}},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),s("span",{class:"reset-textstyle scriptstyle cramped"},[s("span",{class:"mord scriptstyle cramped"},[s("span",{class:"text mord scriptstyle cramped"},[s("span",{class:"mord mathrm"},"o"),s("span",{class:"mord mathrm"},"l"),s("span",{class:"mord mathrm"},"d")])])])]),s("span",{class:"baseline-fix"},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),a("​")])])]),s("span",{class:"mbin"},"+"),s("span",{class:"mord mathit",style:{"margin-right":"0.03588em"}},"η"),s("span",{class:"mopen"},"("),s("span",{class:"mord mathit"},"t"),s("span",{class:"mbin"},"−"),s("span",{class:"mord mathit",style:{"margin-right":"0.03588em"}},"y"),s("span",{class:"mclose"},")"),s("span",{class:"mord mathit"},"x")])])])])])]),s("li",null,[s("strong",null,"重大意义"),a("：线性分类器鼻祖（但只能解决线性问题，比如AND/OR）")])])])],-1),n('<h2 id="五、深度学习的-必杀技" tabindex="-1">五、深度学习的&quot;必杀技&quot; <a class="header-anchor" href="#五、深度学习的-必杀技" aria-label="Permalink to &quot;五、深度学习的&quot;必杀技&quot;&quot;">​</a></h2><ol><li><p><strong>自动特征提取</strong></p><ul><li>传统方法：人工设计特征 → 累死人且不通用</li><li>深度学习：原始数据输入 → <strong>网络逐层抽象特征</strong><blockquote><p>例如识别人脸：<br> 第一层学边缘 → 第二层学五官 → 第三层拼出整张脸</p></blockquote></li></ul></li><li><p><strong>层次化表示</strong></p><ul><li>像大脑视觉通路：视网膜→LGN→皮层...</li><li>每层对信息<strong>分级加工</strong>，底层学简单模式，高层组合复杂概念</li></ul></li></ol><h2 id="六、举个生活化的例子-🌰" tabindex="-1">六、举个生活化的例子 🌰 <a class="header-anchor" href="#六、举个生活化的例子-🌰" aria-label="Permalink to &quot;六、举个生活化的例子 🌰&quot;">​</a></h2><p><strong>任务</strong>：教机器认&quot;咖啡杯&quot;</p><ul><li><strong>传统方法</strong>：<br> 手动告诉机器：&quot;杯口是圆的，有手柄，高度10cm...&quot; → 规则一改全完蛋</li><li><strong>深度学习</strong>： <ol><li>灌入10万张杯子的图片</li><li>网络第一层发现&quot;弧形边缘&quot;</li><li>第二层拼出&quot;圆形轮廓+长条物体&quot;</li><li>第三层组合成&quot;杯口+杯身+手柄&quot;</li><li>输出：&quot;咖啡杯！概率98%&quot;</li></ol></li></ul><blockquote><p>🔥 <strong>效果</strong>：<br> 换角度、加奶泡、手柄残缺...照样能认！</p></blockquote><h3 id="关键总结" tabindex="-1">关键总结 <a class="header-anchor" href="#关键总结" aria-label="Permalink to &quot;关键总结&quot;">​</a></h3><table tabindex="0"><thead><tr><th>概念</th><th>大白话解释</th><th>技术核心</th></tr></thead><tbody><tr><td><strong>深度学习本质</strong></td><td>机器&quot;脑补&quot;数据的多层理解能力</td><td>层次化特征提取</td></tr><tr><td><strong>&quot;深度&quot;重要性</strong></td><td>复杂问题必须层层拆解（浅层搞不定）</td><td>网络深度 vs 数据复杂度</td></tr><tr><td><strong>与传统ML区别</strong></td><td>机器自己学特征 vs 人工设计特征</td><td>端到端学习（End-to-End）</td></tr><tr><td><strong>神经元基础</strong></td><td>输入加权求和 → 非线性激活 → 输出</td><td>阶跃函数/Sigmoid/ReLU</td></tr></tbody></table><blockquote><p>💎 <strong>一句话精髓</strong>：<br><strong>深度学习 = 堆叠多层的神经网络 + 自动特征学习 + 处理复杂数据的能力</strong></p></blockquote><hr><h1 id="深度学习的发展历程" tabindex="-1">深度学习的发展历程 <a class="header-anchor" href="#深度学习的发展历程" aria-label="Permalink to &quot;深度学习的发展历程&quot;">​</a></h1><hr><h2 id="一、史前时代-1943-1960s-神经元的诞生" tabindex="-1">一、史前时代（1943-1960s）：神经元的诞生 <a class="header-anchor" href="#一、史前时代-1943-1960s-神经元的诞生" aria-label="Permalink to &quot;一、史前时代（1943-1960s）：神经元的诞生&quot;">​</a></h2><h4 id="_1943年-mcculloch-pitts神经元模型" tabindex="-1"><strong>1943年：McCulloch-Pitts神经元模型</strong> <a class="header-anchor" href="#_1943年-mcculloch-pitts神经元模型" aria-label="Permalink to &quot;**1943年：McCulloch-Pitts神经元模型**&quot;">​</a></h4><ul><li><strong>核心</strong>：用数学模拟生物神经元（输入加权求和 → 阶跃函数输出）</li><li><strong>意义</strong>：首次证明<strong>神经网络可执行逻辑运算</strong>（AND/OR），但无法处理&quot;非&quot;操作（单调性限制）。</li><li><strong>幕后故事</strong>： <ul><li>皮茨（贫民窟天才）与麦卡洛克（精英医生）合作，论文被冯·诺依曼用作计算机设计基础。</li><li>维纳控制论小组的破裂（因谣言）导致皮茨抑郁而终，研究中断。</li></ul></li></ul><h3 id="阈值逻辑单元-神经元的数学-灵魂" tabindex="-1">阈值逻辑单元 - 神经元的数学“灵魂” <a class="header-anchor" href="#阈值逻辑单元-神经元的数学-灵魂" aria-label="Permalink to &quot;阈值逻辑单元 - 神经元的数学“灵魂”&quot;">​</a></h3><p><strong>大白话解释：</strong> 想象一个<strong>投票委员会</strong>，要决定是否通过一个提案。</p><ul><li>每个委员（输入信号 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>x</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">x_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.43056em;"></span><span class="strut bottom" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit">x</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathit">i</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span></span>）的发言权不一样（权重 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>w</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">w_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.43056em;"></span><span class="strut bottom" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit" style="margin-right:0.02691em;">w</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:-0.02691em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathit">i</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span></span>）。</li><li>有的委员是支持派（兴奋性输入），有的是反对派（抑制性输入）。</li><li>委员会有一个<strong>硬性规定（阈值 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>θ</mi></mrow><annotation encoding="application/x-tex">\\theta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.69444em;"></span><span class="strut bottom" style="height:0.69444em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right:0.02778em;">θ</span></span></span></span>）</strong>：只有总支持票的权重达到或超过这个数，提案才通过（输出1），否则就否决（输出0）。</li></ul><p><strong>理论核心：</strong> 它就是最早的人工神经元数学模型，是所有神经网络的基础。其核心是一个<strong>阶跃函数</strong>：</p>',19),s("p",null,[s("span",{class:"katex-display"},[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",null,[s("semantics",null,[s("mrow",null,[s("mi",null,"y"),s("mo",null,"="),s("mrow",null,[s("mo",{fence:"true"},"{"),s("mtable",null,[s("mtr",null,[s("mtd",null,[s("mrow",null,[s("mn",null,"1")])]),s("mtd",null,[s("mrow",null,[s("mtext",null,[s("mi",{mathvariant:"normal"},"i"),s("mi",{mathvariant:"normal"},"f"),s("mtext",null," ")]),s("msubsup",null,[s("mo",null,"∑"),s("mrow",null,[s("mi",null,"i"),s("mo",null,"="),s("mn",null,"1")]),s("mi",null,"n")]),s("msub",null,[s("mi",null,"w"),s("mi",null,"i")]),s("msub",null,[s("mi",null,"x"),s("mi",null,"i")]),s("mo",null,"≥"),s("mi",null,"θ")])])]),s("mtr",null,[s("mtd",null,[s("mrow",null,[s("mn",null,"0")])]),s("mtd",null,[s("mrow",null,[s("mtext",null,[s("mi",{mathvariant:"normal"},"e"),s("mi",{mathvariant:"normal"},"l"),s("mi",{mathvariant:"normal"},"s"),s("mi",{mathvariant:"normal"},"e")])])])])])])]),s("annotation",{encoding:"application/x-tex"},"y = \\begin{cases} 1 & \\text{if } \\sum_{i=1}^n w_i x_i \\geq \\theta \\\\ 0 & \\text{else} \\end{cases} ")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"strut",style:{height:"2.434533em"}}),s("span",{class:"strut bottom",style:{height:"4.369066em","vertical-align":"-1.934533em"}}),s("span",{class:"base displaystyle textstyle uncramped"},[s("span",{class:"mord mathit",style:{"margin-right":"0.03588em"}},"y"),s("span",{class:"mrel"},"="),s("span",{class:"minner displaystyle textstyle uncramped"},[s("span",{class:"style-wrap reset-textstyle textstyle uncramped"},[s("span",{class:"delimsizing mult"},[s("span",{class:"vlist"},[s("span",{style:{top:"0.9500099999999998em"}},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),s("span",{class:"delimsizinginner delim-size4"},[s("span",null,"⎩")])]),s("span",{style:{top:"0.9500099999999998em"}},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),s("span",{class:"delimsizinginner delim-size4"},[s("span",null,"⎪")])]),s("span",{style:{top:"-0.000010000000000287557em"}},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),s("span",{class:"delimsizinginner delim-size4"},[s("span",null,"⎨")])]),s("span",{style:{top:"-1.1500100000000002em"}},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),s("span",{class:"delimsizinginner delim-size4"},[s("span",null,"⎪")])]),s("span",{style:{top:"-1.4500200000000003em"}},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),s("span",{class:"delimsizinginner delim-size4"},[s("span",null,"⎧")])]),s("span",{class:"baseline-fix"},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),a("​")])])])]),s("span",{class:"mord"},[s("span",{class:"mtable"},[s("span",{class:"col-align-l"},[s("span",{class:"vlist"},[s("span",{style:{top:"-0.7831359999999998em"}},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),s("span",{class:"mord displaystyle textstyle uncramped"},[s("span",{class:"mord mathrm"},"1")])]),s("span",{style:{top:"1.5025330000000001em"}},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),s("span",{class:"mord displaystyle textstyle uncramped"},[s("span",{class:"mord mathrm"},"0")])]),s("span",{class:"baseline-fix"},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),a("​")])])]),s("span",{class:"arraycolsep",style:{width:"1em"}}),s("span",{class:"col-align-l"},[s("span",{class:"vlist"},[s("span",{style:{top:"-0.7831359999999998em"}},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),s("span",{class:"mord displaystyle textstyle uncramped"},[s("span",{class:"text mord displaystyle textstyle uncramped"},[s("span",{class:"mord mathrm"},"i"),s("span",{class:"mord mathrm",style:{"margin-right":"0.07778em"}},"f"),s("span",{class:"mord mspace"}," ")]),s("span",{class:"mop op-limits"},[s("span",{class:"vlist"},[s("span",{style:{top:"1.1776689999999999em","margin-left":"0em"}},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),s("span",{class:"reset-textstyle scriptstyle cramped"},[s("span",{class:"mord scriptstyle cramped"},[s("span",{class:"mord mathit"},"i"),s("span",{class:"mrel"},"="),s("span",{class:"mord mathrm"},"1")])])]),s("span",{style:{top:"-0.000005000000000143778em"}},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),s("span",null,[s("span",{class:"op-symbol large-op mop"},"∑")])]),s("span",{style:{top:"-1.2500050000000003em","margin-left":"0em"}},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),s("span",{class:"reset-textstyle scriptstyle uncramped"},[s("span",{class:"mord mathit"},"n")])]),s("span",{class:"baseline-fix"},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),a("​")])])]),s("span",{class:"mord"},[s("span",{class:"mord mathit",style:{"margin-right":"0.02691em"}},"w"),s("span",{class:"vlist"},[s("span",{style:{top:"0.15em","margin-right":"0.05em","margin-left":"-0.02691em"}},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),s("span",{class:"reset-textstyle scriptstyle cramped"},[s("span",{class:"mord mathit"},"i")])]),s("span",{class:"baseline-fix"},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),a("​")])])]),s("span",{class:"mord"},[s("span",{class:"mord mathit"},"x"),s("span",{class:"vlist"},[s("span",{style:{top:"0.15em","margin-right":"0.05em","margin-left":"0em"}},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),s("span",{class:"reset-textstyle scriptstyle cramped"},[s("span",{class:"mord mathit"},"i")])]),s("span",{class:"baseline-fix"},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),a("​")])])]),s("span",{class:"mrel"},"≥"),s("span",{class:"mord mathit",style:{"margin-right":"0.02778em"}},"θ")])]),s("span",{style:{top:"1.5025330000000001em"}},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),s("span",{class:"mord displaystyle textstyle uncramped"},[s("span",{class:"text mord displaystyle textstyle uncramped"},[s("span",{class:"mord mathrm"},"e"),s("span",{class:"mord mathrm"},"l"),s("span",{class:"mord mathrm"},"s"),s("span",{class:"mord mathrm"},"e")])])]),s("span",{class:"baseline-fix"},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),a("​")])])])])]),s("span",{class:"sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"})])])])])])],-1),n(`<p><strong>图解（来自讲义）：</strong></p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>      x₁ (兴奋性) ---\\</span></span>
<span class="line"><span>      x₂ (兴奋性) ---\\ </span></span>
<span class="line"><span>                      ∑  ---&gt; 与阈值θ比较 ---&gt; y (输出 0 或 1)</span></span>
<span class="line"><span>      z₁ (抑制性) ---/ </span></span>
<span class="line"><span>      z₂ (抑制性) ---/</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p><img src="`+r+'" alt=""><strong>暂且了解一下：</strong></p><ol><li>兴奋性输入 (Excitatory Inputs)</li></ol><ul><li><p><strong>作用</strong>：<strong>鼓励</strong>或<strong>促进</strong>神经元激活。它们的作用是让神经元的输出趋向于 1。</p></li><li><p><strong>工作原理</strong>：</p><ul><li><p>每个输入 (x₁, x₂, ... xₙ) 都对应一个<strong>权重</strong> (w₁, w₂, ... wₙ)。</p></li><li><p>如果某个输入是<strong>兴奋性</strong>的，则其权重为<strong>正数</strong> (<code>w &gt; 0</code>)。</p></li><li><p>这个正的权重会乘以输入值（通常是0或1），得到一个正的值，贡献给神经元的<strong>净输入</strong>（加权和）。</p></li></ul></li><li><p><strong>类比</strong>：就像是一个加速踏板，踩得越深（输入值越大或权重越大），车跑得越快（神经元越容易激活）。</p></li></ul><ol start="2"><li>抑制性输入 (Inhibitory Inputs)</li></ol><ul><li><p><strong>作用</strong>：<strong>阻止</strong>或<strong>抑制</strong>神经元激活。它们的作用是让神经元的输出趋向于 0。</p></li><li><p><strong>工作原理</strong>：</p><ul><li><p>如果某个输入是<strong>抑制性</strong>的，则其权重为<strong>负数</strong> (<code>w &lt; 0</code>)。</p></li><li><p>这个负的权重会乘以输入值，得到一个负的值，从神经元的<strong>净输入</strong>中“减去”一部分，使其更难以达到激活阈值。</p></li><li><p><strong>抑制性输入</strong>通常拥有一票否决权，只要有一个为1，输出就强制为0。</p></li></ul></li><li><p><strong>类比</strong>：就像是一个刹车踏板，踩得越深（输入值越大或权重绝对值越大），车越难加速（神经元越难激活）。</p></li></ul><hr><h3 id="mcculloch-pitts-m-p-单元-tlu的-硬核-特化" tabindex="-1">McCulloch-Pitts (M-P) 单元 - TLU的“硬核”特化 <a class="header-anchor" href="#mcculloch-pitts-m-p-单元-tlu的-硬核-特化" aria-label="Permalink to &quot;McCulloch-Pitts (M-P) 单元 - TLU的“硬核”特化&quot;">​</a></h3><p><strong>大白话解释：</strong> 这是TLU的一个具体实现，非常<strong>死板和严格</strong>，就像是一个只有开关、没有音量旋钮的电路。</p><ul><li><strong>规则极简</strong>： <ol><li><strong>一票否决制</strong>：任何一个抑制性输入（<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>z</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">z_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.43056em;"></span><span class="strut bottom" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit" style="margin-right:0.04398em;">z</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:-0.04398em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathit">i</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span></span>）为1，立刻关机，输出0。</li><li><strong>投票表决</strong>：如果没有抑制信号，就把所有兴奋性输入（<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>x</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">x_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.43056em;"></span><span class="strut bottom" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit">x</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathit">i</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span></span>）加起来（相当于每个输入的权重 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>w</mi><mi>i</mi></msub><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">w_i = 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.64444em;"></span><span class="strut bottom" style="height:0.79444em;vertical-align:-0.15em;"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit" style="margin-right:0.02691em;">w</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:-0.02691em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathit">i</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mrel">=</span><span class="mord mathrm">1</span></span></span></span>）。</li><li><strong>阈值决定</strong>：总和 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>≥</mo><mi>θ</mi></mrow><annotation encoding="application/x-tex">\\geq \\theta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.69444em;"></span><span class="strut bottom" style="height:0.83041em;vertical-align:-0.13597em;"></span><span class="base textstyle uncramped"><span class="mrel">≥</span><span class="mord mathit" style="margin-right:0.02778em;">θ</span></span></span></span> 就开机（输出1），否则关机（输出0）。</li></ol></li></ul><p><strong>理论核心：</strong> 它用最简单的规则证明了<strong>神经网络可以执行逻辑计算</strong>。它是计算机和人工智能理论的基石之一。</p><p><strong>数学表达：</strong></p>',13),s("p",null,[s("span",{class:"katex-display"},[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",null,[s("semantics",null,[s("mrow",null,[s("mi",null,"y"),s("mo",null,"="),s("mrow",null,[s("mo",{fence:"true"},"{"),s("mtable",null,[s("mtr",null,[s("mtd",null,[s("mrow",null,[s("mn",null,"0")])]),s("mtd",null,[s("mrow",null,[s("mtext",null,[s("mi",{mathvariant:"normal"},"i"),s("mi",{mathvariant:"normal"},"f"),s("mtext",null," "),s("mi",{mathvariant:"normal"},"a"),s("mi",{mathvariant:"normal"},"n"),s("mi",{mathvariant:"normal"},"y"),s("mtext",null," ")]),s("msub",null,[s("mi",null,"z"),s("mi",null,"i")]),s("mo",null,"="),s("mn",null,"1")])])]),s("mtr",null,[s("mtd",null,[s("mrow",null,[s("mn",null,"1")])]),s("mtd",null,[s("mrow",null,[s("mtext",null,[s("mi",{mathvariant:"normal"},"i"),s("mi",{mathvariant:"normal"},"f"),s("mtext",null," ")]),s("mo",null,"∑"),s("msub",null,[s("mi",null,"x"),s("mi",null,"i")]),s("mo",null,"≥"),s("mi",null,"θ"),s("mtext",null,[s("mtext",null," "),s("mi",{mathvariant:"normal"},"a"),s("mi",{mathvariant:"normal"},"n"),s("mi",{mathvariant:"normal"},"d"),s("mtext",null," "),s("mi",{mathvariant:"normal"},"a"),s("mi",{mathvariant:"normal"},"l"),s("mi",{mathvariant:"normal"},"l"),s("mtext",null," ")]),s("msub",null,[s("mi",null,"z"),s("mi",null,"i")]),s("mo",null,"="),s("mn",null,"0")])])]),s("mtr",null,[s("mtd",null,[s("mrow",null,[s("mn",null,"0")])]),s("mtd",null,[s("mrow",null,[s("mtext",null,[s("mi",{mathvariant:"normal"},"i"),s("mi",{mathvariant:"normal"},"f"),s("mtext",null," ")]),s("mo",null,"∑"),s("msub",null,[s("mi",null,"x"),s("mi",null,"i")]),s("mo",null,"<"),s("mi",null,"θ"),s("mtext",null,[s("mtext",null," "),s("mi",{mathvariant:"normal"},"a"),s("mi",{mathvariant:"normal"},"n"),s("mi",{mathvariant:"normal"},"d"),s("mtext",null," "),s("mi",{mathvariant:"normal"},"a"),s("mi",{mathvariant:"normal"},"l"),s("mi",{mathvariant:"normal"},"l"),s("mtext",null," ")]),s("msub",null,[s("mi",null,"z"),s("mi",null,"i")]),s("mo",null,"="),s("mn",null,"0")])])])])])]),s("annotation",{encoding:"application/x-tex"},"y = \\begin{cases} 0 & \\text{if any } z_i = 1 \\\\ 1 & \\text{if } \\sum x_i \\geq \\theta \\text{ and all } z_i = 0 \\\\ 0 & \\text{if } \\sum x_i < \\theta \\text{ and all } z_i = 0 \\end{cases} ")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"strut",style:{height:"2.5700100000000003em"}}),s("span",{class:"strut bottom",style:{height:"4.64002em","vertical-align":"-2.07001em"}}),s("span",{class:"base displaystyle textstyle uncramped"},[s("span",{class:"mord mathit",style:{"margin-right":"0.03588em"}},"y"),s("span",{class:"mrel"},"="),s("span",{class:"minner displaystyle textstyle uncramped"},[s("span",{class:"style-wrap reset-textstyle textstyle uncramped"},[s("span",{class:"delimsizing mult"},[s("span",{class:"vlist"},[s("span",{style:{top:"0.9500099999999998em"}},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),s("span",{class:"delimsizinginner delim-size4"},[s("span",null,"⎩")])]),s("span",{style:{top:"0.9500099999999998em"}},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),s("span",{class:"delimsizinginner delim-size4"},[s("span",null,"⎪")])]),s("span",{style:{top:"-0.000010000000000287557em"}},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),s("span",{class:"delimsizinginner delim-size4"},[s("span",null,"⎨")])]),s("span",{style:{top:"-1.1500100000000002em"}},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),s("span",{class:"delimsizinginner delim-size4"},[s("span",null,"⎪")])]),s("span",{style:{top:"-1.4500200000000003em"}},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),s("span",{class:"delimsizinginner delim-size4"},[s("span",null,"⎧")])]),s("span",{class:"baseline-fix"},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),a("​")])])])]),s("span",{class:"mord"},[s("span",{class:"mtable"},[s("span",{class:"col-align-l"},[s("span",{class:"vlist"},[s("span",{style:{top:"-1.5620100000000003em"}},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),s("span",{class:"mord displaystyle textstyle uncramped"},[s("span",{class:"mord mathrm"},"0")])]),s("span",{style:{top:"-0.08001000000000025em"}},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),s("span",{class:"mord displaystyle textstyle uncramped"},[s("span",{class:"mord mathrm"},"1")])]),s("span",{style:{top:"1.52em"}},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),s("span",{class:"mord displaystyle textstyle uncramped"},[s("span",{class:"mord mathrm"},"0")])]),s("span",{class:"baseline-fix"},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),a("​")])])]),s("span",{class:"arraycolsep",style:{width:"1em"}}),s("span",{class:"col-align-l"},[s("span",{class:"vlist"},[s("span",{style:{top:"-1.5620100000000003em"}},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),s("span",{class:"mord displaystyle textstyle uncramped"},[s("span",{class:"text mord displaystyle textstyle uncramped"},[s("span",{class:"mord mathrm"},"i"),s("span",{class:"mord mathrm",style:{"margin-right":"0.07778em"}},"f"),s("span",{class:"mord mspace"}," "),s("span",{class:"mord mathrm"},"a"),s("span",{class:"mord mathrm"},"n"),s("span",{class:"mord mathrm",style:{"margin-right":"0.01389em"}},"y"),s("span",{class:"mord mspace"}," ")]),s("span",{class:"mord"},[s("span",{class:"mord mathit",style:{"margin-right":"0.04398em"}},"z"),s("span",{class:"vlist"},[s("span",{style:{top:"0.15em","margin-right":"0.05em","margin-left":"-0.04398em"}},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),s("span",{class:"reset-textstyle scriptstyle cramped"},[s("span",{class:"mord mathit"},"i")])]),s("span",{class:"baseline-fix"},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),a("​")])])]),s("span",{class:"mrel"},"="),s("span",{class:"mord mathrm"},"1")])]),s("span",{style:{top:"-0.08001000000000025em"}},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),s("span",{class:"mord displaystyle textstyle uncramped"},[s("span",{class:"text mord displaystyle textstyle uncramped"},[s("span",{class:"mord mathrm"},"i"),s("span",{class:"mord mathrm",style:{"margin-right":"0.07778em"}},"f"),s("span",{class:"mord mspace"}," ")]),s("span",{class:"op-symbol large-op mop",style:{top:"-0.000004999999999977245em"}},"∑"),s("span",{class:"mord"},[s("span",{class:"mord mathit"},"x"),s("span",{class:"vlist"},[s("span",{style:{top:"0.15em","margin-right":"0.05em","margin-left":"0em"}},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),s("span",{class:"reset-textstyle scriptstyle cramped"},[s("span",{class:"mord mathit"},"i")])]),s("span",{class:"baseline-fix"},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),a("​")])])]),s("span",{class:"mrel"},"≥"),s("span",{class:"mord mathit",style:{"margin-right":"0.02778em"}},"θ"),s("span",{class:"text mord displaystyle textstyle uncramped"},[s("span",{class:"mord mspace"}," "),s("span",{class:"mord mathrm"},"a"),s("span",{class:"mord mathrm"},"n"),s("span",{class:"mord mathrm"},"d"),s("span",{class:"mord mspace"}," "),s("span",{class:"mord mathrm"},"a"),s("span",{class:"mord mathrm"},"l"),s("span",{class:"mord mathrm"},"l"),s("span",{class:"mord mspace"}," ")]),s("span",{class:"mord"},[s("span",{class:"mord mathit",style:{"margin-right":"0.04398em"}},"z"),s("span",{class:"vlist"},[s("span",{style:{top:"0.15em","margin-right":"0.05em","margin-left":"-0.04398em"}},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),s("span",{class:"reset-textstyle scriptstyle cramped"},[s("span",{class:"mord mathit"},"i")])]),s("span",{class:"baseline-fix"},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),a("​")])])]),s("span",{class:"mrel"},"="),s("span",{class:"mord mathrm"},"0")])]),s("span",{style:{top:"1.52em"}},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),s("span",{class:"mord displaystyle textstyle uncramped"},[s("span",{class:"text mord displaystyle textstyle uncramped"},[s("span",{class:"mord mathrm"},"i"),s("span",{class:"mord mathrm",style:{"margin-right":"0.07778em"}},"f"),s("span",{class:"mord mspace"}," ")]),s("span",{class:"op-symbol large-op mop",style:{top:"-0.000004999999999977245em"}},"∑"),s("span",{class:"mord"},[s("span",{class:"mord mathit"},"x"),s("span",{class:"vlist"},[s("span",{style:{top:"0.15em","margin-right":"0.05em","margin-left":"0em"}},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),s("span",{class:"reset-textstyle scriptstyle cramped"},[s("span",{class:"mord mathit"},"i")])]),s("span",{class:"baseline-fix"},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),a("​")])])]),s("span",{class:"mrel"},"<"),s("span",{class:"mord mathit",style:{"margin-right":"0.02778em"}},"θ"),s("span",{class:"text mord displaystyle textstyle uncramped"},[s("span",{class:"mord mspace"}," "),s("span",{class:"mord mathrm"},"a"),s("span",{class:"mord mathrm"},"n"),s("span",{class:"mord mathrm"},"d"),s("span",{class:"mord mspace"}," "),s("span",{class:"mord mathrm"},"a"),s("span",{class:"mord mathrm"},"l"),s("span",{class:"mord mathrm"},"l"),s("span",{class:"mord mspace"}," ")]),s("span",{class:"mord"},[s("span",{class:"mord mathit",style:{"margin-right":"0.04398em"}},"z"),s("span",{class:"vlist"},[s("span",{style:{top:"0.15em","margin-right":"0.05em","margin-left":"-0.04398em"}},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),s("span",{class:"reset-textstyle scriptstyle cramped"},[s("span",{class:"mord mathit"},"i")])]),s("span",{class:"baseline-fix"},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),a("​")])])]),s("span",{class:"mrel"},"="),s("span",{class:"mord mathrm"},"0")])]),s("span",{class:"baseline-fix"},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),a("​")])])])])]),s("span",{class:"sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"})])])])])])],-1),n('<p><strong>举个例子（实现逻辑AND）：</strong></p><ul><li>设两个兴奋性输入 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>x</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">x_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.43056em;"></span><span class="strut bottom" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit">x</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathrm">1</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span></span>, <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>x</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">x_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.43056em;"></span><span class="strut bottom" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit">x</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathrm">2</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span></span>（取值0或1），无抑制输入。</li><li>设阈值 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>θ</mi><mo>=</mo><mn>2</mn></mrow><annotation encoding="application/x-tex">\\theta = 2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.69444em;"></span><span class="strut bottom" style="height:0.69444em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right:0.02778em;">θ</span><span class="mrel">=</span><span class="mord mathrm">2</span></span></span></span>。</li><li>计算结果： <ul><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>x</mi><mn>1</mn></msub><mo>=</mo><mn>0</mn><mo separator="true">,</mo><msub><mi>x</mi><mn>2</mn></msub><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">x_1=0, x_2=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.64444em;"></span><span class="strut bottom" style="height:0.8388800000000001em;vertical-align:-0.19444em;"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit">x</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathrm">1</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mrel">=</span><span class="mord mathrm">0</span><span class="mpunct">,</span><span class="mord"><span class="mord mathit">x</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathrm">2</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mrel">=</span><span class="mord mathrm">0</span></span></span></span> -&gt; sum=0 (&lt;2) -&gt; y=0</li><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>x</mi><mn>1</mn></msub><mo>=</mo><mn>0</mn><mo separator="true">,</mo><msub><mi>x</mi><mn>2</mn></msub><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">x_1=0, x_2=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.64444em;"></span><span class="strut bottom" style="height:0.8388800000000001em;vertical-align:-0.19444em;"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit">x</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathrm">1</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mrel">=</span><span class="mord mathrm">0</span><span class="mpunct">,</span><span class="mord"><span class="mord mathit">x</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathrm">2</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mrel">=</span><span class="mord mathrm">1</span></span></span></span> -&gt; sum=1 (&lt;2) -&gt; y=0</li><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>x</mi><mn>1</mn></msub><mo>=</mo><mn>1</mn><mo separator="true">,</mo><msub><mi>x</mi><mn>2</mn></msub><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">x_1=1, x_2=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.64444em;"></span><span class="strut bottom" style="height:0.8388800000000001em;vertical-align:-0.19444em;"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit">x</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathrm">1</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mrel">=</span><span class="mord mathrm">1</span><span class="mpunct">,</span><span class="mord"><span class="mord mathit">x</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathrm">2</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mrel">=</span><span class="mord mathrm">0</span></span></span></span> -&gt; sum=1 (&lt;2) -&gt; y=0</li><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>x</mi><mn>1</mn></msub><mo>=</mo><mn>1</mn><mo separator="true">,</mo><msub><mi>x</mi><mn>2</mn></msub><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">x_1=1, x_2=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.64444em;"></span><span class="strut bottom" style="height:0.8388800000000001em;vertical-align:-0.19444em;"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit">x</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathrm">1</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mrel">=</span><span class="mord mathrm">1</span><span class="mpunct">,</span><span class="mord"><span class="mord mathit">x</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathrm">2</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mrel">=</span><span class="mord mathrm">1</span></span></span></span> -&gt; sum=2 (&gt;=2) -&gt; y=1</li></ul></li><li>看，这就是一个完美的<strong>与门</strong>！</li></ul><hr><h3 id="实现布尔函数-用神经元搭积木" tabindex="-1">实现布尔函数 - 用神经元搭积木 <a class="header-anchor" href="#实现布尔函数-用神经元搭积木" aria-label="Permalink to &quot;实现布尔函数 - 用神经元搭积木&quot;">​</a></h3><p><strong>大白话解释：</strong> 布尔函数就是输入和输出都是0和1的函数，比如“与”、“或”、“非”。M-P单元就是<strong>搭建这些逻辑电路的乐高积木</strong>。</p><p><strong>怎么搭？</strong></p><ol><li><strong>AND（与门）</strong>：如上所述，需要两个输入，阈值 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>θ</mi><mo>=</mo><mn>2</mn></mrow><annotation encoding="application/x-tex">\\theta = 2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.69444em;"></span><span class="strut bottom" style="height:0.69444em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right:0.02778em;">θ</span><span class="mrel">=</span><span class="mord mathrm">2</span></span></span></span>。</li><li><strong>OR（或门）</strong>：同样两个输入，但只需要一个为真就通过，所以设阈值 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>θ</mi><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">\\theta = 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.69444em;"></span><span class="strut bottom" style="height:0.69444em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right:0.02778em;">θ</span><span class="mrel">=</span><span class="mord mathrm">1</span></span></span></span>。</li><li><strong>NOT（非门）</strong>：这是关键！单个M-P单元<strong>无法直接实现“非”</strong>。为什么？看下一个概念。 <img src="'+m+'" alt=""><img src="'+p+'" alt=""></li></ol><hr><h3 id="单调逻辑函数-m-p单元的-致命缺陷" tabindex="-1">单调逻辑函数 - M-P单元的“致命缺陷” <a class="header-anchor" href="#单调逻辑函数-m-p单元的-致命缺陷" aria-label="Permalink to &quot;单调逻辑函数 - M-P单元的“致命缺陷”&quot;">​</a></h3><p><strong>大白话解释：</strong> 一个函数如果是“单调”的，意味着<strong>输入越多，输出结果不会变差</strong>（只会从0变到1，不会从1变回0）。</p><p><strong>举个例子：</strong></p><ul><li><strong>“与”操作是单调的</strong>：输入 (0,0) -&gt; 0; (0,1) -&gt; 0; (1,1) -&gt; 1。随着1的增多，输出从0变成了1。</li><li><strong>“或”操作也是单调的</strong>: (0,0)-&gt;0; (0,1)-&gt;1; (1,1)-&gt;1。</li><li><strong>“非”操作是“非单调”的</strong>：输入0 -&gt; 输出1；输入1 -&gt; 输出0。输入从0增加到1，输出反而从1<strong>减少</strong>到了0。这违反了单调性。</li></ul><p><strong>理论核心（讲义中的命题1）：</strong></p><blockquote><p><strong>不受限制的McCulloch-Pitts单元只能实现单调逻辑函数。</strong></p></blockquote><p><strong>为什么？</strong> 因为M-P单元的规则是“输入（兴奋性）越多，越容易激活”。它无法模拟“输入越多，反而越难激活”或者“输入变了，输出反而降低”的情况。<strong>“非”操作正是这种“唱反调”的行为</strong>，所以单个M-P单元搞不定。</p><hr><h3 id="结构性综合-用两层网络突破限制" tabindex="-1">结构性综合 - 用两层网络突破限制 <a class="header-anchor" href="#结构性综合-用两层网络突破限制" aria-label="Permalink to &quot;结构性综合 - 用两层网络突破限制&quot;">​</a></h3><p><strong>大白话解释：</strong> 既然一块积木（单层M-P单元）搭不出“非”门，那我们就<strong>用多块积木组合起来</strong>！这就是“结构性综合”的核心思想——<strong>用两层网络可以实现任何布尔函数</strong>。</p><p><strong>怎么做的？（讲义中的命题2）</strong> 这是一种“分治”策略，也叫“<strong>析取范式（DNF）</strong>”：</p><ol><li><strong>第一步：抓出所有“正确答案”</strong>。 列出真值表，把所有输出为1的输入组合找出来。比如一个函数在输入为(0,0,1)和(0,1,0)时输出为1。</li><li><strong>第二步：为每个“正确答案”配一个专家（M-P单元）</strong>。 每个专家只认识一种正确答案模式。比如专家A专门检测(0,0,1)这种情况（可以用AND门实现），专家B专门检测(0,1,0)。</li><li><strong>第三步：请一个“老板”（另一个M-P单元）来做最终决定</strong>。 这个老板的规则很宽松（OR门）：<strong>只要任何一个专家说“这是我管的模式”，老板就最终输出1</strong>。</li></ol><p><strong>理论总结：</strong></p><ul><li><strong>第一层</strong>：多个M-P单元，每个单元负责识别一种导致输出为1的特定输入模式（实现AND操作）。</li><li><strong>第二层</strong>：一个M-P单元，负责汇总第一层所有结果（实现OR操作）。</li><li><strong>这样一来，通过两层的组合，就打破了单层网络只能表示单调函数的限制</strong>，可以表示任何复杂的逻辑关系。神经网络“深度”的力量，在这里已经初现端倪！</li></ul><p><strong>最终，结合抑制性输入（可转化为非门），我们可以得到命题3：</strong></p><blockquote><p><strong>所有的逻辑函数都能被包含与、或、非功能的网络所实现。</strong></p></blockquote><p>这相当于说：<strong>只要有了“与”、“或”、“非”这三种基本逻辑门，你就可以搭建出任何功能的数字电路（或神经网络）！</strong> 这正是现代计算机科学的理论基础。</p><hr><h2 id="二、第一次兴起与寒冬-1958-1974" tabindex="-1">二、第一次兴起与寒冬（1958-1974） <a class="header-anchor" href="#二、第一次兴起与寒冬-1958-1974" aria-label="Permalink to &quot;二、第一次兴起与寒冬（1958-1974）&quot;">​</a></h2><h4 id="_1958年-感知机-perceptron" tabindex="-1"><strong>1958年：感知机（Perceptron）</strong> <a class="header-anchor" href="#_1958年-感知机-perceptron" aria-label="Permalink to &quot;**1958年：感知机（Perceptron）**&quot;">​</a></h4><ul><li><strong>发明者</strong>：Frank Rosenblatt（心理学家 + 工程师）</li><li><strong>突破</strong>： <ul><li>首次引入<strong>权重学习机制</strong>（<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>w</mi><mrow><mi>n</mi><mi>e</mi><mi>w</mi></mrow></msub><mo>=</mo><msub><mi>w</mi><mrow><mi>o</mi><mi>l</mi><mi>d</mi></mrow></msub><mo>+</mo><mi>η</mi><mo>(</mo><mi>t</mi><mo>−</mo><mi>y</mi><mo>)</mo><mi>x</mi></mrow><annotation encoding="application/x-tex">w_{new} = w_{old} + \\eta (t-y)x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.75em;"></span><span class="strut bottom" style="height:1em;vertical-align:-0.25em;"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit" style="margin-right:0.02691em;">w</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:-0.02691em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">n</span><span class="mord mathit">e</span><span class="mord mathit" style="margin-right:0.02691em;">w</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mrel">=</span><span class="mord"><span class="mord mathit" style="margin-right:0.02691em;">w</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:-0.02691em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">o</span><span class="mord mathit" style="margin-right:0.01968em;">l</span><span class="mord mathit">d</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mbin">+</span><span class="mord mathit" style="margin-right:0.03588em;">η</span><span class="mopen">(</span><span class="mord mathit">t</span><span class="mbin">−</span><span class="mord mathit" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mord mathit">x</span></span></span></span>）</li><li>制造了硬件<strong>Mark I感知机</strong>（400个传感器+512个神经元）</li></ul></li><li><strong>局限</strong>：只能解决线性问题（如AND/OR），对XOR束手无策。</li></ul><h4 id="_1969年-寒冬降临" tabindex="-1"><strong>1969年：寒冬降临</strong> <a class="header-anchor" href="#_1969年-寒冬降临" aria-label="Permalink to &quot;**1969年：寒冬降临**&quot;">​</a></h4><ul><li><strong>导火索</strong>：Minsky《Perceptrons》一书数学证明： <ul><li>单层网络无法解决非线性问题（如XOR）</li><li>多层网络理论上可行但缺乏训练算法</li></ul></li><li><strong>后果</strong>： <ul><li>神经网络研究被弃置20年，资金转向符号主义AI（专家系统）。</li></ul></li></ul><hr><h3 id="感知机-第一个-可学习-的神经元" tabindex="-1">感知机 - 第一个“可学习”的神经元 <a class="header-anchor" href="#感知机-第一个-可学习-的神经元" aria-label="Permalink to &quot;感知机 - 第一个“可学习”的神经元&quot;">​</a></h3><p><strong>大白话解释：</strong> 如果说M-P单元是一个<strong>出厂设定好、无法改变的</strong>逻辑门电路，那么Frank Rosenblatt发明的感知机就是这个电路上加装了<strong>可调节的旋钮（权重）</strong>，并且有一个<strong>自动调旋钮的规则（学习算法）</strong>。它是第一个可以从数据中学习的模型。</p><p><strong>理论核心：</strong></p>',35),s("ol",null,[s("li",null,[s("p",null,[s("strong",null,"结构"),a("：和TLU几乎一样。")]),s("div",{class:"language- vp-adaptive-theme line-numbers-mode"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"}),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",null,"输入：x₁, x₂, ..., xₙ")]),a(`
`),s("span",{class:"line"},[s("span",null,"权重：w₁, w₂, ..., wₙ")]),a(`
`),s("span",{class:"line"},[s("span",null,"偏置：b")]),a(`
`),s("span",{class:"line"},[s("span",null,"加权和：z = w₁x₁ + w₂x₂ + ... + wₙxₙ + b")]),a(`
`),s("span",{class:"line"},[s("span",null,"输出：y = 1 if z > 0; else 0 (或 -1)")])])]),s("div",{class:"line-numbers-wrapper","aria-hidden":"true"},[s("span",{class:"line-number"},"1"),s("br"),s("span",{class:"line-number"},"2"),s("br"),s("span",{class:"line-number"},"3"),s("br"),s("span",{class:"line-number"},"4"),s("br"),s("span",{class:"line-number"},"5"),s("br")])])]),s("li",null,[s("p",null,[s("strong",null,"革命性创新：学习规则（监督学习）"),a(" 对于每个训练数据（输入 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",null,[s("semantics",null,[s("mrow",null,[s("msup",null,[s("mi",null,"x"),s("mrow",null,[s("mo",null,"("),s("mi",null,"j"),s("mo",null,")")])])]),s("annotation",{encoding:"application/x-tex"},"x^{(j)}")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"strut",style:{height:"0.8879999999999999em"}}),s("span",{class:"strut bottom",style:{height:"0.8879999999999999em","vertical-align":"0em"}}),s("span",{class:"base textstyle uncramped"},[s("span",{class:"mord"},[s("span",{class:"mord mathit"},"x"),s("span",{class:"vlist"},[s("span",{style:{top:"-0.363em","margin-right":"0.05em"}},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),s("span",{class:"reset-textstyle scriptstyle uncramped"},[s("span",{class:"mord scriptstyle uncramped"},[s("span",{class:"mopen"},"("),s("span",{class:"mord mathit",style:{"margin-right":"0.05724em"}},"j"),s("span",{class:"mclose"},")")])])]),s("span",{class:"baseline-fix"},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),a("​")])])])])])]),a(" 和 真实标签 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",null,[s("semantics",null,[s("mrow",null,[s("msup",null,[s("mi",null,"t"),s("mrow",null,[s("mo",null,"("),s("mi",null,"j"),s("mo",null,")")])])]),s("annotation",{encoding:"application/x-tex"},"t^{(j)}")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"strut",style:{height:"0.8879999999999999em"}}),s("span",{class:"strut bottom",style:{height:"0.8879999999999999em","vertical-align":"0em"}}),s("span",{class:"base textstyle uncramped"},[s("span",{class:"mord"},[s("span",{class:"mord mathit"},"t"),s("span",{class:"vlist"},[s("span",{style:{top:"-0.363em","margin-right":"0.05em"}},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),s("span",{class:"reset-textstyle scriptstyle uncramped"},[s("span",{class:"mord scriptstyle uncramped"},[s("span",{class:"mopen"},"("),s("span",{class:"mord mathit",style:{"margin-right":"0.05724em"}},"j"),s("span",{class:"mclose"},")")])])]),s("span",{class:"baseline-fix"},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),a("​")])])])])])]),a("）：")]),s("ul",null,[s("li",null,[a("计算当前模型的输出 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",null,[s("semantics",null,[s("mrow",null,[s("msup",null,[s("mi",null,"y"),s("mrow",null,[s("mo",null,"("),s("mi",null,"j"),s("mo",null,")")])])]),s("annotation",{encoding:"application/x-tex"},"y^{(j)}")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"strut",style:{height:"0.8879999999999999em"}}),s("span",{class:"strut bottom",style:{height:"1.0824399999999998em","vertical-align":"-0.19444em"}}),s("span",{class:"base textstyle uncramped"},[s("span",{class:"mord"},[s("span",{class:"mord mathit",style:{"margin-right":"0.03588em"}},"y"),s("span",{class:"vlist"},[s("span",{style:{top:"-0.363em","margin-right":"0.05em"}},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),s("span",{class:"reset-textstyle scriptstyle uncramped"},[s("span",{class:"mord scriptstyle uncramped"},[s("span",{class:"mopen"},"("),s("span",{class:"mord mathit",style:{"margin-right":"0.05724em"}},"j"),s("span",{class:"mclose"},")")])])]),s("span",{class:"baseline-fix"},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),a("​")])])])])])]),a("。")]),s("li",null,[s("strong",null,"如果模型猜对了"),a("（"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",null,[s("semantics",null,[s("mrow",null,[s("msup",null,[s("mi",null,"y"),s("mrow",null,[s("mo",null,"("),s("mi",null,"j"),s("mo",null,")")])]),s("mo",null,"="),s("msup",null,[s("mi",null,"t"),s("mrow",null,[s("mo",null,"("),s("mi",null,"j"),s("mo",null,")")])])]),s("annotation",{encoding:"application/x-tex"},"y^{(j)} = t^{(j)}")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"strut",style:{height:"0.8879999999999999em"}}),s("span",{class:"strut bottom",style:{height:"1.0824399999999998em","vertical-align":"-0.19444em"}}),s("span",{class:"base textstyle uncramped"},[s("span",{class:"mord"},[s("span",{class:"mord mathit",style:{"margin-right":"0.03588em"}},"y"),s("span",{class:"vlist"},[s("span",{style:{top:"-0.363em","margin-right":"0.05em"}},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),s("span",{class:"reset-textstyle scriptstyle uncramped"},[s("span",{class:"mord scriptstyle uncramped"},[s("span",{class:"mopen"},"("),s("span",{class:"mord mathit",style:{"margin-right":"0.05724em"}},"j"),s("span",{class:"mclose"},")")])])]),s("span",{class:"baseline-fix"},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),a("​")])])]),s("span",{class:"mrel"},"="),s("span",{class:"mord"},[s("span",{class:"mord mathit"},"t"),s("span",{class:"vlist"},[s("span",{style:{top:"-0.363em","margin-right":"0.05em"}},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),s("span",{class:"reset-textstyle scriptstyle uncramped"},[s("span",{class:"mord scriptstyle uncramped"},[s("span",{class:"mopen"},"("),s("span",{class:"mord mathit",style:{"margin-right":"0.05724em"}},"j"),s("span",{class:"mclose"},")")])])]),s("span",{class:"baseline-fix"},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),a("​")])])])])])]),a("），皆大欢喜，参数不变。")]),s("li",null,[s("strong",null,"如果模型猜错了"),a("，就调整参数："),s("p",null,[s("span",{class:"katex-display"},[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",null,[s("semantics",null,[s("mrow",null,[s("mtable",null,[s("mtr",null,[s("mtd",null,[s("mrow",null,[s("msubsup",null,[s("mi",null,"w"),s("mi",null,"i"),s("mrow",null,[s("mtext",null,[s("mi",{mathvariant:"normal"},"n"),s("mi",{mathvariant:"normal"},"e"),s("mi",{mathvariant:"normal"},"w")])])])])]),s("mtd",null,[s("mrow",null,[s("mrow"),s("mo",null,"="),s("msubsup",null,[s("mi",null,"w"),s("mi",null,"i"),s("mrow",null,[s("mtext",null,[s("mi",{mathvariant:"normal"},"o"),s("mi",{mathvariant:"normal"},"l"),s("mi",{mathvariant:"normal"},"d")])])]),s("mo",null,"+"),s("mi",null,"η"),s("mo",null,"⋅"),s("mo",null,"("),s("msup",null,[s("mi",null,"t"),s("mrow",null,[s("mo",null,"("),s("mi",null,"j"),s("mo",null,")")])]),s("mo",null,"−"),s("msup",null,[s("mi",null,"y"),s("mrow",null,[s("mo",null,"("),s("mi",null,"j"),s("mo",null,")")])]),s("mo",null,")"),s("mo",null,"⋅"),s("msubsup",null,[s("mi",null,"x"),s("mi",null,"i"),s("mrow",null,[s("mo",null,"("),s("mi",null,"j"),s("mo",null,")")])])])])]),s("mtr",null,[s("mtd",null,[s("mrow",null,[s("msup",null,[s("mi",null,"b"),s("mrow",null,[s("mtext",null,[s("mi",{mathvariant:"normal"},"n"),s("mi",{mathvariant:"normal"},"e"),s("mi",{mathvariant:"normal"},"w")])])])])]),s("mtd",null,[s("mrow",null,[s("mrow"),s("mo",null,"="),s("msup",null,[s("mi",null,"b"),s("mrow",null,[s("mtext",null,[s("mi",{mathvariant:"normal"},"o"),s("mi",{mathvariant:"normal"},"l"),s("mi",{mathvariant:"normal"},"d")])])]),s("mo",null,"+"),s("mi",null,"η"),s("mo",null,"⋅"),s("mo",null,"("),s("msup",null,[s("mi",null,"t"),s("mrow",null,[s("mo",null,"("),s("mi",null,"j"),s("mo",null,")")])]),s("mo",null,"−"),s("msup",null,[s("mi",null,"y"),s("mrow",null,[s("mo",null,"("),s("mi",null,"j"),s("mo",null,")")])]),s("mo",null,")")])])])])]),s("annotation",{encoding:"application/x-tex"},"\\begin{aligned} w_i^{\\text{new}} &= w_i^{\\text{old}} + \\eta \\cdot (t^{(j)} - y^{(j)}) \\cdot x_i^{(j)} \\\\ b^{\\text{new}} &= b^{\\text{old}} + \\eta \\cdot (t^{(j)} - y^{(j)}) \\end{aligned} ")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"strut",style:{height:"1.6014em"}}),s("span",{class:"strut bottom",style:{height:"2.7028em","vertical-align":"-1.1014em"}}),s("span",{class:"base displaystyle textstyle uncramped"},[s("span",{class:"mord"},[s("span",{class:"mtable"},[s("span",{class:"col-align-r"},[s("span",{class:"vlist"},[s("span",{style:{top:"-0.5566em"}},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),s("span",{class:"mord displaystyle textstyle uncramped"},[s("span",{class:"mord"},[s("span",{class:"mord mathit",style:{"margin-right":"0.02691em"}},"w"),s("span",{class:"vlist"},[s("span",{style:{top:"0.247em","margin-left":"-0.02691em","margin-right":"0.05em"}},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),s("span",{class:"reset-textstyle scriptstyle cramped"},[s("span",{class:"mord mathit"},"i")])]),s("span",{style:{top:"-0.4129999999999999em","margin-right":"0.05em"}},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),s("span",{class:"reset-textstyle scriptstyle uncramped"},[s("span",{class:"mord scriptstyle uncramped"},[s("span",{class:"text mord scriptstyle uncramped"},[s("span",{class:"mord mathrm"},"n"),s("span",{class:"mord mathrm"},"e"),s("span",{class:"mord mathrm",style:{"margin-right":"0.01389em"}},"w")])])])]),s("span",{class:"baseline-fix"},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),a("​")])])])])]),s("span",{style:{top:"0.7413999999999998em"}},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),s("span",{class:"mord displaystyle textstyle uncramped"},[s("span",{class:"mord"},[s("span",{class:"mord mathit"},"b"),s("span",{class:"vlist"},[s("span",{style:{top:"-0.413em","margin-right":"0.05em"}},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),s("span",{class:"reset-textstyle scriptstyle uncramped"},[s("span",{class:"mord scriptstyle uncramped"},[s("span",{class:"text mord scriptstyle uncramped"},[s("span",{class:"mord mathrm"},"n"),s("span",{class:"mord mathrm"},"e"),s("span",{class:"mord mathrm",style:{"margin-right":"0.01389em"}},"w")])])])]),s("span",{class:"baseline-fix"},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),a("​")])])])])]),s("span",{class:"baseline-fix"},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),a("​")])])]),s("span",{class:"col-align-l"},[s("span",{class:"vlist"},[s("span",{style:{top:"-0.5566em"}},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),s("span",{class:"mord displaystyle textstyle uncramped"},[s("span",{class:"mord displaystyle textstyle uncramped"}),s("span",{class:"mrel"},"="),s("span",{class:"mord"},[s("span",{class:"mord mathit",style:{"margin-right":"0.02691em"}},"w"),s("span",{class:"vlist"},[s("span",{style:{top:"0.247em","margin-left":"-0.02691em","margin-right":"0.05em"}},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),s("span",{class:"reset-textstyle scriptstyle cramped"},[s("span",{class:"mord mathit"},"i")])]),s("span",{style:{top:"-0.4129999999999999em","margin-right":"0.05em"}},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),s("span",{class:"reset-textstyle scriptstyle uncramped"},[s("span",{class:"mord scriptstyle uncramped"},[s("span",{class:"text mord scriptstyle uncramped"},[s("span",{class:"mord mathrm"},"o"),s("span",{class:"mord mathrm"},"l"),s("span",{class:"mord mathrm"},"d")])])])]),s("span",{class:"baseline-fix"},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),a("​")])])]),s("span",{class:"mbin"},"+"),s("span",{class:"mord mathit",style:{"margin-right":"0.03588em"}},"η"),s("span",{class:"mbin"},"⋅"),s("span",{class:"mopen"},"("),s("span",{class:"mord"},[s("span",{class:"mord mathit"},"t"),s("span",{class:"vlist"},[s("span",{style:{top:"-0.413em","margin-right":"0.05em"}},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),s("span",{class:"reset-textstyle scriptstyle uncramped"},[s("span",{class:"mord scriptstyle uncramped"},[s("span",{class:"mopen"},"("),s("span",{class:"mord mathit",style:{"margin-right":"0.05724em"}},"j"),s("span",{class:"mclose"},")")])])]),s("span",{class:"baseline-fix"},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),a("​")])])]),s("span",{class:"mbin"},"−"),s("span",{class:"mord"},[s("span",{class:"mord mathit",style:{"margin-right":"0.03588em"}},"y"),s("span",{class:"vlist"},[s("span",{style:{top:"-0.413em","margin-right":"0.05em"}},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),s("span",{class:"reset-textstyle scriptstyle uncramped"},[s("span",{class:"mord scriptstyle uncramped"},[s("span",{class:"mopen"},"("),s("span",{class:"mord mathit",style:{"margin-right":"0.05724em"}},"j"),s("span",{class:"mclose"},")")])])]),s("span",{class:"baseline-fix"},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),a("​")])])]),s("span",{class:"mclose"},")"),s("span",{class:"mbin"},"⋅"),s("span",{class:"mord"},[s("span",{class:"mord mathit"},"x"),s("span",{class:"vlist"},[s("span",{style:{top:"0.276864em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),s("span",{class:"reset-textstyle scriptstyle cramped"},[s("span",{class:"mord mathit"},"i")])]),s("span",{style:{top:"-0.5198em","margin-right":"0.05em"}},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),s("span",{class:"reset-textstyle scriptstyle uncramped"},[s("span",{class:"mord scriptstyle uncramped"},[s("span",{class:"mopen"},"("),s("span",{class:"mord mathit",style:{"margin-right":"0.05724em"}},"j"),s("span",{class:"mclose"},")")])])]),s("span",{class:"baseline-fix"},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),a("​")])])])])]),s("span",{style:{top:"0.7413999999999998em"}},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),s("span",{class:"mord displaystyle textstyle uncramped"},[s("span",{class:"mord displaystyle textstyle uncramped"}),s("span",{class:"mrel"},"="),s("span",{class:"mord"},[s("span",{class:"mord mathit"},"b"),s("span",{class:"vlist"},[s("span",{style:{top:"-0.413em","margin-right":"0.05em"}},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),s("span",{class:"reset-textstyle scriptstyle uncramped"},[s("span",{class:"mord scriptstyle uncramped"},[s("span",{class:"text mord scriptstyle uncramped"},[s("span",{class:"mord mathrm"},"o"),s("span",{class:"mord mathrm"},"l"),s("span",{class:"mord mathrm"},"d")])])])]),s("span",{class:"baseline-fix"},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),a("​")])])]),s("span",{class:"mbin"},"+"),s("span",{class:"mord mathit",style:{"margin-right":"0.03588em"}},"η"),s("span",{class:"mbin"},"⋅"),s("span",{class:"mopen"},"("),s("span",{class:"mord"},[s("span",{class:"mord mathit"},"t"),s("span",{class:"vlist"},[s("span",{style:{top:"-0.413em","margin-right":"0.05em"}},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),s("span",{class:"reset-textstyle scriptstyle uncramped"},[s("span",{class:"mord scriptstyle uncramped"},[s("span",{class:"mopen"},"("),s("span",{class:"mord mathit",style:{"margin-right":"0.05724em"}},"j"),s("span",{class:"mclose"},")")])])]),s("span",{class:"baseline-fix"},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),a("​")])])]),s("span",{class:"mbin"},"−"),s("span",{class:"mord"},[s("span",{class:"mord mathit",style:{"margin-right":"0.03588em"}},"y"),s("span",{class:"vlist"},[s("span",{style:{top:"-0.413em","margin-right":"0.05em"}},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),s("span",{class:"reset-textstyle scriptstyle uncramped"},[s("span",{class:"mord scriptstyle uncramped"},[s("span",{class:"mopen"},"("),s("span",{class:"mord mathit",style:{"margin-right":"0.05724em"}},"j"),s("span",{class:"mclose"},")")])])]),s("span",{class:"baseline-fix"},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),a("​")])])]),s("span",{class:"mclose"},")")])]),s("span",{class:"baseline-fix"},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),a("​")])])])])])])])])])]),a(" 这里 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",null,[s("semantics",null,[s("mrow",null,[s("mi",null,"η")]),s("annotation",{encoding:"application/x-tex"},"\\eta")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"strut",style:{height:"0.43056em"}}),s("span",{class:"strut bottom",style:{height:"0.625em","vertical-align":"-0.19444em"}}),s("span",{class:"base textstyle uncramped"},[s("span",{class:"mord mathit",style:{"margin-right":"0.03588em"}},"η")])])]),a(" 是"),s("strong",null,"学习率"),a("，控制每次调整的步幅。")])])])],-1),n(`<p><strong>大白话解读学习规则：</strong></p><ul><li><code>(t - y)</code> 是<strong>误差信号</strong>。猜高了（y=1, t=0）就负调整，猜低了（y=0, t=1）就正调整。</li><li>调整幅度 <code>η * (t-y) * x_i</code> 非常巧妙： <ul><li>如果某个输入 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>x</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">x_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.43056em;"></span><span class="strut bottom" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit">x</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathit">i</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span></span> 很大，说明它对这次错误决策“贡献”大，它的权重 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>w</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">w_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.43056em;"></span><span class="strut bottom" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit" style="margin-right:0.02691em;">w</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:-0.02691em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathit">i</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span></span> 就要被多调整一些。</li><li>如果输入 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>x</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">x_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.43056em;"></span><span class="strut bottom" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit">x</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathit">i</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span></span> 是0，它和错误没关系，它的权重就不变。</li></ul></li></ul><hr><h3 id="收敛-感知机的-能力边界-与-保证" tabindex="-1">收敛 - 感知机的“能力边界”与“保证” <a class="header-anchor" href="#收敛-感知机的-能力边界-与-保证" aria-label="Permalink to &quot;收敛 - 感知机的“能力边界”与“保证”&quot;">​</a></h3><p><strong>大白话解释：</strong> 感知机的学习规则有效吗？能保证学会吗？答案是：<strong>只要问题本身是“线性可分”的，就一定能学会，而且学习次数有上限。</strong></p><p><strong>理论核心（Novikoff定理）：</strong></p><ul><li><p><strong>线性可分</strong>：存在一条直线（或一个平面、超平面），能完美地把所有正负样本分开。</p><ul><li><strong>例子</strong>：“与”、“或”问题是线性可分的。</li><li><strong>反例</strong>：“异或（XOR）”问题是线性不可分的。你无法用一条直线把(0,0)、(1,1)（输出0）和(0,1)、(1,0)（输出1）分开。</li></ul></li><li><p><strong>命题</strong>：如果数据线性可分，感知机算法会在有限步内收敛到一个解（一组能正确分类所有样本的权重）。</p></li></ul><p><strong>局限性</strong>： 即使收敛，找到的这条分界线也往往<strong>紧贴着样本</strong>（如下图左），对噪声非常敏感。稍微来个异常点，分界线就得大改，<strong>泛化能力差</strong>。</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>线性可分 (好的)      vs.      线性不可分 (感知机搞不定)</span></span>
<span class="line"><span>◯ ●                         ◯ ●</span></span>
<span class="line"><span>\\  |                         ● ◯</span></span>
<span class="line"><span> \\ |                         ◯ ●</span></span>
<span class="line"><span>  \\|</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><hr><h3 id="同一层内的多个感知机-迈向多层网络的第一步" tabindex="-1">同一层内的多个感知机 - 迈向多层网络的第一步 <a class="header-anchor" href="#同一层内的多个感知机-迈向多层网络的第一步" aria-label="Permalink to &quot;同一层内的多个感知机 - 迈向多层网络的第一步&quot;">​</a></h3><p><strong>大白话解释：</strong> 单个感知机只能画一条直线，解决二分类问题。那多分类问题（比如识别数字0-9）怎么办？很自然的想法：<strong>请多个“专家”一起干活</strong>。</p><p><strong>结构</strong>：</p><ul><li>输入层：共享同一组输入特征（<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>x</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>x</mi><mn>2</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi>x</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">x_1, x_2, ..., x_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.43056em;"></span><span class="strut bottom" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit">x</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathrm">1</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mpunct">,</span><span class="mord"><span class="mord mathit">x</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathrm">2</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mpunct">,</span><span class="mord mathrm">.</span><span class="mord mathrm">.</span><span class="mord mathrm">.</span><span class="mpunct">,</span><span class="mord"><span class="mord mathit">x</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathit">n</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span></span>）。</li><li>输出层：多个感知机神经元（<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>z</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>z</mi><mn>2</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi>z</mi><mi>k</mi></msub></mrow><annotation encoding="application/x-tex">z_1, z_2, ..., z_k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.43056em;"></span><span class="strut bottom" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit" style="margin-right:0.04398em;">z</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:-0.04398em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathrm">1</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mpunct">,</span><span class="mord"><span class="mord mathit" style="margin-right:0.04398em;">z</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:-0.04398em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathrm">2</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mpunct">,</span><span class="mord mathrm">.</span><span class="mord mathrm">.</span><span class="mord mathrm">.</span><span class="mpunct">,</span><span class="mord"><span class="mord mathit" style="margin-right:0.04398em;">z</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:-0.04398em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathit" style="margin-right:0.03148em;">k</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span></span>），每个负责一个类别（比如<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>z</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">z_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.43056em;"></span><span class="strut bottom" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit" style="margin-right:0.04398em;">z</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:-0.04398em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathrm">1</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span></span>判断是不是数字“0”，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>z</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">z_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.43056em;"></span><span class="strut bottom" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit" style="margin-right:0.04398em;">z</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:-0.04398em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathrm">2</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span></span>判断是不是“1”...）。</li><li>最终决策：看哪个神经元的输出值最大（或最激活）。</li></ul><p><strong>关键点</strong>： 在这样一个<strong>单层</strong>网络中，这些输出神经元是<strong>相互独立、并行学习</strong>的。它们之间没有连接，每个神经元只关心自己的任务和目标。<strong>此时，网络还没有“隐藏层”的概念。</strong></p><hr><h3 id="自适应线性神经网络-换个-更平滑-的优化目标" tabindex="-1">自适应线性神经网络 - 换个“更平滑”的优化目标 <a class="header-anchor" href="#自适应线性神经网络-换个-更平滑-的优化目标" aria-label="Permalink to &quot;自适应线性神经网络 - 换个“更平滑”的优化目标&quot;">​</a></h3><p><strong>大白话解释：</strong> 感知机直接对离散的（0/1）输出做调整，有点“莽撞”。Widrow和Hoff想的更精细：<strong>我们不如直接去优化那个连续的值（<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>z</mi></mrow><annotation encoding="application/x-tex">z</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.43056em;"></span><span class="strut bottom" style="height:0.43056em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right:0.04398em;">z</span></span></span></span>），让它无限接近我们的真实目标值（<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>t</mi></mrow><annotation encoding="application/x-tex">t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.61508em;"></span><span class="strut bottom" style="height:0.61508em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">t</span></span></span></span>）。</strong></p><p><strong>核心改变</strong>：</p>`,19),s("ol",null,[s("li",null,[s("strong",null,"激活函数"),a("：把输出端的"),s("strong",null,"阶跃函数"),a("拿掉。感知机输出的是离散的"),s("code",null,"y"),a("，而ADALINE输出的是连续的"),s("code",null,"z"),a("。"),s("p",null,[s("span",{class:"katex-display"},[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",null,[s("semantics",null,[s("mrow",null,[s("mi",null,"z"),s("mo",null,"="),s("msup",null,[s("mi",null,"w"),s("mi",null,"T")]),s("mi",null,"x"),s("mo",null,"+"),s("mi",null,"b")]),s("annotation",{encoding:"application/x-tex"},"z = w^T x + b ")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"strut",style:{height:"0.8913309999999999em"}}),s("span",{class:"strut bottom",style:{height:"0.9746609999999999em","vertical-align":"-0.08333em"}}),s("span",{class:"base displaystyle textstyle uncramped"},[s("span",{class:"mord mathit",style:{"margin-right":"0.04398em"}},"z"),s("span",{class:"mrel"},"="),s("span",{class:"mord"},[s("span",{class:"mord mathit",style:{"margin-right":"0.02691em"}},"w"),s("span",{class:"vlist"},[s("span",{style:{top:"-0.413em","margin-right":"0.05em"}},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),s("span",{class:"reset-textstyle scriptstyle uncramped"},[s("span",{class:"mord mathit",style:{"margin-right":"0.13889em"}},"T")])]),s("span",{class:"baseline-fix"},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),a("​")])])]),s("span",{class:"mord mathit"},"x"),s("span",{class:"mbin"},"+"),s("span",{class:"mord mathit"},"b")])])])])])]),s("li",null,[s("strong",null,"学习目标"),a("：最小化"),s("strong",null,"均方误差（MSE）"),a(),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",null,[s("semantics",null,[s("mrow",null,[s("mi",null,"E"),s("mo",null,"="),s("mfrac",null,[s("mrow",null,[s("mn",null,"1")]),s("mrow",null,[s("mi",null,"N")])]),s("mo",null,"∑"),s("mo",null,"("),s("msup",null,[s("mi",null,"t"),s("mrow",null,[s("mo",null,"("),s("mi",null,"j"),s("mo",null,")")])]),s("mo",null,"−"),s("msup",null,[s("mi",null,"z"),s("mrow",null,[s("mo",null,"("),s("mi",null,"j"),s("mo",null,")")])]),s("msup",null,[s("mo",null,")"),s("mn",null,"2")])]),s("annotation",{encoding:"application/x-tex"},"E = \\frac{1}{N} \\sum (t^{(j)} - z^{(j)})^2")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"strut",style:{height:"0.8879999999999999em"}}),s("span",{class:"strut bottom",style:{height:"1.2329999999999999em","vertical-align":"-0.345em"}}),s("span",{class:"base textstyle uncramped"},[s("span",{class:"mord mathit",style:{"margin-right":"0.05764em"}},"E"),s("span",{class:"mrel"},"="),s("span",{class:"mord reset-textstyle textstyle uncramped"},[s("span",{class:"sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"}),s("span",{class:"mfrac"},[s("span",{class:"vlist"},[s("span",{style:{top:"0.345em"}},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),s("span",{class:"reset-textstyle scriptstyle cramped"},[s("span",{class:"mord scriptstyle cramped"},[s("span",{class:"mord mathit",style:{"margin-right":"0.10903em"}},"N")])])]),s("span",{style:{top:"-0.22999999999999998em"}},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),s("span",{class:"reset-textstyle textstyle uncramped frac-line"})]),s("span",{style:{top:"-0.394em"}},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),s("span",{class:"reset-textstyle scriptstyle uncramped"},[s("span",{class:"mord scriptstyle uncramped"},[s("span",{class:"mord mathrm"},"1")])])]),s("span",{class:"baseline-fix"},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),a("​")])])]),s("span",{class:"sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"})]),s("span",{class:"op-symbol small-op mop",style:{top:"-0.0000050000000000050004em"}},"∑"),s("span",{class:"mopen"},"("),s("span",{class:"mord"},[s("span",{class:"mord mathit"},"t"),s("span",{class:"vlist"},[s("span",{style:{top:"-0.363em","margin-right":"0.05em"}},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),s("span",{class:"reset-textstyle scriptstyle uncramped"},[s("span",{class:"mord scriptstyle uncramped"},[s("span",{class:"mopen"},"("),s("span",{class:"mord mathit",style:{"margin-right":"0.05724em"}},"j"),s("span",{class:"mclose"},")")])])]),s("span",{class:"baseline-fix"},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),a("​")])])]),s("span",{class:"mbin"},"−"),s("span",{class:"mord"},[s("span",{class:"mord mathit",style:{"margin-right":"0.04398em"}},"z"),s("span",{class:"vlist"},[s("span",{style:{top:"-0.363em","margin-right":"0.05em"}},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),s("span",{class:"reset-textstyle scriptstyle uncramped"},[s("span",{class:"mord scriptstyle uncramped"},[s("span",{class:"mopen"},"("),s("span",{class:"mord mathit",style:{"margin-right":"0.05724em"}},"j"),s("span",{class:"mclose"},")")])])]),s("span",{class:"baseline-fix"},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),a("​")])])]),s("span",{class:"mclose"},[s("span",{class:"mclose"},")"),s("span",{class:"vlist"},[s("span",{style:{top:"-0.363em","margin-right":"0.05em"}},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),s("span",{class:"reset-textstyle scriptstyle uncramped"},[s("span",{class:"mord mathrm"},"2")])]),s("span",{class:"baseline-fix"},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),a("​")])])])])])]),a("。这个函数是连续、可微的，优化起来更平滑。")]),s("li",null,[s("strong",null,"学习规则（LMS/Widrow-Hoff规则）"),a("："),s("p",null,[s("span",{class:"katex-display"},[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",null,[s("semantics",null,[s("mrow",null,[s("mtable",null,[s("mtr",null,[s("mtd",null,[s("mrow",null,[s("msubsup",null,[s("mi",null,"w"),s("mi",null,"i"),s("mrow",null,[s("mtext",null,[s("mi",{mathvariant:"normal"},"n"),s("mi",{mathvariant:"normal"},"e"),s("mi",{mathvariant:"normal"},"w")])])])])]),s("mtd",null,[s("mrow",null,[s("mrow"),s("mo",null,"="),s("msubsup",null,[s("mi",null,"w"),s("mi",null,"i"),s("mrow",null,[s("mtext",null,[s("mi",{mathvariant:"normal"},"o"),s("mi",{mathvariant:"normal"},"l"),s("mi",{mathvariant:"normal"},"d")])])]),s("mo",null,"+"),s("mi",null,"η"),s("mo",null,"⋅"),s("mo",null,"("),s("msup",null,[s("mi",null,"t"),s("mrow",null,[s("mo",null,"("),s("mi",null,"j"),s("mo",null,")")])]),s("mo",null,"−"),s("msup",null,[s("mi",null,"z"),s("mrow",null,[s("mo",null,"("),s("mi",null,"j"),s("mo",null,")")])]),s("mo",null,")"),s("mo",null,"⋅"),s("msubsup",null,[s("mi",null,"x"),s("mi",null,"i"),s("mrow",null,[s("mo",null,"("),s("mi",null,"j"),s("mo",null,")")])])])])]),s("mtr",null,[s("mtd",null,[s("mrow",null,[s("msup",null,[s("mi",null,"b"),s("mrow",null,[s("mtext",null,[s("mi",{mathvariant:"normal"},"n"),s("mi",{mathvariant:"normal"},"e"),s("mi",{mathvariant:"normal"},"w")])])])])]),s("mtd",null,[s("mrow",null,[s("mrow"),s("mo",null,"="),s("msup",null,[s("mi",null,"b"),s("mrow",null,[s("mtext",null,[s("mi",{mathvariant:"normal"},"o"),s("mi",{mathvariant:"normal"},"l"),s("mi",{mathvariant:"normal"},"d")])])]),s("mo",null,"+"),s("mi",null,"η"),s("mo",null,"⋅"),s("mo",null,"("),s("msup",null,[s("mi",null,"t"),s("mrow",null,[s("mo",null,"("),s("mi",null,"j"),s("mo",null,")")])]),s("mo",null,"−"),s("msup",null,[s("mi",null,"z"),s("mrow",null,[s("mo",null,"("),s("mi",null,"j"),s("mo",null,")")])]),s("mo",null,")")])])])])]),s("annotation",{encoding:"application/x-tex"},"\\begin{aligned} w_i^{\\text{new}} &= w_i^{\\text{old}} + \\eta \\cdot (t^{(j)} - z^{(j)}) \\cdot x_i^{(j)} \\\\ b^{\\text{new}} &= b^{\\text{old}} + \\eta \\cdot (t^{(j)} - z^{(j)}) \\end{aligned} ")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"strut",style:{height:"1.6014em"}}),s("span",{class:"strut bottom",style:{height:"2.7028em","vertical-align":"-1.1014em"}}),s("span",{class:"base displaystyle textstyle uncramped"},[s("span",{class:"mord"},[s("span",{class:"mtable"},[s("span",{class:"col-align-r"},[s("span",{class:"vlist"},[s("span",{style:{top:"-0.5566em"}},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),s("span",{class:"mord displaystyle textstyle uncramped"},[s("span",{class:"mord"},[s("span",{class:"mord mathit",style:{"margin-right":"0.02691em"}},"w"),s("span",{class:"vlist"},[s("span",{style:{top:"0.247em","margin-left":"-0.02691em","margin-right":"0.05em"}},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),s("span",{class:"reset-textstyle scriptstyle cramped"},[s("span",{class:"mord mathit"},"i")])]),s("span",{style:{top:"-0.4129999999999999em","margin-right":"0.05em"}},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),s("span",{class:"reset-textstyle scriptstyle uncramped"},[s("span",{class:"mord scriptstyle uncramped"},[s("span",{class:"text mord scriptstyle uncramped"},[s("span",{class:"mord mathrm"},"n"),s("span",{class:"mord mathrm"},"e"),s("span",{class:"mord mathrm",style:{"margin-right":"0.01389em"}},"w")])])])]),s("span",{class:"baseline-fix"},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),a("​")])])])])]),s("span",{style:{top:"0.7413999999999998em"}},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),s("span",{class:"mord displaystyle textstyle uncramped"},[s("span",{class:"mord"},[s("span",{class:"mord mathit"},"b"),s("span",{class:"vlist"},[s("span",{style:{top:"-0.413em","margin-right":"0.05em"}},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),s("span",{class:"reset-textstyle scriptstyle uncramped"},[s("span",{class:"mord scriptstyle uncramped"},[s("span",{class:"text mord scriptstyle uncramped"},[s("span",{class:"mord mathrm"},"n"),s("span",{class:"mord mathrm"},"e"),s("span",{class:"mord mathrm",style:{"margin-right":"0.01389em"}},"w")])])])]),s("span",{class:"baseline-fix"},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),a("​")])])])])]),s("span",{class:"baseline-fix"},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),a("​")])])]),s("span",{class:"col-align-l"},[s("span",{class:"vlist"},[s("span",{style:{top:"-0.5566em"}},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),s("span",{class:"mord displaystyle textstyle uncramped"},[s("span",{class:"mord displaystyle textstyle uncramped"}),s("span",{class:"mrel"},"="),s("span",{class:"mord"},[s("span",{class:"mord mathit",style:{"margin-right":"0.02691em"}},"w"),s("span",{class:"vlist"},[s("span",{style:{top:"0.247em","margin-left":"-0.02691em","margin-right":"0.05em"}},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),s("span",{class:"reset-textstyle scriptstyle cramped"},[s("span",{class:"mord mathit"},"i")])]),s("span",{style:{top:"-0.4129999999999999em","margin-right":"0.05em"}},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),s("span",{class:"reset-textstyle scriptstyle uncramped"},[s("span",{class:"mord scriptstyle uncramped"},[s("span",{class:"text mord scriptstyle uncramped"},[s("span",{class:"mord mathrm"},"o"),s("span",{class:"mord mathrm"},"l"),s("span",{class:"mord mathrm"},"d")])])])]),s("span",{class:"baseline-fix"},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),a("​")])])]),s("span",{class:"mbin"},"+"),s("span",{class:"mord mathit",style:{"margin-right":"0.03588em"}},"η"),s("span",{class:"mbin"},"⋅"),s("span",{class:"mopen"},"("),s("span",{class:"mord"},[s("span",{class:"mord mathit"},"t"),s("span",{class:"vlist"},[s("span",{style:{top:"-0.413em","margin-right":"0.05em"}},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),s("span",{class:"reset-textstyle scriptstyle uncramped"},[s("span",{class:"mord scriptstyle uncramped"},[s("span",{class:"mopen"},"("),s("span",{class:"mord mathit",style:{"margin-right":"0.05724em"}},"j"),s("span",{class:"mclose"},")")])])]),s("span",{class:"baseline-fix"},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),a("​")])])]),s("span",{class:"mbin"},"−"),s("span",{class:"mord"},[s("span",{class:"mord mathit",style:{"margin-right":"0.04398em"}},"z"),s("span",{class:"vlist"},[s("span",{style:{top:"-0.413em","margin-right":"0.05em"}},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),s("span",{class:"reset-textstyle scriptstyle uncramped"},[s("span",{class:"mord scriptstyle uncramped"},[s("span",{class:"mopen"},"("),s("span",{class:"mord mathit",style:{"margin-right":"0.05724em"}},"j"),s("span",{class:"mclose"},")")])])]),s("span",{class:"baseline-fix"},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),a("​")])])]),s("span",{class:"mclose"},")"),s("span",{class:"mbin"},"⋅"),s("span",{class:"mord"},[s("span",{class:"mord mathit"},"x"),s("span",{class:"vlist"},[s("span",{style:{top:"0.276864em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),s("span",{class:"reset-textstyle scriptstyle cramped"},[s("span",{class:"mord mathit"},"i")])]),s("span",{style:{top:"-0.5198em","margin-right":"0.05em"}},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),s("span",{class:"reset-textstyle scriptstyle uncramped"},[s("span",{class:"mord scriptstyle uncramped"},[s("span",{class:"mopen"},"("),s("span",{class:"mord mathit",style:{"margin-right":"0.05724em"}},"j"),s("span",{class:"mclose"},")")])])]),s("span",{class:"baseline-fix"},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),a("​")])])])])]),s("span",{style:{top:"0.7413999999999998em"}},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),s("span",{class:"mord displaystyle textstyle uncramped"},[s("span",{class:"mord displaystyle textstyle uncramped"}),s("span",{class:"mrel"},"="),s("span",{class:"mord"},[s("span",{class:"mord mathit"},"b"),s("span",{class:"vlist"},[s("span",{style:{top:"-0.413em","margin-right":"0.05em"}},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),s("span",{class:"reset-textstyle scriptstyle uncramped"},[s("span",{class:"mord scriptstyle uncramped"},[s("span",{class:"text mord scriptstyle uncramped"},[s("span",{class:"mord mathrm"},"o"),s("span",{class:"mord mathrm"},"l"),s("span",{class:"mord mathrm"},"d")])])])]),s("span",{class:"baseline-fix"},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),a("​")])])]),s("span",{class:"mbin"},"+"),s("span",{class:"mord mathit",style:{"margin-right":"0.03588em"}},"η"),s("span",{class:"mbin"},"⋅"),s("span",{class:"mopen"},"("),s("span",{class:"mord"},[s("span",{class:"mord mathit"},"t"),s("span",{class:"vlist"},[s("span",{style:{top:"-0.413em","margin-right":"0.05em"}},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),s("span",{class:"reset-textstyle scriptstyle uncramped"},[s("span",{class:"mord scriptstyle uncramped"},[s("span",{class:"mopen"},"("),s("span",{class:"mord mathit",style:{"margin-right":"0.05724em"}},"j"),s("span",{class:"mclose"},")")])])]),s("span",{class:"baseline-fix"},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),a("​")])])]),s("span",{class:"mbin"},"−"),s("span",{class:"mord"},[s("span",{class:"mord mathit",style:{"margin-right":"0.04398em"}},"z"),s("span",{class:"vlist"},[s("span",{style:{top:"-0.413em","margin-right":"0.05em"}},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),s("span",{class:"reset-textstyle scriptstyle uncramped"},[s("span",{class:"mord scriptstyle uncramped"},[s("span",{class:"mopen"},"("),s("span",{class:"mord mathit",style:{"margin-right":"0.05724em"}},"j"),s("span",{class:"mclose"},")")])])]),s("span",{class:"baseline-fix"},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),a("​")])])]),s("span",{class:"mclose"},")")])]),s("span",{class:"baseline-fix"},[s("span",{class:"fontsize-ensurer reset-size5 size5"},[s("span",{style:{"font-size":"0em"}},"​")]),a("​")])])])])])])])])])]),a(" 看，形式和感知机规则一模一样，只是把"),s("code",null,"y"),a("换成了"),s("code",null,"z"),a("！")])],-1),n(`<p><strong>另一视角（重要区别）</strong>：</p><ul><li><strong>ADALINE</strong>：在学习时，阶跃函数被<strong>绕开</strong>了。它是在做一个<strong>线性回归</strong>任务，试图用一条直线去拟合数据点。训练完成后，再把阶跃函数加回去用于最终的分类输出。</li><li><strong>感知机</strong>：自始至终都在和阶跃函数打交道，直接优化分类边界。</li></ul><p><strong>例子（讲义中的XOR问题）</strong>： ADALINE也无法解决XOR问题，因为它本质也是线性的。但它最小化MSE的行为，会使它找到一条“虽然分不开，但整体误差最小”的直线，这比感知机直接失败要更优雅一些。</p><hr><h3 id="madaline模型-多层网络的早期探索" tabindex="-1">MADALINE模型 - 多层网络的早期探索 <a class="header-anchor" href="#madaline模型-多层网络的早期探索" aria-label="Permalink to &quot;MADALINE模型 - 多层网络的早期探索&quot;">​</a></h3><p><strong>大白话解释：</strong> 既然单层网络（无论感知机还是ADALINE）连XOR都搞不定，那很自然就要堆叠多层。<strong>MADALINE就是“多个ADALINE”堆起来形成的早期多层网络。</strong></p><p><strong>结构</strong>：</p><ul><li>典型的<strong>三层结构</strong>：输入层、隐藏层、输出层。</li><li>隐藏层和输出层的神经元都是<strong>ADALINE单元</strong>（即使用连续值<code>z</code>进行计算和学习的线性神经元）。</li></ul><p><strong>历史意义与困境</strong>：</p><ol><li><strong>1962年算法</strong>：只能训练最后一层（输出层）的权重。隐藏层的权重是<strong>随机初始化后固定不变</strong>的。这相当于只学习了一个线性分类器，无法发挥多层网络的威力。</li><li><strong>1988年算法 (MRIII)</strong>：提出了训练隐藏层权重的算法，但非常复杂和繁琐。</li><li><strong>Sigmoid替代</strong>：后来有人用可微的Sigmoid函数替换掉ADALINE的线性输出和阶跃函数，并应用梯度下降法训练——<strong>这就是著名的反向传播（Backpropagation）算法！</strong> MADALINE的训练算法后来被证明是反向传播的一种特例。</li></ol><p><strong>结论</strong>：MADALINE是连接单层感知机/ADALINE和现代深度神经网络的关键过渡形态。它意识到了深度的重要性，但苦于没有高效通用的训练算法，直到反向传播算法的出现和完善才真正解决了这个问题。</p><hr><h2 id="三、第二次兴起与寒冬-1980s-1990s" tabindex="-1">三、第二次兴起与寒冬（1980s-1990s） <a class="header-anchor" href="#三、第二次兴起与寒冬-1980s-1990s" aria-label="Permalink to &quot;三、第二次兴起与寒冬（1980s-1990s）&quot;">​</a></h2><h4 id="_1982年-霍普菲尔德网络" tabindex="-1"><strong>1982年：霍普菲尔德网络</strong> <a class="header-anchor" href="#_1982年-霍普菲尔德网络" aria-label="Permalink to &quot;**1982年：霍普菲尔德网络**&quot;">​</a></h4><ul><li>引入能量函数，解决组合优化问题（如旅行商问题）</li></ul><h4 id="_1986年-反向传播-bp-算法革命" tabindex="-1"><strong>1986年：反向传播（BP）算法革命</strong> <a class="header-anchor" href="#_1986年-反向传播-bp-算法革命" aria-label="Permalink to &quot;**1986年：反向传播（BP）算法革命**&quot;">​</a></h4><ul><li><strong>核心人物</strong>：Hinton、Rumelhart</li><li><strong>突破</strong>： <ul><li>首次给出<strong>多层神经网络训练方法</strong>（链式求导更新权重）</li><li>解决XOR等非线性问题</li></ul></li><li><strong>应用</strong>：LeCun用BP训练<strong>卷积神经网络（CNN）</strong> 识别手写数字（1989）</li></ul><h4 id="_1990s-寒冬再临" tabindex="-1"><strong>1990s：寒冬再临</strong> <a class="header-anchor" href="#_1990s-寒冬再临" aria-label="Permalink to &quot;**1990s：寒冬再临**&quot;">​</a></h4><ul><li><strong>原因</strong>： <ol><li>算力不足（训练稍深的网络需数月）</li><li>数据稀缺（互联网未普及）</li><li>SVM等传统算法效果更好（理论清晰+训练快）</li></ol></li><li><strong>悲情时刻</strong>： <ul><li>LeCun的支票识别系统虽被银行采用（1990s初），但学界仍不看好神经网络。</li></ul></li></ul><hr><h2 id="四、第三次兴起-深度学习革命-2006至今" tabindex="-1">四、第三次兴起：深度学习革命（2006至今） <a class="header-anchor" href="#四、第三次兴起-深度学习革命-2006至今" aria-label="Permalink to &quot;四、第三次兴起：深度学习革命（2006至今）&quot;">​</a></h2><h4 id="_2006年-深度学习元年" tabindex="-1"><strong>2006年：深度学习元年</strong> <a class="header-anchor" href="#_2006年-深度学习元年" aria-label="Permalink to &quot;**2006年：深度学习元年**&quot;">​</a></h4><ul><li><strong>Hinton三篇奠基论文</strong>： <ul><li>提出<strong>深度信念网络（DBN）</strong>，用<strong>逐层预训练</strong>解决梯度消失</li><li>口号：&quot;让深度模型重新可行！&quot;</li></ul></li></ul><h4 id="_2012年-imagenet引爆点" tabindex="-1"><strong>2012年：ImageNet引爆点</strong> <a class="header-anchor" href="#_2012年-imagenet引爆点" aria-label="Permalink to &quot;**2012年：ImageNet引爆点**&quot;">​</a></h4><ul><li><strong>事件</strong>：Hinton团队AlexNet在ImageNet图像识别大赛</li><li><strong>突破</strong>： <ul><li><strong>GPU训练</strong>（速度提升100倍）</li><li><strong>ReLU激活函数</strong>（缓解梯度消失）</li><li><strong>Dropout正则化</strong>（防止过拟合）</li></ul></li><li><strong>结果</strong>： <ul><li>Top-5错误率<strong>从26%降至15%</strong>（碾压传统方法）→ 学术界震动</li></ul></li></ul><h4 id="_2015-2016-技术井喷" tabindex="-1"><strong>2015-2016：技术井喷</strong> <a class="header-anchor" href="#_2015-2016-技术井喷" aria-label="Permalink to &quot;**2015-2016：技术井喷**&quot;">​</a></h4><table tabindex="0"><thead><tr><th>年份</th><th>技术</th><th>贡献者</th><th>意义</th></tr></thead><tbody><tr><td>2015</td><td><strong>ResNet</strong></td><td>何恺明</td><td>残差连接解决千层网络退化</td></tr><tr><td>2015</td><td><strong>AlphaGo</strong></td><td>DeepMind</td><td>击败李世石，AI破圈</td></tr><tr><td>2017</td><td><strong>Transformer</strong></td><td>Google</td><td>取代RNN，NLP进入新时代</td></tr></tbody></table><hr><h3 id="关键转折点图解" tabindex="-1">关键转折点图解 <a class="header-anchor" href="#关键转折点图解" aria-label="Permalink to &quot;关键转折点图解&quot;">​</a></h3><div class="language-plaintext vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">plaintext</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>兴起 → 寒冬 → 复兴</span></span>
<span class="line"><span>1943 MP神经元 → 1969 Minsky批判 → 1986 BP算法 → 1990s SVM压制 → 2006 Hinton预训练 → 2012 AlexNet爆发</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><hr><h3 id="为何这次没再入冬" tabindex="-1">为何这次没再入冬？ <a class="header-anchor" href="#为何这次没再入冬" aria-label="Permalink to &quot;为何这次没再入冬？&quot;">​</a></h3><ol><li><strong>算力爆炸</strong>：GPU普及 → 训练速度提升千倍</li><li><strong>数据洪流</strong>：互联网产生海量标注数据（ImageNet含1400万图片）</li><li><strong>算法突破</strong>： <ul><li>ReLU/Dropout/BatchNorm 解决训练难题</li><li>注意力机制（Transformer）取代手工特征</li></ul></li></ol><blockquote><p>💡 <strong>历史启示</strong>：</p><ul><li><strong>技术需要&quot;天时地利&quot;</strong>：80年代BP算法因算力不足埋没，20年后GPU助其重生。</li><li><strong>坚持者改变世界</strong>：Hinton在寒冬期仍坚信神经网络，曾笑称&quot;我的论文被拒是因审稿人觉得神经网络没前途&quot;。‘</li></ul><hr></blockquote><h1 id="深度学习的应用" tabindex="-1">深度学习的应用 <a class="header-anchor" href="#深度学习的应用" aria-label="Permalink to &quot;深度学习的应用&quot;">​</a></h1><hr><h3 id="一、核心能力-视觉世界的-理解者" tabindex="-1">一、核心能力：视觉世界的“理解者” <a class="header-anchor" href="#一、核心能力-视觉世界的-理解者" aria-label="Permalink to &quot;一、核心能力：视觉世界的“理解者”&quot;">​</a></h3><p>深度学习最成熟、最广泛的应用领域是<strong>计算机视觉（Computer Vision）</strong>。它让机器拥有了“看”和“理解”图像视频的能力。</p><h4 id="_1-图像分类" tabindex="-1">1. 图像分类 <a class="header-anchor" href="#_1-图像分类" aria-label="Permalink to &quot;1. 图像分类&quot;">​</a></h4><ul><li><strong>任务</strong>：回答“这张图片是什么？”的问题。</li><li><strong>例子</strong>： <ul><li><strong>MNIST数据集</strong>：识别手写数字（0-9）。这是深度学习的“Hello World”。</li><li><strong>CIFAR-10/100数据集</strong>：识别物体类别（如飞机、汽车、鸟、猫等）。讲义中展示了CIFAR-10的10个类别。</li><li><strong>ImageNet大赛</strong>：这项拥有超过1400万张图片的赛事，是推动深度学习复兴的直接动力。模型需要判断图片属于1000个类别中的哪一个。</li></ul></li><li><strong>怎么做到的？</strong>：通过<strong>卷积神经网络（CNN）</strong> 层层抽取特征，从边缘、纹理到部件，最后组合成整个物体。</li></ul><h4 id="_2-人脸识别与验证" tabindex="-1">2. 人脸识别与验证 <a class="header-anchor" href="#_2-人脸识别与验证" aria-label="Permalink to &quot;2. 人脸识别与验证&quot;">​</a></h4><ul><li><strong>任务</strong>： <ul><li><strong>识别</strong>：“这个人是谁？”（1比N匹配）</li><li><strong>验证</strong>：“这是同一个人吗？”（1比1匹配）</li></ul></li><li><strong>例子</strong>： <ul><li><strong>手机解锁</strong>：Apple的Face ID。</li><li><strong>支付验证</strong>：支付宝/微信的刷脸支付。</li><li><strong>安防系统</strong>：机场、海关的身份核验。</li></ul></li><li><strong>效果多强？</strong>：讲义中的表格显示，从2014年到2015年，模型的准确率从<strong>97.25%</strong>（DeepFace）迅速提升到了<strong>99.63%</strong>（FaceNet），甚至超过了人类肉眼识别的准确率。</li><li><strong>趣味应用</strong>：讲义里甚至提到了“<strong>猪脸识别</strong>”，用于现代农业管理，追踪每头猪的健康和进食情况。</li></ul><h4 id="_3-目标检测" tabindex="-1">3. 目标检测 <a class="header-anchor" href="#_3-目标检测" aria-label="Permalink to &quot;3. 目标检测&quot;">​</a></h4><ul><li><strong>任务</strong>：不仅要“分类”，还要“定位”。回答“图片里有什么？它们在哪？”的问题。用<strong>边界框（Bounding Box）</strong> 标出位置。</li><li><strong>例子</strong>： <ul><li><strong>自动驾驶</strong>：检测车辆、行人、交通标志的位置。这是安全驾驶的核心。</li><li><strong>图片搜索</strong>：在相册里搜索“包含狗的所有照片”。</li><li><strong>视频监控</strong>：检测异常行为或特定人物。</li></ul></li><li><strong>输出</strong>：如讲义所示 <code>DOG, (x, y, w, h)</code>，即“类别”+“位置坐标”。</li></ul><h4 id="_4-特定目标检测" tabindex="-1">4. 特定目标检测 <a class="header-anchor" href="#_4-特定目标检测" aria-label="Permalink to &quot;4. 特定目标检测&quot;">​</a></h4><ul><li><strong>任务</strong>：目标检测的升级版，检测<strong>特定一类</strong>的物体。</li><li><strong>例子</strong>： <ul><li><strong>新零售</strong>：检测货架上的具体商品，判断是否需要补货。</li><li><strong>工业质检</strong>：检测生产线上的产品是否有瑕疵（如划痕、凹陷）。</li></ul></li></ul><h4 id="_5-医疗图像分析" tabindex="-1">5. 医疗图像分析 <a class="header-anchor" href="#_5-医疗图像分析" aria-label="Permalink to &quot;5. 医疗图像分析&quot;">​</a></h4><ul><li><strong>任务</strong>：成为医生的“AI助手”，分析医学影像。</li><li><strong>例子</strong>： <ul><li>讲义中提到了<strong>2016年的Data Science Bowl竞赛</strong>，目标是开发算法来自动识别肺癌迹象。<strong>冠军方案准确率超过96%</strong>，并获得50万美元奖金。</li><li><strong>其他应用</strong>：识别视网膜病变（糖尿病性眼病）、分析MRI（核磁共振）影像辅助诊断脑瘤、对X光片进行初步筛查等。</li></ul></li><li><strong>意义</strong>：AI可以7x24小时工作，处理海量影像，帮助医生提高诊断效率和准确性。</li></ul><hr><h3 id="二、生成能力-从-理解-到-创造" tabindex="-1">二、生成能力：从“理解”到“创造” <a class="header-anchor" href="#二、生成能力-从-理解-到-创造" aria-label="Permalink to &quot;二、生成能力：从“理解”到“创造”&quot;">​</a></h3><p>深度学习不仅会“识别”，更惊人的是它学会了“创造”，这就是<strong>生成式AI</strong>。</p><h4 id="_1-图像生成" tabindex="-1">1. 图像生成 <a class="header-anchor" href="#_1-图像生成" aria-label="Permalink to &quot;1. 图像生成&quot;">​</a></h4><ul><li><strong>任务</strong>：从无到有生成新的、逼真的图像。</li><li><strong>技术</strong>：主要依靠<strong>生成对抗网络（GAN）</strong>。</li><li><strong>例子</strong>： <ul><li>讲义中展示了用GAN生成的<strong>卧室图片</strong>，虽然有些细节扭曲，但整体看起来非常真实。</li><li><strong>DeepFake</strong>：换脸技术（同时也有被滥用的风险）。</li><li><strong>艺术创作</strong>：生成不存在的人像、风景画、二次元角色等。</li></ul></li></ul><h4 id="_2-人工智能作诗-谱曲" tabindex="-1">2. 人工智能作诗 &amp; 谱曲 <a class="header-anchor" href="#_2-人工智能作诗-谱曲" aria-label="Permalink to &quot;2. 人工智能作诗 &amp; 谱曲&quot;">​</a></h4><ul><li><strong>任务</strong>：学习人类的文化和艺术规律，进行文艺创作。</li><li><strong>例子</strong>： <ul><li>讲义中展示了一首由AI写的藏头诗（“人工智能”），虽然意境稍显生硬，但格式工整、语义通顺。</li><li><strong>AI谱曲</strong>：如Google的Magenta项目，可以创作新的旋律甚至整首乐曲。</li></ul></li><li><strong>原理</strong>：通常使用<strong>循环神经网络（RNN）</strong> 或 <strong>Transformer</strong> 来学习诗歌的平仄、韵律或音乐的音符、和弦序列之间的依赖关系。</li></ul><hr><h3 id="三、超越视觉-听与说的革命" tabindex="-1">三、超越视觉：听与说的革命 <a class="header-anchor" href="#三、超越视觉-听与说的革命" aria-label="Permalink to &quot;三、超越视觉：听与说的革命&quot;">​</a></h3><p>虽然讲义图片未直接展示，但结合其背景（提到语音识别），这也是深度学习的核心应用。</p><h4 id="_1-语音识别" tabindex="-1">1. 语音识别 <a class="header-anchor" href="#_1-语音识别" aria-label="Permalink to &quot;1. 语音识别&quot;">​</a></h4><ul><li><strong>任务</strong>：将语音转换成文字。</li><li><strong>例子</strong>： <ul><li><strong>智能助手</strong>：Siri, Alexa, 小爱同学，天猫精灵。</li><li><strong>实时字幕</strong>：视频会议、直播的实时语音转文字。</li><li><strong>输入法</strong>：语音输入。</li></ul></li></ul><h4 id="_2-机器翻译" tabindex="-1">2. 机器翻译 <a class="header-anchor" href="#_2-机器翻译" aria-label="Permalink to &quot;2. 机器翻译&quot;">​</a></h4><ul><li><strong>任务</strong>：将一种语言自动翻译成另一种语言。</li><li><strong>例子</strong>：Google翻译、百度翻译、腾讯翻译君。现在的翻译质量已经非常接近人工水平。</li></ul><hr><h1 id="深度学习的潜在风险" tabindex="-1">深度学习的潜在风险 <a class="header-anchor" href="#深度学习的潜在风险" aria-label="Permalink to &quot;深度学习的潜在风险&quot;">​</a></h1><hr><h3 id="一、隐私侵蚀-无所不在的-眼睛-与数据收集" tabindex="-1">一、隐私侵蚀：无所不在的“眼睛”与数据收集 <a class="header-anchor" href="#一、隐私侵蚀-无所不在的-眼睛-与数据收集" aria-label="Permalink to &quot;一、隐私侵蚀：无所不在的“眼睛”与数据收集&quot;">​</a></h3><p><strong>讲义案例：Google Photos</strong></p><ul><li><strong>发生了什么？</strong>：Google Photos利用强大的图像识别技术，能够自动识别、分类和搜索你所有的照片。你可以轻松搜索“狗”、“海滩”或某个朋友的名字，瞬间找到所有相关图片。</li><li><strong>风险所在</strong>： <ul><li><strong>无意识的数据收集</strong>：你上传的每一张照片都在帮助谷歌完善其识别模型。这些照片可能包含敏感信息：你的家庭住址（通过背景）、朋友关系网、生活习惯、甚至健康状况。</li><li><strong>数据所有权与使用权的模糊</strong>：虽然照片是你的，但AI模型从中学到的“知识”和“模式”是属于公司的。这些数据可能被用于你未知的用途，如精准广告推送甚至用户画像分析。</li></ul></li><li><strong>大白话解读</strong>：<strong>便利的代价是隐私</strong>。AI相册帮你管理记忆，但它也成了最了解你视觉生活的“数字老大哥”，你几乎无密可保。</li></ul><hr><h3 id="二、技术滥用与伦理失控-学坏的ai" tabindex="-1">二、技术滥用与伦理失控：学坏的AI <a class="header-anchor" href="#二、技术滥用与伦理失控-学坏的ai" aria-label="Permalink to &quot;二、技术滥用与伦理失控：学坏的AI&quot;">​</a></h3><p><strong>讲义案例：Microsoft Tay</strong></p><ul><li><strong>发生了什么？</strong>：Tay是微软2016年发布的一个AI聊天机器人，设计初衷是与年轻网民进行轻松有趣的对话。它被设定为可以通过互动学习。</li><li><strong>风险所在</strong>： <ul><li><strong>数据投毒</strong>：上线不到24小时，Tay就被一群用户“教坏”了。他们故意持续地对Tay进行种族主义、性别歧视和充满仇恨的言论灌输。</li><li><strong>缺乏价值判断能力</strong>：Tay作为一个深度学习模型，它只是简单地学习并复现输入数据中的模式，而没有人类的是非、道德和伦理判断能力。它很快就开始发表极端不当的言论，微软被迫紧急将其下线。</li></ul></li><li><strong>大白话解读</strong>：<strong>垃圾进，垃圾出（Garbage in, Garbage out）</strong>。AI没有天生的善恶观，它就像一张白纸，接触什么就变成什么。恶意用户完全可以“毒害”一个AI，让它成为散布有害信息的工具。</li></ul><hr><h3 id="三、安全漏洞-难以察觉的-欺骗-——对抗性攻击" tabindex="-1">三、安全漏洞：难以察觉的“欺骗”——对抗性攻击 <a class="header-anchor" href="#三、安全漏洞-难以察觉的-欺骗-——对抗性攻击" aria-label="Permalink to &quot;三、安全漏洞：难以察觉的“欺骗”——对抗性攻击&quot;">​</a></h3><p><strong>讲义案例：对抗样本（Adversarial Examples）</strong></p><ul><li><strong>发生了什么？</strong>：研究人员发现，对一张输入图片添加一些人眼根本无法察觉的、精心构造的微小噪声，就能让最先进的深度学习模型做出完全错误的判断。例如： <ul><li>一张被模型正确识别为“熊猫”的图片，加入噪声后，模型会以<strong>99.99%的置信度</strong>认为是“长臂猿”。</li><li>一个“停车”标志，贴上几个小小的特定贴纸，自动驾驶系统可能将其识别为“限速80公里”标志。</li></ul></li><li><strong>风险所在</strong>： <ul><li><strong>极度脆弱</strong>：这暴露了深度学习模型决策基础的脆弱性。其决策机制与人类完全不同，这些微扰足以在模型的高维特征空间里“推”着图像越过决策边界。</li><li><strong>严重后果</strong>：在现实世界中，这种攻击可能导致： <ul><li><strong>自动驾驶</strong>：误识别交通标志，引发严重车祸。</li><li><strong>身份验证</strong>：用特制眼镜或花纹欺骗人脸识别门禁。</li><li><strong>内容过滤</strong>：让不良图片绕过AI内容审核系统。</li></ul></li></ul></li><li><strong>大白话解读</strong>：AI有“幻觉”。你可以给现实世界加上一个“隐身斗篷”，人眼看一切正常，但在AI的“眼”里，东西却完全变了样。这为恶意攻击提供了新的手段。</li></ul><hr><h3 id="四、延伸讨论" tabindex="-1">四、延伸讨论 <a class="header-anchor" href="#四、延伸讨论" aria-label="Permalink to &quot;四、延伸讨论&quot;">​</a></h3><p>除了讲义明确提到的三点，还有几个公认的重大风险：</p><ol><li><p><strong>偏见与歧视（Bias）</strong>：</p><ul><li><strong>原因</strong>：AI的偏见源于训练数据的偏见。如果用于训练人脸识别模型的数据大部分是白种人，它在识别深肤色人种时错误率就会显著升高。</li><li><strong>后果</strong>：可能加剧社会不公，例如在招聘、贷款审批、司法评估等领域，AI可能会系统性地歧视某些群体。</li></ul></li><li><p><strong>“黑箱”问题（Black Box）</strong>：</p><ul><li><strong>原因</strong>：深度神经网络的决策过程极其复杂，有数百万甚至数十亿的参数。我们往往很难理解它到底是基于什么做出了某个特定决策。</li><li><strong>后果</strong>：在医疗、司法等需要高度责任和可解释性的领域，如果一个AI模型诊断你得了癌症或者说你有犯罪高风险，你却无法问它“为什么”，这将导致信任危机和责任归属的难题。</li></ul></li><li><p><strong>社会与经济影响</strong>：</p><ul><li><strong>失业风险</strong>：自动化可能取代大量重复性和部分认知型工作，如卡车司机、生产线工人、甚至部分放射科医生。</li><li><strong>权力集中</strong>：掌握最强AI技术和海量数据的科技巨头，其权力和影响力可能变得过大。</li></ul></li></ol><h3 id="总结" tabindex="-1">总结 <a class="header-anchor" href="#总结" aria-label="Permalink to &quot;总结&quot;">​</a></h3><table tabindex="0"><thead><tr><th style="text-align:left;">风险类型</th><th style="text-align:left;">讲义案例</th><th style="text-align:left;">核心问题</th><th style="text-align:left;">潜在影响</th></tr></thead><tbody><tr><td style="text-align:left;"><strong>隐私侵蚀</strong></td><td style="text-align:left;">Google Photos</td><td style="text-align:left;">大规模数据收集与使用权</td><td style="text-align:left;">个人隐私泄露，数字监控</td></tr><tr><td style="text-align:left;"><strong>技术滥用</strong></td><td style="text-align:left;">Microsoft Tay</td><td style="text-align:left;">模型易被恶意数据“毒害”</td><td style="text-align:left;">传播虚假信息、仇恨言论</td></tr><tr><td style="text-align:left;"><strong>安全漏洞</strong></td><td style="text-align:left;">对抗样本</td><td style="text-align:left;">模型决策极其脆弱</td><td style="text-align:left;">自动驾驶事故，安全系统被绕过</td></tr><tr><td style="text-align:left;"><strong>偏见与歧视</strong></td><td style="text-align:left;">(延伸)</td><td style="text-align:left;">训练数据包含社会偏见</td><td style="text-align:left;">加剧社会不公</td></tr><tr><td style="text-align:left;"><strong>黑箱问题</strong></td><td style="text-align:left;">(延伸)</td><td style="text-align:left;">决策过程不透明</td><td style="text-align:left;">难以问责，阻碍关键领域应用</td></tr></tbody></table><hr>`,83)]))}const f=e(o,[["render",c]]);export{x as __pageData,f as default};
