import{_ as t,c as i,o as l,a3 as e}from"./chunks/framework.C8Xs1bna.js";const c=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"C++/4.C++研修阶段/第3节工具使用/1.VisualStudio.md","filePath":"C++/4.C++研修阶段/第3节工具使用/1.VisualStudio.md","lastUpdated":1754900608000}'),s={name:"C++/4.C++研修阶段/第3节工具使用/1.VisualStudio.md"};function r(d,a,n,h,o,p){return l(),i("div",null,a[0]||(a[0]=[e(`<h3 id="visualstudio" tabindex="-1">VisualStudio <a class="header-anchor" href="#visualstudio" aria-label="Permalink to &quot;VisualStudio&quot;">​</a></h3><p>Visual Studio是一款功能强大的集成开发环境（IDE），适用于Windows、macOS和Linux操作系统。支持从代码编写、编辑、调试到应用发布的全过程。</p><hr><h3 id="visualstudio下载" tabindex="-1">VisualStudio下载 <a class="header-anchor" href="#visualstudio下载" aria-label="Permalink to &quot;VisualStudio下载&quot;">​</a></h3><p>官方下载地址：<a href="https://visualstudio.microsoft.com/zh-hans/downloads/" target="_blank" rel="noreferrer">https://visualstudio.microsoft.com/zh-hans/downloads/</a></p><ul><li>选择社区版下载。</li><li>安装需要的组件和环境。</li><li>选择安装路径。</li></ul><hr><h3 id="解决方案结构" tabindex="-1">解决方案结构 <a class="header-anchor" href="#解决方案结构" aria-label="Permalink to &quot;解决方案结构&quot;">​</a></h3><p>解决方案是一个容器，用于包含一个或多个相关项目，以及生成信息。VS的每次运行的是一个一个的项目（如果有多个项目，则每次执行选定启动项目），但是不同项目在一起构成一个解决方案。</p><hr><h3 id="常见快捷键" tabindex="-1">常见快捷键 <a class="header-anchor" href="#常见快捷键" aria-label="Permalink to &quot;常见快捷键&quot;">​</a></h3><table tabindex="0"><thead><tr><th>功能</th><th>快捷键</th></tr></thead><tbody><tr><td>注释</td><td>Ctrl+K+C（先Ctrl+K再Ctrl+C，下文类似）；Ctrl+Shift+/</td></tr><tr><td>取消注释</td><td>Ctrl+K+U；Ctrl+Shift+/（如果中间存在空行则无法取消）</td></tr><tr><td>开始执行</td><td>Ctrl+F5</td></tr><tr><td>撤销</td><td>Ctrl+Z</td></tr><tr><td>反撤销</td><td>Ctrl+Y</td></tr><tr><td>调试</td><td>F5</td></tr><tr><td>缩进</td><td>Tab</td></tr><tr><td>减少缩进</td><td>Shift+Tab</td></tr><tr><td>查找</td><td>Ctrl+F</td></tr><tr><td>跳转到定义</td><td>F12</td></tr><tr><td>折叠代码</td><td>选中需要折叠的代码然后Ctrl+M+M</td></tr><tr><td>取消折叠</td><td>选中需要取消折叠的代码然后Ctrl+M+M</td></tr><tr><td>复制一行到下一行</td><td>Ctrl+D</td></tr><tr><td>复制</td><td>Ctrl+C（光标在某一行直接Ctrl+C可直接复制这一行，不用选中）</td></tr><tr><td>粘贴</td><td>Ctrl+V</td></tr></tbody></table><hr><h3 id="调试程序" tabindex="-1">调试程序 <a class="header-anchor" href="#调试程序" aria-label="Permalink to &quot;调试程序&quot;">​</a></h3><p>调试是软件开发中的一个重要环节。Visual Studio 提供了强大的调试工具，帮助我们发现和修复代码中的错误。</p><h4 id="调试步骤" tabindex="-1">调试步骤 <a class="header-anchor" href="#调试步骤" aria-label="Permalink to &quot;调试步骤&quot;">​</a></h4><h5 id="设置断点" tabindex="-1">设置断点： <a class="header-anchor" href="#设置断点" aria-label="Permalink to &quot;设置断点：&quot;">​</a></h5><ul><li>在代码行号左侧点击，设置一个断点。断点用于暂停程序执行，便于查看程序状态和变量值。</li></ul><h5 id="启动调试" tabindex="-1">启动调试： <a class="header-anchor" href="#启动调试" aria-label="Permalink to &quot;启动调试：&quot;">​</a></h5><ul><li>点击工具栏中的“开始调试”按钮（或按 F5）。</li></ul><h5 id="查看变量" tabindex="-1">查看变量： <a class="header-anchor" href="#查看变量" aria-label="Permalink to &quot;查看变量：&quot;">​</a></h5><ul><li>程序运行到断点的会暂停，你可以在“本地变量”窗口查看当前变量的值。</li></ul><h5 id="逐步执行" tabindex="-1">逐步执行： <a class="header-anchor" href="#逐步执行" aria-label="Permalink to &quot;逐步执行：&quot;">​</a></h5><ul><li>使用“逐步执行”按钮（或按 F10），逐行执行代码，查看程序运行情况。</li></ul><hr><h3 id="扩展与自定义" tabindex="-1">扩展与自定义 <a class="header-anchor" href="#扩展与自定义" aria-label="Permalink to &quot;扩展与自定义&quot;">​</a></h3><p>Visual Studio 支持通过扩展来增强功能，满足不同开发需求。</p><h4 id="安装扩展步骤" tabindex="-1">安装扩展步骤 <a class="header-anchor" href="#安装扩展步骤" aria-label="Permalink to &quot;安装扩展步骤&quot;">​</a></h4><h5 id="打开扩展管理器" tabindex="-1">打开扩展管理器： <a class="header-anchor" href="#打开扩展管理器" aria-label="Permalink to &quot;打开扩展管理器：&quot;">​</a></h5><ul><li>点击菜单栏中的“扩展”-&gt;“管理扩展”。</li></ul><h5 id="浏览和安装" tabindex="-1">浏览和安装： <a class="header-anchor" href="#浏览和安装" aria-label="Permalink to &quot;浏览和安装：&quot;">​</a></h5><ul><li>在弹出的扩展管理器中，浏览或搜索你需要的是扩展。例如，搜索“ResHarper”进行安装。点击“下载”按钮，按照提示完成安装。</li></ul><h5 id="重启-visual-studio" tabindex="-1">重启 Visual Studio： <a class="header-anchor" href="#重启-visual-studio" aria-label="Permalink to &quot;重启 Visual Studio：&quot;">​</a></h5><ul><li>安装完成后，通常需要重启 Visual Studio 以启用扩展。</li></ul><hr><h3 id="版本控制" tabindex="-1">版本控制 <a class="header-anchor" href="#版本控制" aria-label="Permalink to &quot;版本控制&quot;">​</a></h3><p>Visual Studio 集成了 Git 版本控制，便于管理代码版本和协作开发。</p><h4 id="使用-git-的基本步骤" tabindex="-1">使用 Git 的基本步骤 <a class="header-anchor" href="#使用-git-的基本步骤" aria-label="Permalink to &quot;使用 Git 的基本步骤&quot;">​</a></h4><h5 id="初始化-git-仓库" tabindex="-1">初始化 Git 仓库： <a class="header-anchor" href="#初始化-git-仓库" aria-label="Permalink to &quot;初始化 Git 仓库：&quot;">​</a></h5><ul><li>在“解决方案资源管理器”中右键点击项目，选择“Git”-&gt;“初始化 Git 仓库”。</li></ul><h5 id="提交更改" tabindex="-1">提交更改： <a class="header-anchor" href="#提交更改" aria-label="Permalink to &quot;提交更改：&quot;">​</a></h5><ul><li>在“团队资源管理器”中查看并提交代码更改。输入提交信息，点击“提交”。</li></ul><h5 id="推送到远程仓库" tabindex="-1">推送到远程仓库： <a class="header-anchor" href="#推送到远程仓库" aria-label="Permalink to &quot;推送到远程仓库：&quot;">​</a></h5><ul><li>设置远程仓库（如 GitHub、Azure DevOps）。</li><li>在团队资源管理器中，点击“推送”，将本地代码推送到远程仓库。</li></ul><hr><h3 id="常用插件及使用技巧" tabindex="-1">常用插件及使用技巧 <a class="header-anchor" href="#常用插件及使用技巧" aria-label="Permalink to &quot;常用插件及使用技巧&quot;">​</a></h3><h4 id="resharper" tabindex="-1">ResHarper <a class="header-anchor" href="#resharper" aria-label="Permalink to &quot;ResHarper&quot;">​</a></h4><p>ResHarper 是 JetBrains 提供的一款强大的代码分析和重构工具。</p><ul><li>Alt + Enter：显示 ResHarper 提示和操作菜单。</li><li>Ctrl + T：快速查找类型。</li><li>Ctrl + Shift + R：重构菜单。</li><li>Ctrl + Shift + Alt + L：重新格式化代码。</li></ul><h4 id="visual-assist" tabindex="-1">Visual Assist <a class="header-anchor" href="#visual-assist" aria-label="Permalink to &quot;Visual Assist&quot;">​</a></h4><p>Visual Assist 是 Whole Tomato 提供的一款增强代码编辑和导航的插件。</p><ul><li>Alt + G：跳转到定义。</li><li>Alt + O：在头文件和实现文件之间切换。</li><li>Shift + Alt + O：打开文件。</li><li>Alt + M：显示当前文件中的方法列表。</li></ul><h4 id="codemaid" tabindex="-1">CodeMaid <a class="header-anchor" href="#codemaid" aria-label="Permalink to &quot;CodeMaid&quot;">​</a></h4><p>CodeMaid 是一款用于清理和格式化代码的插件。</p><ul><li><strong>Ctrl + M, Ctrl + O</strong>: 折叠所有代码块。</li><li><strong>Ctrl + M, Ctrl + P</strong>: 展开所有代码块。</li><li><strong>Ctrl + K, Ctrl + M</strong>: 清理和格式化当前文档。</li></ul><h4 id="github-extension-for-visual-studio" tabindex="-1">GitHub Extension for Visual Studio <a class="header-anchor" href="#github-extension-for-visual-studio" aria-label="Permalink to &quot;GitHub Extension for Visual Studio&quot;">​</a></h4><p>GitHub Extension for Visual Studio 是一款集成 GitHub 功能的插件。</p><ul><li><strong>Ctrl + Shift + P</strong>: 打开 GitHub 扩展菜单。</li><li>Alt + G: 跳转到 GitHub 仓库页面。</li></ul><h4 id="nuget-package-manager" tabindex="-1">NuGet Package Manager <a class="header-anchor" href="#nuget-package-manager" aria-label="Permalink to &quot;NuGet Package Manager&quot;">​</a></h4><p>NuGet Package Manager 是 Visual Studio 内置的一款包管理工具。</p><ul><li><strong>Ctrl + Q</strong>: 打开搜索框，输入 “NuGet Package Manager” 快速访问。</li><li>Alt + Enter: 打开包管理器控制台。</li></ul><hr><h3 id="自定义代码" tabindex="-1">自定义代码 <a class="header-anchor" href="#自定义代码" aria-label="Permalink to &quot;自定义代码&quot;">​</a></h3><p>代码片段（Code Snippets）是预定义的代码模板，可以通过快捷键快速插入到代码中。Visual Studio 提供了丰富的内置代码片段，也可以创建和导入自定义代码片段。</p><h4 id="自定义代码片段格式" tabindex="-1">自定义代码片段格式 <a class="header-anchor" href="#自定义代码片段格式" aria-label="Permalink to &quot;自定义代码片段格式&quot;">​</a></h4><p>代码片段使用XML来进行自定义，代码片段的 XML 定义以 <code>&lt;codeSnippets&gt;</code> 作为根元素。它通常包含一个 xmlns 属性，用于指定命名空间：</p><div class="language-xml vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">xmlns = &quot;http://schemas.microsoft.com/visualstudio/2005/CodeSnippet&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>这个命名空间是 Visual Studio 用来识别代码片段格式的标准。</p><h5 id="codesnippet-元素" tabindex="-1"><code>&lt;codeSnippet&gt;</code> 元素 <a class="header-anchor" href="#codesnippet-元素" aria-label="Permalink to &quot;\`&lt;codeSnippet&gt;\` 元素&quot;">​</a></h5><ul><li>根元素不是 <code>&lt;codeSnippet&gt;</code> 元素，它有一个 Format 属性，通常设置为 &quot;1.0.0&quot; 来表示代码片段的格式版本。</li></ul><h5 id="header-元素" tabindex="-1"><code>&lt;header&gt;</code> 元素 <a class="header-anchor" href="#header-元素" aria-label="Permalink to &quot;\`&lt;header&gt;\` 元素&quot;">​</a></h5><ul><li><code>&lt;codeSnippet&gt;</code> 元素内包含 <code>&lt;header&gt;</code> 元素，用于描述代码片段的一些基本信息。</li><li><code>&lt;Title&gt;</code> 元素：定义代码片段的标题，这个标题会在代码片段管理器中显示，帮助用户识别代码片段的功能。</li><li><code>&lt;Shortcut&gt;</code> 元素：定义一个快捷指令，用户在代码编辑器中输入快捷指令并按下特定组合键（通常是 Tab 键两次）时，该代码片段会被插入到当前光标位置。</li><li><code>&lt;Description&gt;</code> 元素（可选）：可以用来提供代码片段的高短描述。</li><li><code>&lt;Author&gt;</code> 元素（可选）：用于指定代码片段的作者。</li><li><code>&lt;SnippetTypes&gt;</code> 元素（可选）：用于指定代码片段的类型，例如是方法、类等。它包含一个或多个 <code>&lt;SnippetType&gt;</code> 子元素，其值可以是 Expansion（扩展）、Surroundswith（环绕）等。</li></ul><h5 id="snippet-元素" tabindex="-1"><code>&lt;Snippet&gt;</code> 元素 <a class="header-anchor" href="#snippet-元素" aria-label="Permalink to &quot;\`&lt;Snippet&gt;\` 元素&quot;">​</a></h5><ul><li><code>&lt;Snippet&gt;</code> 元素包含实际的代码内容。</li><li><code>&lt;code&gt;</code> 元素：有一个 Language 属性，用于指定代码的编程语言：</li></ul><table tabindex="0"><thead><tr><th>语言值</th><th>说明</th></tr></thead><tbody><tr><td>VB</td><td>Visual Basic 代码片段。</td></tr><tr><td>CSharp</td><td>C# 代码片段。</td></tr><tr><td>CPP</td><td>C++ 代码片段。</td></tr><tr><td>XAML</td><td>XAML 代码片段。</td></tr><tr><td>XML</td><td>XML 代码片段。</td></tr><tr><td>JavaScript</td><td>JavaScript 代码片段。</td></tr><tr><td>TypeScript</td><td>TypeScript 代码片段。</td></tr><tr><td>SQL</td><td>SQL 代码片段。</td></tr><tr><td>HTML</td><td>HTML 代码片段。</td></tr></tbody></table><ul><li>代码本身被包裹在 <code>&lt;![CDATA[...]]&gt;</code> 中，这是为了防止 XML 解析器对代码中的特殊字符（如 &lt;、&gt; 等）进行错误解析：</li></ul><div class="language-xml vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Code</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &lt;![CDATA[</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    int randNumber = rand()%10;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    ]]&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Code</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h5 id="declarations-元素-可选" tabindex="-1"><code>&lt;Declarations&gt;</code> 元素（可选） <a class="header-anchor" href="#declarations-元素-可选" aria-label="Permalink to &quot;\`&lt;Declarations&gt;\` 元素（可选）&quot;">​</a></h5><ul><li>用于定义代码片段中的变量。它包含一个或多个 <code>&lt;literal&gt;</code> 或 <code>&lt;object&gt;</code> 子元素。</li><li><code>&lt;Literal&gt;</code> 元素：用于定义用户可编辑的文本字段：</li></ul><div class="language-xml vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Declarations</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Literal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">ID</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;number&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">ID</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">ToolTip</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;输入整型&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">ToolTip</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Default</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;0&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Default</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Literal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Declarations</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><ul><li>其中 <code>&lt;ID&gt;</code> 是变量的唯一标识符，<code>&lt;ToolTip&gt;</code> 是鼠标悬停时显示的提示信息，<code>&lt;Default&gt;</code> 是变量的默认值。</li><li><code>&lt;Object&gt;</code> 元素：用于定义基于类型的变量，通常用于引用项目中的对象，如类、方法等。</li></ul><hr><h3 id="第三方库的使用" tabindex="-1">第三方库的使用 <a class="header-anchor" href="#第三方库的使用" aria-label="Permalink to &quot;第三方库的使用&quot;">​</a></h3><p>第三方库是指由独立的开发者或组织创建和维护的，用于特定功能或任务的软件模块集合。这些库提供了一系列预先编写好的函数、类、数据结构和算法等，可以被开发者引用和调用来完成特定的任务。</p><h4 id="步骤流程" tabindex="-1">步骤流程 <a class="header-anchor" href="#步骤流程" aria-label="Permalink to &quot;步骤流程&quot;">​</a></h4><ul><li>从第三方库的官方网站或来源下载所需的库文件。</li><li>打开已有的项目或在Visual Studio中创建一个新的项目。</li><li>添加头文件路径：将库的头文件添加到项目中。右击项目，在弹出菜单中选择“属性”选项，然后进入“C/C++”-&gt;“常规”-&gt;“附加包含目录”，点击编辑，并添加包含库头文件的目录路径。</li><li>添加库文件路径：将库的库文件添加到项目中。同样，在项目的属性设置中，进入“链接器”-&gt;“常规”-&gt;“附加库目录”，点击编辑，然后添加包含库文件的目录路径。</li><li>链接库文件：在“链接器”-&gt;“输入”-&gt;“附加依赖项”，添加你要链接的库文件名（不需要完整路径，只需要文件名即可）。</li></ul>`,86)]))}const k=t(s,[["render",r]]);export{c as __pageData,k as default};
