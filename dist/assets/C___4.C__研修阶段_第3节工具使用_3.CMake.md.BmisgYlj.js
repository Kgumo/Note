import{_ as e,c as t,o as r,a3 as o}from"./chunks/framework.C8Xs1bna.js";const h=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"C++/4.C++研修阶段/第3节工具使用/3.CMake.md","filePath":"C++/4.C++研修阶段/第3节工具使用/3.CMake.md","lastUpdated":1754900608000}'),i={name:"C++/4.C++研修阶段/第3节工具使用/3.CMake.md"};function d(s,a,l,n,_,c){return r(),t("div",null,a[0]||(a[0]=[o('<p>CMake 是一个跨平台的自动化构建工具，下面从几个方面为你介绍：</p><h3 id="核心作用" tabindex="-1">核心作用 <a class="header-anchor" href="#核心作用" aria-label="Permalink to &quot;核心作用&quot;">​</a></h3><p>它主要用于管理软件构建过程，不直接构建出最终的软件，而是为像 Make、Ninja 这类构建工具生成所需的配置文件，如 Unix 系统的 Makefile 或 Windows 系统的 Visual Studio 项目文件。</p><h3 id="优点" tabindex="-1">优点 <a class="header-anchor" href="#优点" aria-label="Permalink to &quot;优点&quot;">​</a></h3><ul><li><strong>跨平台性</strong>：能在不同操作系统（如 Windows、Linux、macOS 等）和编译器（如 GCC、Clang、MSVC 等）上使用，方便开发者在不同环境下构建项目。</li><li><strong>项目管理便利</strong>：可以根据不同的源文件目录结构和编译选项，生成合适的构建脚本，使项目构建更加模块化和可配置。</li></ul><h3 id="使用场景" tabindex="-1">使用场景 <a class="header-anchor" href="#使用场景" aria-label="Permalink to &quot;使用场景&quot;">​</a></h3><p>常用于大型项目的构建管理，在 C、C++、Java 等语言的项目中广泛应用，例如在游戏开发、操作系统开发、大型软件库开发等场景。</p><p>可以参考这个视频</p><p>【CMake 保姆级教程【C/C++】】 <a href="https://www.bilibili.com/video/BV14s4y1g7Zj/?share_source=copy_web&amp;vd_source=3d92aa9d33df3e75ad29563ed567d683" target="_blank" rel="noreferrer">https://www.bilibili.com/video/BV14s4y1g7Zj/?share_source=copy_web&amp;vd_source=3d92aa9d33df3e75ad29563ed567d683</a></p>',9)]))}const C=e(i,[["render",d]]);export{h as __pageData,C as default};
