import{_ as e,c as r,o as t,a3 as i}from"./chunks/framework.C3IOjdSt.js";const f=JSON.parse('{"title":"C++面向对象编程目录","description":"","frontmatter":{},"headers":[],"relativePath":"C++/2.C++基础课程/2.面向对象编程/index.md","filePath":"C++/2.C++基础课程/2.面向对象编程/index.md","lastUpdated":1754900608000}'),l={name:"C++/2.C++基础课程/2.面向对象编程/index.md"};function o(p,a,n,_,d,s){return t(),r("div",null,a[0]||(a[0]=[i('<h1 id="c-面向对象编程目录" tabindex="-1">C++面向对象编程目录 <a class="header-anchor" href="#c-面向对象编程目录" aria-label="Permalink to &quot;C++面向对象编程目录&quot;">​</a></h1><ol><li><p><a href="./01.面向对象编程">面向对象编程</a><br> 理解类与对象的基本概念，掌握封装、继承和多态三大特性，学习如何设计面向对象的程序结构</p></li><li><p><a href="./02.构造函数和析构函数">构造函数和析构函数</a><br> 学习对象的创建与销毁过程，掌握默认构造、拷贝构造、移动构造等特殊成员函数的使用场景和实现方法</p></li><li><p><a href="./03.引用以及拷贝构造和拷贝赋值">引用以及拷贝构造和拷贝赋值</a><br> 深入理解引用类型的特点，掌握深拷贝与浅拷贝的区别，实现安全的拷贝构造函数和拷贝赋值运算符</p></li><li><p><a href="./04.运算符重载和内联">运算符重载和内联</a><br> 学习如何重载+、-、=、== 等运算符使类对象支持常规操作，理解内联函数的优化机制和使用场景</p></li><li><p><a href="./05.类型转换和异常">类型转换和异常</a><br> 掌握自定义类型转换方法（转换构造函数和转换函数），学习C++异常处理机制（try/catch/throw）的最佳实践</p></li><li><p><a href="./06.友元和静态">友元和静态</a><br> 理解友元函数和友元类的特殊访问权限，掌握静态成员变量和静态成员函数在类中的应用</p></li></ol>',2)]))}const h=e(l,[["render",o]]);export{f as __pageData,h as default};
