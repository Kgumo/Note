import{_ as o,C as d,c as g,o as e,a3 as l,j as a,b as i,a as t,w as n,G as p,a4 as m}from"./chunks/framework.C8Xs1bna.js";const E=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"AI/1.机器学习/10.深度学习基础/MLP多层感知机是深度学习最基础的结构.md","filePath":"AI/1.机器学习/10.深度学习基础/MLP多层感知机是深度学习最基础的结构.md","lastUpdated":null}'),c={name:"AI/1.机器学习/10.深度学习基础/MLP多层感知机是深度学习最基础的结构.md"};function u(h,s,y,b,f,z){const r=d("Mermaid");return e(),g("div",null,[s[13]||(s[13]=l('<p><strong>简单介绍一下以及和CNN的对比</strong></p><hr><h3 id="一、mlp是什么-干了什么" tabindex="-1"><strong>一、MLP是什么？干了什么？</strong> <a class="header-anchor" href="#一、mlp是什么-干了什么" aria-label="Permalink to &quot;**一、MLP是什么？干了什么？**&quot;">​</a></h3><h4 id="_1-本质定义" tabindex="-1"><strong>1. 本质定义</strong> <a class="header-anchor" href="#_1-本质定义" aria-label="Permalink to &quot;**1. 本质定义**&quot;">​</a></h4><ul><li><strong>MLP = 多个“神经元层”全连接组成的网络</strong><br> 公式：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi>y</mi><mi>j</mi><mrow><mo>(</mo><mi>l</mi><mo>)</mo></mrow></msubsup><mo>=</mo><mi>f</mi><mo>(</mo><msub><mo>∑</mo><mrow><mi>i</mi></mrow></msub><msubsup><mi>w</mi><mrow><mi>j</mi><mi>i</mi></mrow><mrow><mo>(</mo><mi>l</mi><mo>)</mo></mrow></msubsup><msubsup><mi>y</mi><mi>i</mi><mrow><mo>(</mo><mi>l</mi><mo>−</mo><mn>1</mn><mo>)</mo></mrow></msubsup><mo>+</mo><msubsup><mi>b</mi><mi>j</mi><mrow><mo>(</mo><mi>l</mi><mo>)</mo></mrow></msubsup><mo>)</mo></mrow><annotation encoding="application/x-tex">y_j^{(l)} = f(\\sum_{i} w_{ji}^{(l)} y_i^{(l-1)} + b_j^{(l)})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:1.0448em;"></span><span class="strut bottom" style="height:1.4577719999999998em;vertical-align:-0.4129719999999999em;"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit" style="margin-right:0.03588em;">y</span><span class="vlist"><span style="top:0.2768639999999999em;margin-left:-0.03588em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathit" style="margin-right:0.05724em;">j</span></span></span><span style="top:-0.5198em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mopen">(</span><span class="mord mathit" style="margin-right:0.01968em;">l</span><span class="mclose">)</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mrel">=</span><span class="mord mathit" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mop"><span class="op-symbol small-op mop" style="top:-0.0000050000000000050004em;">∑</span><span class="vlist"><span style="top:0.30001em;margin-right:0.05em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">i</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mord"><span class="mord mathit" style="margin-right:0.02691em;">w</span><span class="vlist"><span style="top:0.2768639999999999em;margin-left:-0.02691em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit" style="margin-right:0.05724em;">j</span><span class="mord mathit">i</span></span></span></span><span style="top:-0.5198em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mopen">(</span><span class="mord mathit" style="margin-right:0.01968em;">l</span><span class="mclose">)</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mord"><span class="mord mathit" style="margin-right:0.03588em;">y</span><span class="vlist"><span style="top:0.27686399999999994em;margin-left:-0.03588em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathit">i</span></span></span><span style="top:-0.5198em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mopen">(</span><span class="mord mathit" style="margin-right:0.01968em;">l</span><span class="mbin">−</span><span class="mord mathrm">1</span><span class="mclose">)</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mbin">+</span><span class="mord"><span class="mord mathit">b</span><span class="vlist"><span style="top:0.2768639999999999em;margin-left:0em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathit" style="margin-right:0.05724em;">j</span></span></span><span style="top:-0.5198em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mopen">(</span><span class="mord mathit" style="margin-right:0.01968em;">l</span><span class="mclose">)</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mclose">)</span></span></span></span><ul><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>w</mi><mrow><mi>j</mi><mi>i</mi></mrow></msub></mrow><annotation encoding="application/x-tex">w_{ji}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.43056em;"></span><span class="strut bottom" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit" style="margin-right:0.02691em;">w</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:-0.02691em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit" style="margin-right:0.05724em;">j</span><span class="mord mathit">i</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span></span>：权重（连接强度）</li><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>b</mi><mi>j</mi></msub></mrow><annotation encoding="application/x-tex">b_j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.69444em;"></span><span class="strut bottom" style="height:0.980548em;vertical-align:-0.286108em;"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit">b</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathit" style="margin-right:0.05724em;">j</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span></span>：偏置（激活阈值）</li><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi></mrow><annotation encoding="application/x-tex">f</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.69444em;"></span><span class="strut bottom" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right:0.10764em;">f</span></span></span></span>：激活函数（如ReLU）</li></ul></li></ul><h4 id="_2-核心功能" tabindex="-1"><strong>2. 核心功能</strong> <a class="header-anchor" href="#_2-核心功能" aria-label="Permalink to &quot;**2. 核心功能**&quot;">​</a></h4>',6)),a("ul",null,[a("li",null,[s[1]||(s[1]=a("strong",null,"特征加工流水线",-1)),s[2]||(s[2]=t("： ",-1)),(e(),i(m,null,{default:n(()=>[p(r,{id:"mermaid-42",class:"mermaid",graph:"graph%20LR%0A%20%20%20%20%E8%BE%93%E5%85%A5%E5%B1%82%20--%3E%20%E9%9A%90%E8%97%8F%E5%B1%821%20--%3E%20%E9%9A%90%E8%97%8F%E5%B1%822%20--%3E%20%E8%BE%93%E5%87%BA%E5%B1%82%0A"})]),fallback:n(()=>s[0]||(s[0]=[t(" Loading... ",-1)])),_:1})),s[3]||(s[3]=a("ul",null,[a("li",null,[a("strong",null,"输入层"),t("：接收原始数据（如784个像素值）")]),a("li",null,[a("strong",null,"隐藏层"),t("：逐层提取特征（层数越多，特征越抽象）")]),a("li",null,[a("strong",null,"输出层"),t("：生成预测结果（如分类概率）")])],-1))])]),s[14]||(s[14]=l('<h4 id="_3-大白话解释" tabindex="-1"><strong>3. 大白话解释</strong> <a class="header-anchor" href="#_3-大白话解释" aria-label="Permalink to &quot;**3. 大白话解释**&quot;">​</a></h4><blockquote><p><strong>把MLP想象成快递分拣工厂</strong>：</p><ol><li><strong>输入层</strong>：快递卸货区（接收包裹数据）</li><li><strong>隐藏层</strong>： <ul><li>第1车间：拆包裹，检查物品类型（提取基础特征）</li><li>第2车间：组合物品（如“书+文具”→学生包裹）</li></ul></li><li><strong>输出层</strong>：贴最终标签（如“学生包裹→教学楼”）<br><strong>关键特点</strong>：每个员工（神经元）必须和下一车间所有员工沟通（全连接）</li></ol></blockquote><hr><h3 id="二、mlp和cnn的关系" tabindex="-1"><strong>二、MLP和CNN的关系</strong> <a class="header-anchor" href="#二、mlp和cnn的关系" aria-label="Permalink to &quot;**二、MLP和CNN的关系**&quot;">​</a></h3><h4 id="_1-本质联系" tabindex="-1"><strong>1. 本质联系</strong> <a class="header-anchor" href="#_1-本质联系" aria-label="Permalink to &quot;**1. 本质联系**&quot;">​</a></h4><ul><li><strong>CNN是MLP的升级版</strong>：<br> MLP处理图像时暴露出两大缺陷 → CNN针对性优化：</li></ul><table tabindex="0"><thead><tr><th>问题</th><th>MLP</th><th>CNN的解决方案</th></tr></thead><tbody><tr><td><strong>参数量爆炸</strong></td><td>全连接导致参数过多（如784x256 = 20万）</td><td><strong>局部连接</strong>：每次只看图像小块</td></tr><tr><td><strong>忽略空间信息</strong></td><td>把图片拆成像素点，失去结构信息</td><td><strong>权重共享</strong>：用同个滤镜扫描全图</td></tr></tbody></table><h4 id="_2-工作方式对比" tabindex="-1"><strong>2. 工作方式对比</strong> <a class="header-anchor" href="#_2-工作方式对比" aria-label="Permalink to &quot;**2. 工作方式对比**&quot;">​</a></h4><table tabindex="0"><thead><tr><th><strong>任务：识别猫图片</strong></th><th>MLP做法</th><th>CNN做法</th></tr></thead><tbody><tr><td><strong>输入处理</strong></td><td>把图片拆成像素列表：[0.2, 0.8, ...]</td><td>保留图片结构，直接看二维像素</td></tr><tr><td><strong>特征提取</strong></td><td>所有像素一视同仁，无空间概念</td><td>用“猫耳检测器”扫描每个区域</td></tr><tr><td><strong>参数量</strong></td><td>100万+（易过拟合）</td><td>1万（权重共享省90%参数）</td></tr><tr><td><strong>适用场景</strong></td><td>结构化数据（如表格）</td><td>图像/语音等空间数据</td></tr></tbody></table><blockquote><p><strong>关键结论</strong>：</p><ul><li><strong>MLP是通用处理器</strong>：适合表格数据、简单分类</li><li><strong>CNN是图像专用处理器</strong>：通过卷积+池化保留空间信息</li></ul></blockquote><hr><h3 id="三、为什么你觉得-看不懂mlp干了啥" tabindex="-1"><strong>三、为什么你觉得“看不懂MLP干了啥”？</strong> <a class="header-anchor" href="#三、为什么你觉得-看不懂mlp干了啥" aria-label="Permalink to &quot;**三、为什么你觉得“看不懂MLP干了啥”？**&quot;">​</a></h3><h4 id="常见理解卡点" tabindex="-1">常见理解卡点： <a class="header-anchor" href="#常见理解卡点" aria-label="Permalink to &quot;常见理解卡点：&quot;">​</a></h4>',13)),a("ol",null,[s[11]||(s[11]=l("<li><p><strong>全连接太抽象</strong>：</p><ul><li>疑惑点：“每个神经元连所有输入？那和逻辑回归有什么区别？”</li><li><strong>关键</strong>：MLP通过<strong>多层隐藏层</strong>实现特征升级，单层时≈逻辑回归</li></ul></li><li><p><strong>激活函数的作用</strong>：</p><ul><li>疑惑点：“加权求和就够了，为什么还要ReLU？”</li><li><strong>核心原因</strong>：不加激活函数，100层MLP ≈ 1层线性回归（失去深度意义）</li></ul></li>",2)),a("li",null,[s[10]||(s[10]=a("p",null,[a("strong",null,"反向传播黑盒"),t("：")],-1)),a("ul",null,[s[9]||(s[9]=a("li",null,"疑惑点：“误差怎么指导第一层权重的更新？”",-1)),a("li",null,[s[5]||(s[5]=a("strong",null,"形象解释",-1)),s[6]||(s[6]=t("： ",-1)),(e(),i(m,null,{default:n(()=>[p(r,{id:"mermaid-289",class:"mermaid",graph:"graph%20RL%0A%20%20%20%20%E8%BE%93%E5%87%BA%E5%B1%82%E8%AF%AF%E5%B7%AE%20--%3E%20%E9%9A%90%E8%97%8F%E5%B1%822%20--%3E%20%E9%9A%90%E8%97%8F%E5%B1%821%0A%20%20%20%20style%20%E8%BE%93%E5%87%BA%E5%B1%82%E8%AF%AF%E5%B7%AE%20fill%3A%23f9f%0A"})]),fallback:n(()=>s[4]||(s[4]=[t(" Loading... ",-1)])),_:1})),s[7]||(s[7]=t("如同工厂发现次品： ",-1)),s[8]||(s[8]=a("ul",null,[a("li",null,"先追责最后车间（输出层）"),a("li",null,"再追责中间车间（隐藏层）"),a("li",null,"最终找到原料问题（输入层）")],-1))])])])]),s[15]||(s[15]=a("hr",null,null,-1)),s[16]||(s[16]=a("h3",{id:"四、mlp在深度学习中的地位",tabindex:"-1"},[a("strong",null,"四、MLP在深度学习中的地位"),t(),a("a",{class:"header-anchor",href:"#四、mlp在深度学习中的地位","aria-label":'Permalink to "**四、MLP在深度学习中的地位**"'},"​")],-1)),(e(),i(m,null,{default:n(()=>[p(r,{id:"mermaid-318",class:"mermaid",graph:"graph%20TB%0A%20%20%20%20A%5B%E5%8D%95%E4%B8%AA%E7%A5%9E%E7%BB%8F%E5%85%83%5D%20--%3E%20B%5B%E5%8D%95%E5%B1%82%E6%84%9F%E7%9F%A5%E6%9C%BA%5D%0A%20%20%20%20B%20--%3E%20C%5BMLP%5D%0A%20%20%20%20C%20--%3E%20D%5BCNN%5D%0A%20%20%20%20C%20--%3E%20E%5BRNN%5D%0A%20%20%20%20D%20--%3E%20F%5BResNet%2FTransformer%5D%0A"})]),fallback:n(()=>s[12]||(s[12]=[t(" Loading... ",-1)])),_:1})),s[17]||(s[17]=l('<ul><li><strong>MLP是基石</strong>：后续所有网络都包含“全连接模块”（如CNN末尾的分类层）</li><li><strong>历史意义</strong>：第一个解决<strong>非线性分类</strong>的神经网络（如XOR问题）</li></ul><hr><h3 id="五、实战建议-何时用mlp" tabindex="-1"><strong>五、实战建议：何时用MLP？</strong> <a class="header-anchor" href="#五、实战建议-何时用mlp" aria-label="Permalink to &quot;**五、实战建议：何时用MLP？**&quot;">​</a></h3><table tabindex="0"><thead><tr><th><strong>场景</strong></th><th><strong>推荐网络</strong></th><th><strong>原因</strong></th></tr></thead><tbody><tr><td>结构化数据（房价预测）</td><td><strong>MLP</strong></td><td>全连接高效处理表格数据</td></tr><tr><td>图像识别</td><td>CNN</td><td>局部特征提取优势明显</td></tr><tr><td>自然语言处理</td><td>Transformer</td><td>注意力机制捕捉长距离依赖</td></tr></tbody></table><blockquote><p>一句话总结：<br><strong>MLP是深度学习的“万能扳手”，CNN是“精密显微镜”</strong></p><ul><li>想基础入门：先掌握MLP（理解梯度下降/激活函数/反向传播）</li><li>想实战图像：立刻学CNN（掌握卷积/池化/迁移学习）</li></ul></blockquote>',5))])}const _=o(c,[["render",u]]);export{E as __pageData,_ as default};
