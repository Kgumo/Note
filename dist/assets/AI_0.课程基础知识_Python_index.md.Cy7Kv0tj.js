import{_ as n,c as e,o as s,a3 as t}from"./chunks/framework.C3IOjdSt.js";const c=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"AI/0.课程基础知识/Python/index.md","filePath":"AI/0.课程基础知识/Python/index.md","lastUpdated":1754900608000}'),p={name:"AI/0.课程基础知识/Python/index.md"};function r(l,a,i,o,h,d){return s(),e("div",null,a[0]||(a[0]=[t(`<p>不建议大家一直学最基础的 一直在学python的数据类型、运算和条件语句 简单看下这部分内容，马上学习使用python的各种包 基础的东西太多了，用到的时候再学和问AI吧</p><p>学习使用<a href="https://obsidiannote.netlify.app/%E7%AC%94%E8%AE%B0/%F0%9F%8F%AB%E6%B8%85%E5%8D%8E%E9%A9%AD%E9%A3%8E%E8%AE%A1%E5%88%92/%F0%9F%A7%B1%E5%9F%BA%E7%A1%80%E8%AF%BE%E7%A8%8B/python%E6%9C%80%E5%B0%8F%E5%8F%AF%E7%94%A8%E7%9F%A5%E8%AF%86/Jupyter%20notebook.html" target="_blank" rel="noreferrer">Jupyter notebook</a>，长得像笔记的一个编译器，界面更通人性一点😂</p><p>数据分析三剑客 <a href="https://obsidiannote.netlify.app/%E7%AC%94%E8%AE%B0/%F0%9F%8F%AB%E6%B8%85%E5%8D%8E%E9%A9%AD%E9%A3%8E%E8%AE%A1%E5%88%92/%F0%9F%A7%B1%E5%9F%BA%E7%A1%80%E8%AF%BE%E7%A8%8B/python%E6%9C%80%E5%B0%8F%E5%8F%AF%E7%94%A8%E7%9F%A5%E8%AF%86/Numpy.html" target="_blank" rel="noreferrer">Numpy</a>提供一种矩阵，构造，运算，访问，赋值的操作 <a href="https://obsidiannote.netlify.app/%E7%AC%94%E8%AE%B0/%F0%9F%8F%AB%E6%B8%85%E5%8D%8E%E9%A9%AD%E9%A3%8E%E8%AE%A1%E5%88%92/%F0%9F%A7%B1%E5%9F%BA%E7%A1%80%E8%AF%BE%E7%A8%8B/python%E6%9C%80%E5%B0%8F%E5%8F%AF%E7%94%A8%E7%9F%A5%E8%AF%86/Pandas.html" target="_blank" rel="noreferrer">Pandas</a>更实用，一维数据和二维表格的处理，去重、查找、替换、分组、聚合等操作 <a href="https://obsidiannote.netlify.app/%E7%AC%94%E8%AE%B0/%F0%9F%8F%AB%E6%B8%85%E5%8D%8E%E9%A9%AD%E9%A3%8E%E8%AE%A1%E5%88%92/%F0%9F%A7%B1%E5%9F%BA%E7%A1%80%E8%AF%BE%E7%A8%8B/python%E6%9C%80%E5%B0%8F%E5%8F%AF%E7%94%A8%E7%9F%A5%E8%AF%86/Matplotlib.html" target="_blank" rel="noreferrer">Matplotlib</a>数据的可视化包，画布，绘图的所有元素，丰富的调色功能，2D和3D图像的绘制</p><p>这三个家伙，融合了数据的运算、处理和可视化 撑起来了数据分析的一片天</p><p>更深入一点，数据挖掘的话，用到sklearn，机器学习的一个包</p><h2 id="官方手册" tabindex="-1">官方手册 <a class="header-anchor" href="#官方手册" aria-label="Permalink to &quot;官方手册&quot;">​</a></h2><p><a href="https://docs.python.org/3/tutorial/" target="_blank" rel="noreferrer">The Python Tutorial — Python 3.13.3 documentation</a></p><h2 id="安装" tabindex="-1">安装 <a class="header-anchor" href="#安装" aria-label="Permalink to &quot;安装&quot;">​</a></h2><h3 id="环境变量" tabindex="-1">环境变量 <a class="header-anchor" href="#环境变量" aria-label="Permalink to &quot;环境变量&quot;">​</a></h3><blockquote><p>以win11 为例</p></blockquote><ol><li>下载适合自己的版本 www.python.org</li><li>环境配置： <ol><li>按下 <code>Win + S</code> 搜索 <strong>&quot;环境变量&quot;</strong>，选择 <strong>&quot;编辑系统环境变量&quot;</strong>。在弹出的窗口中，点击右下角的 <strong>&quot;环境变量&quot;</strong> 按钮</li><li>Path配置</li></ol></li></ol><h4 id="成功的标志" tabindex="-1">成功的标志 <a class="header-anchor" href="#成功的标志" aria-label="Permalink to &quot;成功的标志&quot;">​</a></h4><p>打开新的命令提示符（或 PowerShell），输入：</p><p>bash</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>python --version</span></span>
<span class="line"><span>pip --version</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>如果能正常输出版本号，则配置成功。</p><p><img src="https://obsidiannote.netlify.app/assets/Pasted%20image%2020250527192222.DvIWs6EK.png" alt=""></p><h3 id="pycharm-编译器" tabindex="-1">Pycharm 编译器 <a class="header-anchor" href="#pycharm-编译器" aria-label="Permalink to &quot;Pycharm 编译器&quot;">​</a></h3><ol><li>下载 <a href="https://www.jetbrains.com/pycharm/" target="_blank" rel="noreferrer">PyCharm: The only Python IDE you need</a> community即可</li><li>新建项目</li><li>New——package</li></ol><h2 id="基础" tabindex="-1">基础 <a class="header-anchor" href="#基础" aria-label="Permalink to &quot;基础&quot;">​</a></h2><p>了解一下数据类型、基本运算、条件语句</p><p>//是除的时候向下取整，多的小数就不要了 两个星号是幂运算 一个等号是赋值 两个等号是判断</p><h3 id="函数" tabindex="-1">函数 <a class="header-anchor" href="#函数" aria-label="Permalink to &quot;函数&quot;">​</a></h3><p>抽象出一个功能，定义一个函数 组织好的、可重复使用的代码块，用于执行单一或相关联的任务。函数能提高代码的模块化程度和复用性</p><p>python</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>def 函数名(参数1, 参数2, ...):</span></span>
<span class="line"><span>    &quot;&quot;&quot;函数文档字符串（可选）&quot;&quot;&quot;</span></span>
<span class="line"><span>    函数体</span></span>
<span class="line"><span>    return 返回值  # 可选</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>python</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>def add(a, b):</span></span>
<span class="line"><span>    &quot;&quot;&quot;计算两个数的和&quot;&quot;&quot;</span></span>
<span class="line"><span>    return a + b</span></span>
<span class="line"><span></span></span>
<span class="line"><span>result = add(3, 5)  # 调用函数</span></span>
<span class="line"><span>print(result)  # 输出: 8</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="面向对象编程" tabindex="-1">面向对象编程 <a class="header-anchor" href="#面向对象编程" aria-label="Permalink to &quot;面向对象编程&quot;">​</a></h3>`,29)]))}const u=n(p,[["render",r]]);export{c as __pageData,u as default};
